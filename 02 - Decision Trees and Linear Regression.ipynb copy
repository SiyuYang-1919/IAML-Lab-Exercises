{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Introductory applied machine learning (INFR10069) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Lab 2: Decision trees and linear regression"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In the first part of this lab we perform Decision trees classification on the [German credit](http://archive.ics.uci.edu/ml/datasets/Statlog+%28German+Credit+Data%29) data set. In the second part we learn how to train simple linear regression model by using the [CPU performance](https://archive.ics.uci.edu/ml/datasets/Computer+Hardware) data set. Both datasets (`credit.csv` and `cpu.csv`) are located within the `datasets` directory (adjacent to this file)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As always, first activate the python environment if not already done so (remember to exclude 'source' if you're on windows):"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```{bash}\n",
    "source activate py3iaml\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now let's import the packages (*This will generate some warnings related to the libraries: ignore*):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda3/envs/py3iaml/lib/python3.7/site-packages/sklearn/utils/__init__.py:4: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working\n",
      "  from collections import Sequence\n",
      "/opt/anaconda3/envs/py3iaml/lib/python3.7/site-packages/sklearn/ensemble/weight_boosting.py:29: DeprecationWarning: numpy.core.umath_tests is an internal NumPy module and should not be imported. It will be removed in a future NumPy release.\n",
      "  from numpy.core.umath_tests import inner1d\n"
     ]
    }
   ],
   "source": [
    "# Import packages\n",
    "import os\n",
    "import numpy as np \n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import graphviz\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.tree import DecisionTreeClassifier, export_graphviz\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.metrics import accuracy_score, confusion_matrix, r2_score\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. Decision Trees\n",
    "One of the great advantages of decision trees is their interpretability. The rules learnt for classification are easy for a person to follow, unlike the opaque \"black box\" of many other methods, such as neural networks. We demonstrate the utility of this using a German credit data set. You can read a description of this dataset at the [UCI site](http://archive.ics.uci.edu/ml/datasets/Statlog+%28German+Credit+Data%29). The task is to predict whether a loan approval is good or bad credit risk based on 20 attributes. We've simplified the data set somewhat, particularly making attribute names and values more meaningful."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "We will load the credit dataset into a pandas DataFrame structure. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Load the dataset\n",
    "data_path = os.path.join(os.getcwd(), 'datasets', 'credit.csv')\n",
    "credit = pd.read_csv(data_path, delimiter = ',')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 1.1 ==========\n",
    "Display the number of data points and attributes in the dataset. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1001 entries, 0 to 1000\n",
      "Data columns (total 21 columns):\n",
      "CheckingAccount     1001 non-null object\n",
      "Duration            1001 non-null float64\n",
      "CreditHistory       1001 non-null object\n",
      "Purpose             1001 non-null object\n",
      "CreditAmount        1001 non-null float64\n",
      "SavingsAccount      1001 non-null object\n",
      "YearsEmployed       1001 non-null object\n",
      "InstallmentRate     1001 non-null float64\n",
      "PersonalStatus      1001 non-null object\n",
      "OtherDebtors        1001 non-null object\n",
      "ResidentSince       1001 non-null float64\n",
      "Property            1001 non-null object\n",
      "Age                 1001 non-null float64\n",
      "OtherPlans          1001 non-null object\n",
      "Housing             1001 non-null object\n",
      "NumCreditsAtBank    1001 non-null float64\n",
      "Job                 1001 non-null object\n",
      "Dependents          1001 non-null float64\n",
      "Telephone           1001 non-null object\n",
      "Foreign             1001 non-null object\n",
      "Approve             1001 non-null object\n",
      "dtypes: float64(7), object(14)\n",
      "memory usage: 164.3+ KB\n"
     ]
    }
   ],
   "source": [
    "# Your Code goes here:\n",
    "credit.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 1.2 ==========\n",
    "Get a feeling of the data by using pandas `describe()` method. Be careful - there is a mixture of numeric and categorical data and hence will need to output it in two stages:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Duration</th>\n",
       "      <th>CreditAmount</th>\n",
       "      <th>InstallmentRate</th>\n",
       "      <th>ResidentSince</th>\n",
       "      <th>Age</th>\n",
       "      <th>NumCreditsAtBank</th>\n",
       "      <th>Dependents</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1001.000000</td>\n",
       "      <td>1.001000e+03</td>\n",
       "      <td>1001.000000</td>\n",
       "      <td>1001.000000</td>\n",
       "      <td>1001.000000</td>\n",
       "      <td>1001.000000</td>\n",
       "      <td>1001.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>20.882118</td>\n",
       "      <td>-9.957330e+05</td>\n",
       "      <td>-7.019980</td>\n",
       "      <td>2.842158</td>\n",
       "      <td>35.217782</td>\n",
       "      <td>0.406593</td>\n",
       "      <td>0.969031</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>12.070878</td>\n",
       "      <td>3.160708e+07</td>\n",
       "      <td>316.165715</td>\n",
       "      <td>1.106825</td>\n",
       "      <td>15.398264</td>\n",
       "      <td>31.656714</td>\n",
       "      <td>5.894916</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>-1.000000e+09</td>\n",
       "      <td>-10000.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-293.000000</td>\n",
       "      <td>-1000.000000</td>\n",
       "      <td>-185.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>12.000000</td>\n",
       "      <td>1.364000e+03</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>27.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>18.000000</td>\n",
       "      <td>2.319000e+03</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>24.000000</td>\n",
       "      <td>3.972000e+03</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>72.000000</td>\n",
       "      <td>1.842400e+04</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Duration  CreditAmount  InstallmentRate  ResidentSince          Age  \\\n",
       "count  1001.000000  1.001000e+03      1001.000000    1001.000000  1001.000000   \n",
       "mean     20.882118 -9.957330e+05        -7.019980       2.842158    35.217782   \n",
       "std      12.070878  3.160708e+07       316.165715       1.106825    15.398264   \n",
       "min       0.000000 -1.000000e+09    -10000.000000       0.000000  -293.000000   \n",
       "25%      12.000000  1.364000e+03         2.000000       2.000000    27.000000   \n",
       "50%      18.000000  2.319000e+03         3.000000       3.000000    33.000000   \n",
       "75%      24.000000  3.972000e+03         4.000000       4.000000    42.000000   \n",
       "max      72.000000  1.842400e+04         4.000000       4.000000    75.000000   \n",
       "\n",
       "       NumCreditsAtBank   Dependents  \n",
       "count       1001.000000  1001.000000  \n",
       "mean           0.406593     0.969031  \n",
       "std           31.656714     5.894916  \n",
       "min        -1000.000000  -185.000000  \n",
       "25%            1.000000     1.000000  \n",
       "50%            1.000000     1.000000  \n",
       "75%            2.000000     1.000000  \n",
       "max            4.000000     2.000000  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Output Numeric Data\n",
    "# Your Code goes here:\n",
    "credit.describe(include=[np.number])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CheckingAccount</th>\n",
       "      <th>CreditHistory</th>\n",
       "      <th>Purpose</th>\n",
       "      <th>SavingsAccount</th>\n",
       "      <th>YearsEmployed</th>\n",
       "      <th>PersonalStatus</th>\n",
       "      <th>OtherDebtors</th>\n",
       "      <th>Property</th>\n",
       "      <th>OtherPlans</th>\n",
       "      <th>Housing</th>\n",
       "      <th>Job</th>\n",
       "      <th>Telephone</th>\n",
       "      <th>Foreign</th>\n",
       "      <th>Approve</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1001</td>\n",
       "      <td>1001</td>\n",
       "      <td>1001</td>\n",
       "      <td>1001</td>\n",
       "      <td>1001</td>\n",
       "      <td>1001</td>\n",
       "      <td>1001</td>\n",
       "      <td>1001</td>\n",
       "      <td>1001</td>\n",
       "      <td>1001</td>\n",
       "      <td>1001</td>\n",
       "      <td>1001</td>\n",
       "      <td>1001</td>\n",
       "      <td>1001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>10</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>none</td>\n",
       "      <td>ok_til_now</td>\n",
       "      <td>television</td>\n",
       "      <td>&lt;100</td>\n",
       "      <td>&lt;4</td>\n",
       "      <td>male_single</td>\n",
       "      <td>none</td>\n",
       "      <td>car</td>\n",
       "      <td>none</td>\n",
       "      <td>own</td>\n",
       "      <td>skilled</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>good</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>394</td>\n",
       "      <td>530</td>\n",
       "      <td>280</td>\n",
       "      <td>603</td>\n",
       "      <td>339</td>\n",
       "      <td>548</td>\n",
       "      <td>908</td>\n",
       "      <td>333</td>\n",
       "      <td>815</td>\n",
       "      <td>714</td>\n",
       "      <td>631</td>\n",
       "      <td>596</td>\n",
       "      <td>963</td>\n",
       "      <td>701</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       CheckingAccount CreditHistory     Purpose SavingsAccount YearsEmployed  \\\n",
       "count             1001          1001        1001           1001          1001   \n",
       "unique               4             5          10              5             5   \n",
       "top               none    ok_til_now  television           <100            <4   \n",
       "freq               394           530         280            603           339   \n",
       "\n",
       "       PersonalStatus OtherDebtors Property OtherPlans Housing      Job  \\\n",
       "count            1001         1001     1001       1001    1001     1001   \n",
       "unique              5            3        4          3       3        4   \n",
       "top       male_single         none      car       none     own  skilled   \n",
       "freq              548          908      333        815     714      631   \n",
       "\n",
       "       Telephone Foreign Approve  \n",
       "count       1001    1001    1001  \n",
       "unique         2       2       2  \n",
       "top           no     yes    good  \n",
       "freq         596     963     701  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Output Categorical Data\n",
    "# Your Code goes here:\n",
    "credit.describe(include=[object])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 1.3 ==========\n",
    "Display the first 10 data points of the dataset\n",
    "\n",
    "*TIP*: You may need to set the option to display all columns: look at [pandas.set_option](https://pandas.pydata.org/pandas-docs/version/0.23.4/generated/pandas.set_option.html)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CheckingAccount</th>\n",
       "      <th>Duration</th>\n",
       "      <th>CreditHistory</th>\n",
       "      <th>Purpose</th>\n",
       "      <th>CreditAmount</th>\n",
       "      <th>SavingsAccount</th>\n",
       "      <th>YearsEmployed</th>\n",
       "      <th>InstallmentRate</th>\n",
       "      <th>PersonalStatus</th>\n",
       "      <th>OtherDebtors</th>\n",
       "      <th>...</th>\n",
       "      <th>Property</th>\n",
       "      <th>Age</th>\n",
       "      <th>OtherPlans</th>\n",
       "      <th>Housing</th>\n",
       "      <th>NumCreditsAtBank</th>\n",
       "      <th>Job</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>Telephone</th>\n",
       "      <th>Foreign</th>\n",
       "      <th>Approve</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>&lt;0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>ok</td>\n",
       "      <td>furniture</td>\n",
       "      <td>-1.000000e+09</td>\n",
       "      <td>unknown</td>\n",
       "      <td>unemployed</td>\n",
       "      <td>-10000.0</td>\n",
       "      <td>female_single</td>\n",
       "      <td>none</td>\n",
       "      <td>...</td>\n",
       "      <td>car</td>\n",
       "      <td>-293.0</td>\n",
       "      <td>none</td>\n",
       "      <td>own</td>\n",
       "      <td>-1000.0</td>\n",
       "      <td>skilled</td>\n",
       "      <td>-185.0</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>good</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>&lt;0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>critical</td>\n",
       "      <td>television</td>\n",
       "      <td>1.169000e+03</td>\n",
       "      <td>unknown</td>\n",
       "      <td>&gt;=7</td>\n",
       "      <td>4.0</td>\n",
       "      <td>male_single</td>\n",
       "      <td>none</td>\n",
       "      <td>...</td>\n",
       "      <td>real_estate</td>\n",
       "      <td>67.0</td>\n",
       "      <td>none</td>\n",
       "      <td>own</td>\n",
       "      <td>2.0</td>\n",
       "      <td>skilled</td>\n",
       "      <td>1.0</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>good</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>&lt;200</td>\n",
       "      <td>48.0</td>\n",
       "      <td>ok_til_now</td>\n",
       "      <td>television</td>\n",
       "      <td>5.951000e+03</td>\n",
       "      <td>&lt;100</td>\n",
       "      <td>&lt;4</td>\n",
       "      <td>2.0</td>\n",
       "      <td>female</td>\n",
       "      <td>none</td>\n",
       "      <td>...</td>\n",
       "      <td>real_estate</td>\n",
       "      <td>22.0</td>\n",
       "      <td>none</td>\n",
       "      <td>own</td>\n",
       "      <td>1.0</td>\n",
       "      <td>skilled</td>\n",
       "      <td>1.0</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>none</td>\n",
       "      <td>12.0</td>\n",
       "      <td>critical</td>\n",
       "      <td>education</td>\n",
       "      <td>2.096000e+03</td>\n",
       "      <td>&lt;100</td>\n",
       "      <td>&lt;7</td>\n",
       "      <td>2.0</td>\n",
       "      <td>male_single</td>\n",
       "      <td>none</td>\n",
       "      <td>...</td>\n",
       "      <td>real_estate</td>\n",
       "      <td>49.0</td>\n",
       "      <td>none</td>\n",
       "      <td>own</td>\n",
       "      <td>1.0</td>\n",
       "      <td>unskilled</td>\n",
       "      <td>2.0</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>good</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>&lt;0</td>\n",
       "      <td>42.0</td>\n",
       "      <td>ok_til_now</td>\n",
       "      <td>furniture</td>\n",
       "      <td>7.882000e+03</td>\n",
       "      <td>&lt;100</td>\n",
       "      <td>&lt;7</td>\n",
       "      <td>2.0</td>\n",
       "      <td>male_single</td>\n",
       "      <td>guarantor</td>\n",
       "      <td>...</td>\n",
       "      <td>savings</td>\n",
       "      <td>45.0</td>\n",
       "      <td>none</td>\n",
       "      <td>free</td>\n",
       "      <td>1.0</td>\n",
       "      <td>skilled</td>\n",
       "      <td>2.0</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>good</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>&lt;0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>past_delays</td>\n",
       "      <td>car_new</td>\n",
       "      <td>4.870000e+03</td>\n",
       "      <td>&lt;100</td>\n",
       "      <td>&lt;4</td>\n",
       "      <td>3.0</td>\n",
       "      <td>male_single</td>\n",
       "      <td>none</td>\n",
       "      <td>...</td>\n",
       "      <td>unknown</td>\n",
       "      <td>53.0</td>\n",
       "      <td>none</td>\n",
       "      <td>free</td>\n",
       "      <td>2.0</td>\n",
       "      <td>skilled</td>\n",
       "      <td>2.0</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>none</td>\n",
       "      <td>36.0</td>\n",
       "      <td>ok_til_now</td>\n",
       "      <td>education</td>\n",
       "      <td>9.055000e+03</td>\n",
       "      <td>unknown</td>\n",
       "      <td>&lt;4</td>\n",
       "      <td>2.0</td>\n",
       "      <td>male_single</td>\n",
       "      <td>none</td>\n",
       "      <td>...</td>\n",
       "      <td>unknown</td>\n",
       "      <td>35.0</td>\n",
       "      <td>none</td>\n",
       "      <td>free</td>\n",
       "      <td>1.0</td>\n",
       "      <td>unskilled</td>\n",
       "      <td>2.0</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>good</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>none</td>\n",
       "      <td>24.0</td>\n",
       "      <td>ok_til_now</td>\n",
       "      <td>furniture</td>\n",
       "      <td>2.835000e+03</td>\n",
       "      <td>&lt;1000</td>\n",
       "      <td>&gt;=7</td>\n",
       "      <td>3.0</td>\n",
       "      <td>male_single</td>\n",
       "      <td>none</td>\n",
       "      <td>...</td>\n",
       "      <td>savings</td>\n",
       "      <td>53.0</td>\n",
       "      <td>none</td>\n",
       "      <td>own</td>\n",
       "      <td>1.0</td>\n",
       "      <td>skilled</td>\n",
       "      <td>1.0</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>good</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>&lt;200</td>\n",
       "      <td>36.0</td>\n",
       "      <td>ok_til_now</td>\n",
       "      <td>car_used</td>\n",
       "      <td>6.948000e+03</td>\n",
       "      <td>&lt;100</td>\n",
       "      <td>&lt;4</td>\n",
       "      <td>2.0</td>\n",
       "      <td>male_single</td>\n",
       "      <td>none</td>\n",
       "      <td>...</td>\n",
       "      <td>car</td>\n",
       "      <td>35.0</td>\n",
       "      <td>none</td>\n",
       "      <td>rent</td>\n",
       "      <td>1.0</td>\n",
       "      <td>management</td>\n",
       "      <td>1.0</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>good</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>none</td>\n",
       "      <td>12.0</td>\n",
       "      <td>ok_til_now</td>\n",
       "      <td>television</td>\n",
       "      <td>3.059000e+03</td>\n",
       "      <td>&gt;=1000</td>\n",
       "      <td>&lt;7</td>\n",
       "      <td>2.0</td>\n",
       "      <td>male_divorced</td>\n",
       "      <td>none</td>\n",
       "      <td>...</td>\n",
       "      <td>real_estate</td>\n",
       "      <td>61.0</td>\n",
       "      <td>none</td>\n",
       "      <td>own</td>\n",
       "      <td>1.0</td>\n",
       "      <td>unskilled</td>\n",
       "      <td>1.0</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>good</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  CheckingAccount  Duration CreditHistory     Purpose  CreditAmount  \\\n",
       "0              <0       0.0            ok   furniture -1.000000e+09   \n",
       "1              <0       6.0      critical  television  1.169000e+03   \n",
       "2            <200      48.0    ok_til_now  television  5.951000e+03   \n",
       "3            none      12.0      critical   education  2.096000e+03   \n",
       "4              <0      42.0    ok_til_now   furniture  7.882000e+03   \n",
       "5              <0      24.0   past_delays     car_new  4.870000e+03   \n",
       "6            none      36.0    ok_til_now   education  9.055000e+03   \n",
       "7            none      24.0    ok_til_now   furniture  2.835000e+03   \n",
       "8            <200      36.0    ok_til_now    car_used  6.948000e+03   \n",
       "9            none      12.0    ok_til_now  television  3.059000e+03   \n",
       "\n",
       "  SavingsAccount YearsEmployed  InstallmentRate PersonalStatus OtherDebtors  \\\n",
       "0        unknown    unemployed         -10000.0  female_single         none   \n",
       "1        unknown           >=7              4.0    male_single         none   \n",
       "2           <100            <4              2.0         female         none   \n",
       "3           <100            <7              2.0    male_single         none   \n",
       "4           <100            <7              2.0    male_single    guarantor   \n",
       "5           <100            <4              3.0    male_single         none   \n",
       "6        unknown            <4              2.0    male_single         none   \n",
       "7          <1000           >=7              3.0    male_single         none   \n",
       "8           <100            <4              2.0    male_single         none   \n",
       "9         >=1000            <7              2.0  male_divorced         none   \n",
       "\n",
       "    ...       Property    Age  OtherPlans Housing NumCreditsAtBank  \\\n",
       "0   ...            car -293.0        none     own          -1000.0   \n",
       "1   ...    real_estate   67.0        none     own              2.0   \n",
       "2   ...    real_estate   22.0        none     own              1.0   \n",
       "3   ...    real_estate   49.0        none     own              1.0   \n",
       "4   ...        savings   45.0        none    free              1.0   \n",
       "5   ...        unknown   53.0        none    free              2.0   \n",
       "6   ...        unknown   35.0        none    free              1.0   \n",
       "7   ...        savings   53.0        none     own              1.0   \n",
       "8   ...            car   35.0        none    rent              1.0   \n",
       "9   ...    real_estate   61.0        none     own              1.0   \n",
       "\n",
       "          Job Dependents  Telephone Foreign Approve  \n",
       "0     skilled     -185.0        yes      no    good  \n",
       "1     skilled        1.0        yes     yes    good  \n",
       "2     skilled        1.0         no     yes     bad  \n",
       "3   unskilled        2.0         no     yes    good  \n",
       "4     skilled        2.0         no     yes    good  \n",
       "5     skilled        2.0         no     yes     bad  \n",
       "6   unskilled        2.0        yes     yes    good  \n",
       "7     skilled        1.0         no     yes    good  \n",
       "8  management        1.0        yes     yes    good  \n",
       "9   unskilled        1.0         no     yes    good  \n",
       "\n",
       "[10 rows x 21 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Your Code goes here:\n",
    "credit.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 1.4 ==========\n",
    "When presented with a dataset, it is usually a good idea to visualise it first. By using seaborn's [pairplot](https://seaborn.github.io/generated/seaborn.pairplot.html?highlight=pairplot#seaborn.pairplot) function, try visualising a scatter plot of the `Age` and `Duration` variables. You can use the `Approve` variable as the `hue` parameter to visualise results separately for each class. Do you notice anything unusual?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.PairGrid at 0x7fbab4052450>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 420.75x360 with 6 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Your Code goes here:\n",
    "palette = sns.color_palette('Set2')\n",
    "sns.pairplot(credit, hue='Approve', vars=['Age', 'Duration'], \n",
    "             diag_kind='hist', markers=['x', 'o'],\n",
    "             palette=palette)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "***Your answer goes here:***\n",
    "\n",
    "It is obviuosly that we have an outlier here. And this outlier is clearly not reasonable with minus number in 'age' 🤯."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 1.5 ==========\n",
    "In the previous point you should have found a data point, which seems to be corrupted, as some of its values are nonsensical. Even a single point like this can significantly affect the performance of a classifier. How do you think it would affect Decision trees? How about Naive Bayes? A good way to check this is to test the performance of each classifier before and after removing this datapoint."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "***Your answer goes here:***\n",
    "\n",
    "```DT:``` I personally think that a single outlier itself would not have much impact on the performance of a Decision Tree classifier. It is very likely that this outlier itself will become a node, which will not influence the classification of other instances.\n",
    "\n",
    "```NB:``` The performance of Naive Bayes classifier will be influenced. The parameters for the model of the feature, 'Age', can be biased. If we do not transform the values of this feature, we may assume that this feature is normally distributed and we need to estimate the parameters (mean, variance) of the Gaussian model, considering its values are continuous integers. An outlier like the one above will surely affect the estimation of parameters, hence the performance of the classifier."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 1.6 ==========\n",
    "Now we want to remove this instance from the dataset by using a filter. In general, we want to remove all instances, where the age of an applicant is lower than 0 years, as this suggests that the instance is corrupted. Use logical indexing to get rid of these instances without creating a new dataframe. Display the number of data points after any outliers have been removed."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1000"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Your Code goes here:\n",
    "credit = credit[credit['Age'] > 0]\n",
    "credit.shape[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Categorical Data and Encoding"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 1.7 ==========\n",
    "\n",
    "You might have noticed that most of the attributes in the dataset are in fact discrete. Now we want to know which variables exactly are discrete (both categorical and numerical, look [here](http://stats.stackexchange.com/questions/206/what-is-the-difference-between-discrete-data-and-continuous-data) if you are unsure about the difference) and which are continuous variables. In order to do so, we will inspect the number of possible values that each attribute can take. \n",
    "\n",
    "Display the number of values each attributes takes in the dataset. *Hint: As a first step, you want to loop over the columns of the DataFrame. Then you might find the numpy `unique` function quite useful.*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'CheckingAccount': 4,\n",
       " 'Duration': 33,\n",
       " 'CreditHistory': 5,\n",
       " 'Purpose': 10,\n",
       " 'CreditAmount': 921,\n",
       " 'SavingsAccount': 5,\n",
       " 'YearsEmployed': 5,\n",
       " 'InstallmentRate': 4,\n",
       " 'PersonalStatus': 4,\n",
       " 'OtherDebtors': 3,\n",
       " 'ResidentSince': 4,\n",
       " 'Property': 4,\n",
       " 'Age': 53,\n",
       " 'OtherPlans': 3,\n",
       " 'Housing': 3,\n",
       " 'NumCreditsAtBank': 4,\n",
       " 'Job': 4,\n",
       " 'Dependents': 2,\n",
       " 'Telephone': 2,\n",
       " 'Foreign': 2,\n",
       " 'Approve': 2}"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Your Code goes here:\n",
    "values_num = {}\n",
    "for column in credit.columns:\n",
    "    num = len(credit[column].unique())\n",
    "    values_num[column] = num\n",
    "values_num"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It seems like the variables `Duration`, `CreditAmount` and `Age` are continuous and all the rest are discrete. The discrete variables are not in a very convenient format though. Ideally we would want the discrete attributes to take values between `0` and `n_values-1`. Pandas has a handy way of dealing with [Categorical](https://pandas.pydata.org/pandas-docs/version/0.23.4/categorical.html) data, which you are encouraged to get familiar with.\n",
    "\n",
    "We will create a new DataFrame called `credit_clean` and convert all the discrete variables from `credit` into pandas Categorical types. Remember, we want to change the discrete variables only, so we will have to exclude the `CreditAmount`, `Age` and `Duration` attributes. Also, we don't really mind if the target variable is categorical, so we won't be transforming the `Approve` attribute either. Execute the cell below and make sure you understand what it does."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "credit_clean = credit.copy(deep=True) # Make a copy of the DataFrame\n",
    "for column in credit_clean.columns:   \n",
    "    if column not in ['CreditAmount', 'Age', 'Duration', 'Approve']: # Exclude non discrete columns and the target\n",
    "        credit_clean[column] = credit_clean[column].astype('category') # Convert using astype(...) method"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 1.8 ==========\n",
    "Display the first 10 data points of the clean data. Does it look like what you expected?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 1000 entries, 1 to 1000\n",
      "Data columns (total 21 columns):\n",
      "CheckingAccount     1000 non-null category\n",
      "Duration            1000 non-null float64\n",
      "CreditHistory       1000 non-null category\n",
      "Purpose             1000 non-null category\n",
      "CreditAmount        1000 non-null float64\n",
      "SavingsAccount      1000 non-null category\n",
      "YearsEmployed       1000 non-null category\n",
      "InstallmentRate     1000 non-null category\n",
      "PersonalStatus      1000 non-null category\n",
      "OtherDebtors        1000 non-null category\n",
      "ResidentSince       1000 non-null category\n",
      "Property            1000 non-null category\n",
      "Age                 1000 non-null float64\n",
      "OtherPlans          1000 non-null category\n",
      "Housing             1000 non-null category\n",
      "NumCreditsAtBank    1000 non-null category\n",
      "Job                 1000 non-null category\n",
      "Dependents          1000 non-null category\n",
      "Telephone           1000 non-null category\n",
      "Foreign             1000 non-null category\n",
      "Approve             1000 non-null object\n",
      "dtypes: category(17), float64(3), object(1)\n",
      "memory usage: 58.5+ KB\n"
     ]
    }
   ],
   "source": [
    "credit_clean.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CheckingAccount</th>\n",
       "      <th>Duration</th>\n",
       "      <th>CreditHistory</th>\n",
       "      <th>Purpose</th>\n",
       "      <th>CreditAmount</th>\n",
       "      <th>SavingsAccount</th>\n",
       "      <th>YearsEmployed</th>\n",
       "      <th>InstallmentRate</th>\n",
       "      <th>PersonalStatus</th>\n",
       "      <th>OtherDebtors</th>\n",
       "      <th>...</th>\n",
       "      <th>Property</th>\n",
       "      <th>Age</th>\n",
       "      <th>OtherPlans</th>\n",
       "      <th>Housing</th>\n",
       "      <th>NumCreditsAtBank</th>\n",
       "      <th>Job</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>Telephone</th>\n",
       "      <th>Foreign</th>\n",
       "      <th>Approve</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>&lt;0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>critical</td>\n",
       "      <td>television</td>\n",
       "      <td>1169.0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>&gt;=7</td>\n",
       "      <td>4.0</td>\n",
       "      <td>male_single</td>\n",
       "      <td>none</td>\n",
       "      <td>...</td>\n",
       "      <td>real_estate</td>\n",
       "      <td>67.0</td>\n",
       "      <td>none</td>\n",
       "      <td>own</td>\n",
       "      <td>2.0</td>\n",
       "      <td>skilled</td>\n",
       "      <td>1.0</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>good</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>&lt;200</td>\n",
       "      <td>48.0</td>\n",
       "      <td>ok_til_now</td>\n",
       "      <td>television</td>\n",
       "      <td>5951.0</td>\n",
       "      <td>&lt;100</td>\n",
       "      <td>&lt;4</td>\n",
       "      <td>2.0</td>\n",
       "      <td>female</td>\n",
       "      <td>none</td>\n",
       "      <td>...</td>\n",
       "      <td>real_estate</td>\n",
       "      <td>22.0</td>\n",
       "      <td>none</td>\n",
       "      <td>own</td>\n",
       "      <td>1.0</td>\n",
       "      <td>skilled</td>\n",
       "      <td>1.0</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>none</td>\n",
       "      <td>12.0</td>\n",
       "      <td>critical</td>\n",
       "      <td>education</td>\n",
       "      <td>2096.0</td>\n",
       "      <td>&lt;100</td>\n",
       "      <td>&lt;7</td>\n",
       "      <td>2.0</td>\n",
       "      <td>male_single</td>\n",
       "      <td>none</td>\n",
       "      <td>...</td>\n",
       "      <td>real_estate</td>\n",
       "      <td>49.0</td>\n",
       "      <td>none</td>\n",
       "      <td>own</td>\n",
       "      <td>1.0</td>\n",
       "      <td>unskilled</td>\n",
       "      <td>2.0</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>good</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>&lt;0</td>\n",
       "      <td>42.0</td>\n",
       "      <td>ok_til_now</td>\n",
       "      <td>furniture</td>\n",
       "      <td>7882.0</td>\n",
       "      <td>&lt;100</td>\n",
       "      <td>&lt;7</td>\n",
       "      <td>2.0</td>\n",
       "      <td>male_single</td>\n",
       "      <td>guarantor</td>\n",
       "      <td>...</td>\n",
       "      <td>savings</td>\n",
       "      <td>45.0</td>\n",
       "      <td>none</td>\n",
       "      <td>free</td>\n",
       "      <td>1.0</td>\n",
       "      <td>skilled</td>\n",
       "      <td>2.0</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>good</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>&lt;0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>past_delays</td>\n",
       "      <td>car_new</td>\n",
       "      <td>4870.0</td>\n",
       "      <td>&lt;100</td>\n",
       "      <td>&lt;4</td>\n",
       "      <td>3.0</td>\n",
       "      <td>male_single</td>\n",
       "      <td>none</td>\n",
       "      <td>...</td>\n",
       "      <td>unknown</td>\n",
       "      <td>53.0</td>\n",
       "      <td>none</td>\n",
       "      <td>free</td>\n",
       "      <td>2.0</td>\n",
       "      <td>skilled</td>\n",
       "      <td>2.0</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>none</td>\n",
       "      <td>36.0</td>\n",
       "      <td>ok_til_now</td>\n",
       "      <td>education</td>\n",
       "      <td>9055.0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>&lt;4</td>\n",
       "      <td>2.0</td>\n",
       "      <td>male_single</td>\n",
       "      <td>none</td>\n",
       "      <td>...</td>\n",
       "      <td>unknown</td>\n",
       "      <td>35.0</td>\n",
       "      <td>none</td>\n",
       "      <td>free</td>\n",
       "      <td>1.0</td>\n",
       "      <td>unskilled</td>\n",
       "      <td>2.0</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>good</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>none</td>\n",
       "      <td>24.0</td>\n",
       "      <td>ok_til_now</td>\n",
       "      <td>furniture</td>\n",
       "      <td>2835.0</td>\n",
       "      <td>&lt;1000</td>\n",
       "      <td>&gt;=7</td>\n",
       "      <td>3.0</td>\n",
       "      <td>male_single</td>\n",
       "      <td>none</td>\n",
       "      <td>...</td>\n",
       "      <td>savings</td>\n",
       "      <td>53.0</td>\n",
       "      <td>none</td>\n",
       "      <td>own</td>\n",
       "      <td>1.0</td>\n",
       "      <td>skilled</td>\n",
       "      <td>1.0</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>good</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>&lt;200</td>\n",
       "      <td>36.0</td>\n",
       "      <td>ok_til_now</td>\n",
       "      <td>car_used</td>\n",
       "      <td>6948.0</td>\n",
       "      <td>&lt;100</td>\n",
       "      <td>&lt;4</td>\n",
       "      <td>2.0</td>\n",
       "      <td>male_single</td>\n",
       "      <td>none</td>\n",
       "      <td>...</td>\n",
       "      <td>car</td>\n",
       "      <td>35.0</td>\n",
       "      <td>none</td>\n",
       "      <td>rent</td>\n",
       "      <td>1.0</td>\n",
       "      <td>management</td>\n",
       "      <td>1.0</td>\n",
       "      <td>yes</td>\n",
       "      <td>yes</td>\n",
       "      <td>good</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>none</td>\n",
       "      <td>12.0</td>\n",
       "      <td>ok_til_now</td>\n",
       "      <td>television</td>\n",
       "      <td>3059.0</td>\n",
       "      <td>&gt;=1000</td>\n",
       "      <td>&lt;7</td>\n",
       "      <td>2.0</td>\n",
       "      <td>male_divorced</td>\n",
       "      <td>none</td>\n",
       "      <td>...</td>\n",
       "      <td>real_estate</td>\n",
       "      <td>61.0</td>\n",
       "      <td>none</td>\n",
       "      <td>own</td>\n",
       "      <td>1.0</td>\n",
       "      <td>unskilled</td>\n",
       "      <td>1.0</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>good</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>&lt;200</td>\n",
       "      <td>30.0</td>\n",
       "      <td>critical</td>\n",
       "      <td>car_new</td>\n",
       "      <td>5234.0</td>\n",
       "      <td>&lt;100</td>\n",
       "      <td>unemployed</td>\n",
       "      <td>4.0</td>\n",
       "      <td>male_married</td>\n",
       "      <td>none</td>\n",
       "      <td>...</td>\n",
       "      <td>car</td>\n",
       "      <td>28.0</td>\n",
       "      <td>none</td>\n",
       "      <td>own</td>\n",
       "      <td>2.0</td>\n",
       "      <td>management</td>\n",
       "      <td>1.0</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   CheckingAccount  Duration CreditHistory     Purpose  CreditAmount  \\\n",
       "1               <0       6.0      critical  television        1169.0   \n",
       "2             <200      48.0    ok_til_now  television        5951.0   \n",
       "3             none      12.0      critical   education        2096.0   \n",
       "4               <0      42.0    ok_til_now   furniture        7882.0   \n",
       "5               <0      24.0   past_delays     car_new        4870.0   \n",
       "6             none      36.0    ok_til_now   education        9055.0   \n",
       "7             none      24.0    ok_til_now   furniture        2835.0   \n",
       "8             <200      36.0    ok_til_now    car_used        6948.0   \n",
       "9             none      12.0    ok_til_now  television        3059.0   \n",
       "10            <200      30.0      critical     car_new        5234.0   \n",
       "\n",
       "   SavingsAccount YearsEmployed InstallmentRate PersonalStatus OtherDebtors  \\\n",
       "1         unknown           >=7             4.0    male_single         none   \n",
       "2            <100            <4             2.0         female         none   \n",
       "3            <100            <7             2.0    male_single         none   \n",
       "4            <100            <7             2.0    male_single    guarantor   \n",
       "5            <100            <4             3.0    male_single         none   \n",
       "6         unknown            <4             2.0    male_single         none   \n",
       "7           <1000           >=7             3.0    male_single         none   \n",
       "8            <100            <4             2.0    male_single         none   \n",
       "9          >=1000            <7             2.0  male_divorced         none   \n",
       "10           <100    unemployed             4.0   male_married         none   \n",
       "\n",
       "     ...       Property   Age  OtherPlans Housing NumCreditsAtBank  \\\n",
       "1    ...    real_estate  67.0        none     own              2.0   \n",
       "2    ...    real_estate  22.0        none     own              1.0   \n",
       "3    ...    real_estate  49.0        none     own              1.0   \n",
       "4    ...        savings  45.0        none    free              1.0   \n",
       "5    ...        unknown  53.0        none    free              2.0   \n",
       "6    ...        unknown  35.0        none    free              1.0   \n",
       "7    ...        savings  53.0        none     own              1.0   \n",
       "8    ...            car  35.0        none    rent              1.0   \n",
       "9    ...    real_estate  61.0        none     own              1.0   \n",
       "10   ...            car  28.0        none     own              2.0   \n",
       "\n",
       "           Job Dependents Telephone Foreign Approve  \n",
       "1      skilled        1.0       yes     yes    good  \n",
       "2      skilled        1.0        no     yes     bad  \n",
       "3    unskilled        2.0        no     yes    good  \n",
       "4      skilled        2.0        no     yes    good  \n",
       "5      skilled        2.0        no     yes     bad  \n",
       "6    unskilled        2.0       yes     yes    good  \n",
       "7      skilled        1.0        no     yes    good  \n",
       "8   management        1.0       yes     yes    good  \n",
       "9    unskilled        1.0        no     yes    good  \n",
       "10  management        1.0        no     yes     bad  \n",
       "\n",
       "[10 rows x 21 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Your Code goes here:\n",
    "credit_clean.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 1.9 ==========\n",
    "\n",
    "There is a **conceptual** problem with using an (unordered) categorical input to train a decision tree. Can you figure it out? *Hint*: Look at the data-types supported by the `DecisionTreeClassifier`, specifically the input to the [fit](http://scikit-learn.org/0.19/modules/generated/sklearn.tree.DecisionTreeClassifier.html#sklearn.tree.DecisionTreeClassifier.fit) method."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "***Your answer goes here:***\n",
    "The training input samples. Internally, it will be converted to dtype=np.float32."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 1.10 ==========\n",
    "\n",
    "Let us then convert the categorical values we just created into a one-hot-encoding. Pandas provides this functionality conveniently via the [`get_dummies`](https://pandas.pydata.org/pandas-docs/version/0.23.4/generated/pandas.get_dummies.html) method. Use it to generate a matrix `X` containing the one-hot encoded categorical features as well as the floating-point attributes (`CreditAmount`, `Age` and `Duration`). Also, (separately) extract the target variable (`Approve`) into a vector `y`. In each case, display the shape of the matrix/vector `X` and `y`. \n",
    "\n",
    "*TIP: It will be useful to keep track of the column names in the new one-hot-encoded format for later.*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Extract (and print the shape of) X\n",
    "# Your Code goes here:\n",
    "X = pd.get_dummies(credit_clean.iloc[:,:-1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Extract the Target y (and print its shape)\n",
    "# Your Code goes here:\n",
    "y = credit_clean['Approve']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "(Confirm that you have 71 input features, one target variable and 1000 data points). *Bonus Question*: where did the 71 come from?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1000, 71)"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check the number of features and data points \n",
    "X.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "71.0"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Where did the 71 come from?\n",
    "# The total number of categories of each category features + the number of features with dtype of float64\n",
    "sum(credit_clean.describe(include='category').iloc[1,:]) + 3"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Hold-out validation\n",
    "In the next step we will be using a Decision Tree classifier model. To get an accurate estimate of the model's classification performance we will use hold-out validation. Familiriase yourself with the logic behind [`train_test_split CV`](http://scikit-learn.org/0.19/modules/cross_validation.html#cross-validation-evaluating-estimator-performance) (also called `Hold-out` validation) and [how it is used](http://scikit-learn.org/0.19/modules/generated/sklearn.cross_validation.train_test_split.html) in `Scikit-learn`. Execute the cell below to create your training/testing sets by assigning 10% of the data to the test set (and convince yourself you understand what is going on)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X, y, train_size = 0.9, test_size=0.1, random_state=0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 1.11 ==========\n",
    "Confirm that `X_train` and `X_test` matrices are subsets of `X` by displaying the number of rows in the three matrices (no need to make use of set theory)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Your Code goes here:\n",
    "X_train.shape[0] + X_test.shape[0] == X.shape[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 1.12 ==========\n",
    "Now we will train a Decision Tree classifier on the training data. Read about [Decision Tree classifiers](http://scikit-learn.org/0.19/modules/tree.html) in `Scikit-learn` and how they are [used](http://scikit-learn.org/0.19/modules/generated/sklearn.tree.DecisionTreeClassifier.html#sklearn.tree.DecisionTreeClassifier). \n",
    "Create a `DecisionTreeClassifier` instance, naming it `dt` and train it by using training data only (i.e. `X_train` and `y_tain`). Set the `criterion` attribute to `entropy` in order to measure the quality of splits by using the information gain. Use the default settings for the rest of parameters. By default, trees are grown to full depth; this means that very fine splits are made involving very few data points. Not only does this make the trees hard to visualise (they'll be deep), but also we could be overfitting the data. For now, we arbitrarily choose a depth of 2 for our tree (to make it easier to interpret below), but this is a parameter we could tune. For consistency, use a `random_state=1000`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DecisionTreeClassifier(class_weight=None, criterion='entropy', max_depth=3,\n",
       "            max_features=None, max_leaf_nodes=None,\n",
       "            min_impurity_decrease=0.0, min_impurity_split=None,\n",
       "            min_samples_leaf=1, min_samples_split=2,\n",
       "            min_weight_fraction_leaf=0.0, presort=False, random_state=1000,\n",
       "            splitter='best')"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Your Code goes here:\n",
    "dt = DecisionTreeClassifier(criterion='entropy', max_depth=3, random_state=1000)\n",
    "dt.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We have mentioned in the class that decision trees have the advantage of being interpretable by humans. Now we visualise the decision tree we have just trained. Scikit-learn can export the tree in a `.dot` format. Run the following code (replace `column_names` with whatever you used to store the names of the columns of the extended feature-space):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n",
       "<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n",
       " \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n",
       "<!-- Generated by graphviz version 2.40.1 (20161225.0304)\n",
       " -->\n",
       "<!-- Title: Tree Pages: 1 -->\n",
       "<svg width=\"1048pt\" height=\"433pt\"\n",
       " viewBox=\"0.00 0.00 1048.00 433.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n",
       "<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 429)\">\n",
       "<title>Tree</title>\n",
       "<polygon fill=\"#ffffff\" stroke=\"transparent\" points=\"-4,4 -4,-429 1044,-429 1044,4 -4,4\"/>\n",
       "<!-- 0 -->\n",
       "<g id=\"node1\" class=\"node\">\n",
       "<title>0</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.560784\" stroke=\"#000000\" d=\"M644,-425C644,-425 460,-425 460,-425 454,-425 448,-419 448,-413 448,-413 448,-354 448,-354 448,-348 454,-342 460,-342 460,-342 644,-342 644,-342 650,-342 656,-348 656,-354 656,-354 656,-413 656,-413 656,-419 650,-425 644,-425\"/>\n",
       "<text text-anchor=\"middle\" x=\"552\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">CheckingAccount_none &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"552\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.888</text>\n",
       "<text text-anchor=\"middle\" x=\"552\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 900</text>\n",
       "<text text-anchor=\"middle\" x=\"552\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [275, 625]</text>\n",
       "<text text-anchor=\"middle\" x=\"552\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 1 -->\n",
       "<g id=\"node2\" class=\"node\">\n",
       "<title>1</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.250980\" stroke=\"#000000\" d=\"M492,-306C492,-306 388,-306 388,-306 382,-306 376,-300 376,-294 376,-294 376,-235 376,-235 376,-229 382,-223 388,-223 388,-223 492,-223 492,-223 498,-223 504,-229 504,-235 504,-235 504,-294 504,-294 504,-300 498,-306 492,-306\"/>\n",
       "<text text-anchor=\"middle\" x=\"440\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Duration &lt;= 11.5</text>\n",
       "<text text-anchor=\"middle\" x=\"440\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.985</text>\n",
       "<text text-anchor=\"middle\" x=\"440\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 544</text>\n",
       "<text text-anchor=\"middle\" x=\"440\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [233, 311]</text>\n",
       "<text text-anchor=\"middle\" x=\"440\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 0&#45;&gt;1 -->\n",
       "<g id=\"edge1\" class=\"edge\">\n",
       "<title>0&#45;&gt;1</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M512.8278,-341.8796C504.2665,-332.7832 495.1268,-323.0722 486.3168,-313.7116\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"488.7417,-311.1813 479.3394,-306.2981 483.6443,-315.9789 488.7417,-311.1813\"/>\n",
       "<text text-anchor=\"middle\" x=\"478.5821\" y=\"-327.5866\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">True</text>\n",
       "</g>\n",
       "<!-- 8 -->\n",
       "<g id=\"node9\" class=\"node\">\n",
       "<title>8</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.866667\" stroke=\"#000000\" d=\"M718.5,-306C718.5,-306 573.5,-306 573.5,-306 567.5,-306 561.5,-300 561.5,-294 561.5,-294 561.5,-235 561.5,-235 561.5,-229 567.5,-223 573.5,-223 573.5,-223 718.5,-223 718.5,-223 724.5,-223 730.5,-229 730.5,-235 730.5,-235 730.5,-294 730.5,-294 730.5,-300 724.5,-306 718.5,-306\"/>\n",
       "<text text-anchor=\"middle\" x=\"646\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">OtherPlans_none &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"646\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.524</text>\n",
       "<text text-anchor=\"middle\" x=\"646\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 356</text>\n",
       "<text text-anchor=\"middle\" x=\"646\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [42, 314]</text>\n",
       "<text text-anchor=\"middle\" x=\"646\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 0&#45;&gt;8 -->\n",
       "<g id=\"edge8\" class=\"edge\">\n",
       "<title>0&#45;&gt;8</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M584.8766,-341.8796C591.9197,-332.9633 599.4293,-323.4565 606.6874,-314.268\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"609.5309,-316.3147 612.983,-306.2981 604.0379,-311.9757 609.5309,-316.3147\"/>\n",
       "<text text-anchor=\"middle\" x=\"615.8973\" y=\"-327.4276\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">False</text>\n",
       "</g>\n",
       "<!-- 2 -->\n",
       "<g id=\"node3\" class=\"node\">\n",
       "<title>2</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.741176\" stroke=\"#000000\" d=\"M298.5,-187C298.5,-187 71.5,-187 71.5,-187 65.5,-187 59.5,-181 59.5,-175 59.5,-175 59.5,-116 59.5,-116 59.5,-110 65.5,-104 71.5,-104 71.5,-104 298.5,-104 298.5,-104 304.5,-104 310.5,-110 310.5,-116 310.5,-116 310.5,-175 310.5,-175 310.5,-181 304.5,-187 298.5,-187\"/>\n",
       "<text text-anchor=\"middle\" x=\"185\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">CreditHistory_ok_at_this_bank &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"185\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.735</text>\n",
       "<text text-anchor=\"middle\" x=\"185\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 92</text>\n",
       "<text text-anchor=\"middle\" x=\"185\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [19, 73]</text>\n",
       "<text text-anchor=\"middle\" x=\"185\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 1&#45;&gt;2 -->\n",
       "<g id=\"edge2\" class=\"edge\">\n",
       "<title>1&#45;&gt;2</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M375.9819,-234.6249C347.9181,-221.5285 314.3454,-205.8612 283.231,-191.3411\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"284.6384,-188.1356 274.0964,-187.0783 281.6781,-194.4789 284.6384,-188.1356\"/>\n",
       "</g>\n",
       "<!-- 5 -->\n",
       "<g id=\"node6\" class=\"node\">\n",
       "<title>5</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.101961\" stroke=\"#000000\" d=\"M524.5,-187C524.5,-187 355.5,-187 355.5,-187 349.5,-187 343.5,-181 343.5,-175 343.5,-175 343.5,-116 343.5,-116 343.5,-110 349.5,-104 355.5,-104 355.5,-104 524.5,-104 524.5,-104 530.5,-104 536.5,-110 536.5,-116 536.5,-116 536.5,-175 536.5,-175 536.5,-181 530.5,-187 524.5,-187\"/>\n",
       "<text text-anchor=\"middle\" x=\"440\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">CheckingAccount_&lt;0 &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"440\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.998</text>\n",
       "<text text-anchor=\"middle\" x=\"440\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 452</text>\n",
       "<text text-anchor=\"middle\" x=\"440\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [214, 238]</text>\n",
       "<text text-anchor=\"middle\" x=\"440\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 1&#45;&gt;5 -->\n",
       "<g id=\"edge5\" class=\"edge\">\n",
       "<title>1&#45;&gt;5</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M440,-222.8796C440,-214.6838 440,-205.9891 440,-197.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"443.5001,-197.298 440,-187.2981 436.5001,-197.2981 443.5001,-197.298\"/>\n",
       "</g>\n",
       "<!-- 3 -->\n",
       "<g id=\"node4\" class=\"node\">\n",
       "<title>3</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.803922\" stroke=\"#000000\" d=\"M102,-68C102,-68 12,-68 12,-68 6,-68 0,-62 0,-56 0,-56 0,-12 0,-12 0,-6 6,0 12,0 12,0 102,0 102,0 108,0 114,-6 114,-12 114,-12 114,-56 114,-56 114,-62 108,-68 102,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"57\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.641</text>\n",
       "<text text-anchor=\"middle\" x=\"57\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 86</text>\n",
       "<text text-anchor=\"middle\" x=\"57\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [14, 72]</text>\n",
       "<text text-anchor=\"middle\" x=\"57\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 2&#45;&gt;3 -->\n",
       "<g id=\"edge3\" class=\"edge\">\n",
       "<title>2&#45;&gt;3</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M137.3375,-103.9815C126.4703,-94.5151 114.9295,-84.462 104.0865,-75.0168\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"106.1734,-72.1929 96.3341,-68.2637 101.5755,-77.4712 106.1734,-72.1929\"/>\n",
       "</g>\n",
       "<!-- 4 -->\n",
       "<g id=\"node5\" class=\"node\">\n",
       "<title>4</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.800000\" stroke=\"#000000\" d=\"M226,-68C226,-68 144,-68 144,-68 138,-68 132,-62 132,-56 132,-56 132,-12 132,-12 132,-6 138,0 144,0 144,0 226,0 226,0 232,0 238,-6 238,-12 238,-12 238,-56 238,-56 238,-62 232,-68 226,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"185\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.65</text>\n",
       "<text text-anchor=\"middle\" x=\"185\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 6</text>\n",
       "<text text-anchor=\"middle\" x=\"185\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [5, 1]</text>\n",
       "<text text-anchor=\"middle\" x=\"185\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 2&#45;&gt;4 -->\n",
       "<g id=\"edge4\" class=\"edge\">\n",
       "<title>2&#45;&gt;4</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M185,-103.9815C185,-95.618 185,-86.7965 185,-78.3409\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"188.5001,-78.2636 185,-68.2637 181.5001,-78.2637 188.5001,-78.2636\"/>\n",
       "</g>\n",
       "<!-- 6 -->\n",
       "<g id=\"node7\" class=\"node\">\n",
       "<title>6</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.392157\" stroke=\"#000000\" d=\"M364,-68C364,-68 268,-68 268,-68 262,-68 256,-62 256,-56 256,-56 256,-12 256,-12 256,-6 262,0 268,0 268,0 364,0 364,0 370,0 376,-6 376,-12 376,-12 376,-56 376,-56 376,-62 370,-68 364,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"316\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.957</text>\n",
       "<text text-anchor=\"middle\" x=\"316\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 243</text>\n",
       "<text text-anchor=\"middle\" x=\"316\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [92, 151]</text>\n",
       "<text text-anchor=\"middle\" x=\"316\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 5&#45;&gt;6 -->\n",
       "<g id=\"edge6\" class=\"edge\">\n",
       "<title>5&#45;&gt;6</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M393.827,-103.9815C383.2993,-94.5151 372.1192,-84.462 361.6151,-75.0168\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"363.8811,-72.3475 354.1049,-68.2637 359.2006,-77.5526 363.8811,-72.3475\"/>\n",
       "</g>\n",
       "<!-- 7 -->\n",
       "<g id=\"node8\" class=\"node\">\n",
       "<title>7</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.286275\" stroke=\"#000000\" d=\"M502,-68C502,-68 406,-68 406,-68 400,-68 394,-62 394,-56 394,-56 394,-12 394,-12 394,-6 400,0 406,0 406,0 502,0 502,0 508,0 514,-6 514,-12 514,-12 514,-56 514,-56 514,-62 508,-68 502,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"454\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.98</text>\n",
       "<text text-anchor=\"middle\" x=\"454\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 209</text>\n",
       "<text text-anchor=\"middle\" x=\"454\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [122, 87]</text>\n",
       "<text text-anchor=\"middle\" x=\"454\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 5&#45;&gt;7 -->\n",
       "<g id=\"edge7\" class=\"edge\">\n",
       "<title>5&#45;&gt;7</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M445.2131,-103.9815C446.2632,-95.618 447.3708,-86.7965 448.4325,-78.3409\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"451.9247,-78.6218 449.6978,-68.2637 444.9792,-77.7497 451.9247,-78.6218\"/>\n",
       "</g>\n",
       "<!-- 9 -->\n",
       "<g id=\"node10\" class=\"node\">\n",
       "<title>9</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.552941\" stroke=\"#000000\" d=\"M691,-187C691,-187 601,-187 601,-187 595,-187 589,-181 589,-175 589,-175 589,-116 589,-116 589,-110 595,-104 601,-104 601,-104 691,-104 691,-104 697,-104 703,-110 703,-116 703,-116 703,-175 703,-175 703,-181 697,-187 691,-187\"/>\n",
       "<text text-anchor=\"middle\" x=\"646\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Age &lt;= 44.5</text>\n",
       "<text text-anchor=\"middle\" x=\"646\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.892</text>\n",
       "<text text-anchor=\"middle\" x=\"646\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 55</text>\n",
       "<text text-anchor=\"middle\" x=\"646\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [17, 38]</text>\n",
       "<text text-anchor=\"middle\" x=\"646\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 8&#45;&gt;9 -->\n",
       "<g id=\"edge9\" class=\"edge\">\n",
       "<title>8&#45;&gt;9</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M646,-222.8796C646,-214.6838 646,-205.9891 646,-197.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"649.5001,-197.298 646,-187.2981 642.5001,-197.2981 649.5001,-197.298\"/>\n",
       "</g>\n",
       "<!-- 12 -->\n",
       "<g id=\"node13\" class=\"node\">\n",
       "<title>12</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.909804\" stroke=\"#000000\" d=\"M930,-187C930,-187 766,-187 766,-187 760,-187 754,-181 754,-175 754,-175 754,-116 754,-116 754,-110 760,-104 766,-104 766,-104 930,-104 930,-104 936,-104 942,-110 942,-116 942,-116 942,-175 942,-175 942,-181 936,-187 930,-187\"/>\n",
       "<text text-anchor=\"middle\" x=\"848\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">CreditHistory_critical &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"848\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.413</text>\n",
       "<text text-anchor=\"middle\" x=\"848\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 301</text>\n",
       "<text text-anchor=\"middle\" x=\"848\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [25, 276]</text>\n",
       "<text text-anchor=\"middle\" x=\"848\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 8&#45;&gt;12 -->\n",
       "<g id=\"edge12\" class=\"edge\">\n",
       "<title>8&#45;&gt;12</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M716.6498,-222.8796C733.4106,-213.0056 751.4008,-202.4075 768.5252,-192.3193\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"770.5506,-195.1884 777.3901,-187.0969 766.9975,-189.1571 770.5506,-195.1884\"/>\n",
       "</g>\n",
       "<!-- 10 -->\n",
       "<g id=\"node11\" class=\"node\">\n",
       "<title>10</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.368627\" stroke=\"#000000\" d=\"M634,-68C634,-68 544,-68 544,-68 538,-68 532,-62 532,-56 532,-56 532,-12 532,-12 532,-6 538,0 544,0 544,0 634,0 634,0 640,0 646,-6 646,-12 646,-12 646,-56 646,-56 646,-62 640,-68 634,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"589\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.962</text>\n",
       "<text text-anchor=\"middle\" x=\"589\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 44</text>\n",
       "<text text-anchor=\"middle\" x=\"589\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [17, 27]</text>\n",
       "<text text-anchor=\"middle\" x=\"589\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 9&#45;&gt;10 -->\n",
       "<g id=\"edge10\" class=\"edge\">\n",
       "<title>9&#45;&gt;10</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M624.7753,-103.9815C620.3119,-95.2504 615.5933,-86.0202 611.0987,-77.2281\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"614.1842,-75.5745 606.516,-68.2637 607.9514,-78.7608 614.1842,-75.5745\"/>\n",
       "</g>\n",
       "<!-- 11 -->\n",
       "<g id=\"node12\" class=\"node\">\n",
       "<title>11</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M757.5,-68C757.5,-68 676.5,-68 676.5,-68 670.5,-68 664.5,-62 664.5,-56 664.5,-56 664.5,-12 664.5,-12 664.5,-6 670.5,0 676.5,0 676.5,0 757.5,0 757.5,0 763.5,0 769.5,-6 769.5,-12 769.5,-12 769.5,-56 769.5,-56 769.5,-62 763.5,-68 757.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"717\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"717\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 11</text>\n",
       "<text text-anchor=\"middle\" x=\"717\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 11]</text>\n",
       "<text text-anchor=\"middle\" x=\"717\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 9&#45;&gt;11 -->\n",
       "<g id=\"edge11\" class=\"edge\">\n",
       "<title>9&#45;&gt;11</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M672.4378,-103.9815C678.056,-95.1585 683.9988,-85.8258 689.6503,-76.9506\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"692.7629,-78.5787 695.1819,-68.2637 686.8584,-74.8188 692.7629,-78.5787\"/>\n",
       "</g>\n",
       "<!-- 13 -->\n",
       "<g id=\"node14\" class=\"node\">\n",
       "<title>13</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.850980\" stroke=\"#000000\" d=\"M896,-68C896,-68 800,-68 800,-68 794,-68 788,-62 788,-56 788,-56 788,-12 788,-12 788,-6 794,0 800,0 800,0 896,0 896,0 902,0 908,-6 908,-12 908,-12 908,-56 908,-56 908,-62 902,-68 896,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"848\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.553</text>\n",
       "<text text-anchor=\"middle\" x=\"848\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 179</text>\n",
       "<text text-anchor=\"middle\" x=\"848\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [23, 156]</text>\n",
       "<text text-anchor=\"middle\" x=\"848\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 12&#45;&gt;13 -->\n",
       "<g id=\"edge13\" class=\"edge\">\n",
       "<title>12&#45;&gt;13</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M848,-103.9815C848,-95.618 848,-86.7965 848,-78.3409\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"851.5001,-78.2636 848,-68.2637 844.5001,-78.2637 851.5001,-78.2636\"/>\n",
       "</g>\n",
       "<!-- 14 -->\n",
       "<g id=\"node15\" class=\"node\">\n",
       "<title>14</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.984314\" stroke=\"#000000\" d=\"M1028,-68C1028,-68 938,-68 938,-68 932,-68 926,-62 926,-56 926,-56 926,-12 926,-12 926,-6 932,0 938,0 938,0 1028,0 1028,0 1034,0 1040,-6 1040,-12 1040,-12 1040,-56 1040,-56 1040,-62 1034,-68 1028,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"983\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.121</text>\n",
       "<text text-anchor=\"middle\" x=\"983\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 122</text>\n",
       "<text text-anchor=\"middle\" x=\"983\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 120]</text>\n",
       "<text text-anchor=\"middle\" x=\"983\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 12&#45;&gt;14 -->\n",
       "<g id=\"edge14\" class=\"edge\">\n",
       "<title>12&#45;&gt;14</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M898.269,-103.9815C909.8418,-94.4232 922.1389,-84.2668 933.6713,-74.7419\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"936.0334,-77.3304 941.5148,-68.2637 931.5757,-71.9332 936.0334,-77.3304\"/>\n",
       "</g>\n",
       "</g>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "<graphviz.files.Source at 0x7fbab4a87650>"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dot_data = export_graphviz(dt, out_file=None, \n",
    "    feature_names=X.columns,  \n",
    "    class_names=credit_clean['Approve'].unique(),  \n",
    "    filled=True, rounded=True,  \n",
    "    special_characters=False)\n",
    "graph = graphviz.Source(dot_data)\n",
    "graph"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "An alternative way to visualise the tree is to open the output .dot file with an editor such as [this online .dot renderer](http://dreampuf.github.io/GraphvizOnline/). You can use the code below to create a dot-file and then copy and paste its contents into the online site (you can double click on the tree once it has been produced to view it in full screen)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "with open(\"tree.dot\", 'w') as f:\n",
    "    f = export_graphviz(dt, out_file=f,\n",
    "                        feature_names=column_names,  \n",
    "                        class_names=credit_clean['Approve'].unique(),  \n",
    "                        filled=True, rounded=True,  \n",
    "                        special_characters=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 1.13 ==========\n",
    "Inspect the tree and\n",
    " 1. describe what it shows, explaining how you interpret any one-hot encoded data\n",
    " 1. indicate which is the attribute with the highest information gain."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "***Your answer goes here:***"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 1.14 ==========\n",
    "Tree-based estimators (i.e. decision trees and random forests) can be used to compute feature importances. The importance of a feature is computed as the (normalized) total reduction of entropy (or other used `criterion`) brought by that feature. Find the relevant attributes of the classifier you just trained (i.e. those which are actually used in this short tree) and display feature importances along with their names."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Duration': 0.1607, 'CheckingAccount_none': 0.7176, 'OtherPlans_none': 0.1216}"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Your Code goes here:\n",
    "feature_import = {}\n",
    "for i in range(sum(dt.feature_importances_ != 0)):\n",
    "    item = X.columns[dt.feature_importances_ != 0][i]\n",
    "    value = dt.feature_importances_[dt.feature_importances_ != 0][i]\n",
    "    feature_import[item] = round(value, 4)\n",
    "feature_import"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 1.15 ==========\n",
    "Now we want to evaluate the performance of the classifier on unseen data. Use the trained model to predict the target variables for the test data set. Display the classification accuracy for both the training and test data sets. What do you observe? Are you surprised by the results?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.6944 0.75\n"
     ]
    }
   ],
   "source": [
    "# Your Code goes here:\n",
    "y_train_pred = dt.predict(X_train)\n",
    "y_test_pred = dt.predict(X_test)\n",
    "train_acc = accuracy_score(y_train, y_train_pred)\n",
    "test_acc = accuracy_score(y_test, y_test_pred)\n",
    "print(round(train_acc,4), round(test_acc,4))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**However, the very astute will make an observation:** *Hint: Have a look at the class distribution in the dataset.*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, (ax1, ax2) = plt.subplots(1,2, figsize=(8,4))\n",
    "sns.countplot(y_train, ax=ax1)\n",
    "ax1.set_title('Training set', size=12)\n",
    "ax1.set_xlabel(' ')\n",
    "sns.countplot(y_test, ax=ax2)\n",
    "ax2.set_xlabel(' ')\n",
    "ax2.set_ylabel('')\n",
    "ax2.set_title('Validation set', size=12)\n",
    "fig.suptitle('Target distribution', size=12)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The dummy classifier of predicting everything as 'good' **will beat this model (75% accuracy on Validation Set)!** In other words, our model is worse than the baseline. **Always compare your models with very simple baselines**."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 1.16 ==========\n",
    "\n",
    "Fit another `DecisionTreeClassifier` but this time grow it to full depth (i.e. remove the max_depth condition). Again, use a `random_state=1000`. Display the classification accuracy for training and test data as above. Again, what do you observe and are you surprised?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.7378 0.61\n"
     ]
    }
   ],
   "source": [
    "# Your Code goes here:\n",
    "dt1 = DecisionTreeClassifier(criterion='entropy', max_depth=3, random_state=1000)\n",
    "dt1.fit(X_train, y_train)\n",
    "\n",
    "y_train_pred1 = dt1.predict(X_train)\n",
    "y_test_pred1 = dt1.predict(X_test)\n",
    "train_acc1 = accuracy_score(y_train, y_train_pred1)\n",
    "test_acc1 = accuracy_score(y_test, y_test_pred1)\n",
    "print(round(train_acc1,4), round(test_acc1,4))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "***Your answer goes here:***"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 1.17 ==========\n",
    "By using seaborn's heatmap function, plot the normalised confusion matrices for both the training and test data sets **for the max_depth=3 decision tree from question 1.12**. Make sure you label axes appropriately. *Hint: You can make use of the `plot_confusion_matrix` function introduced in a previous lab, reproduced below.*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_confusion_matrix(cm, classes=None, title='Confusion matrix'):\n",
    "    \"\"\"Plots a confusion matrix.\"\"\"\n",
    "    if classes is not None:\n",
    "        sns.heatmap(cm, xticklabels=classes, yticklabels=classes, vmin=0., vmax=1., annot=True)\n",
    "    else:\n",
    "        sns.heatmap(cm, vmin=0., vmax=1.)\n",
    "    plt.title(title)\n",
    "    plt.ylabel('True label')\n",
    "    plt.xlabel('Predicted label')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Normalised Data\n",
    "# Your Code goes here:\n",
    "# Note: the paramter, normalize{‘true’, ‘pred’, ‘all’}, default=None, is not available in the version of sklearn that we implement in py3iaml environment\n",
    "cm1 = confusion_matrix(y_train, y_train_pred)\n",
    "cm2 = confusion_matrix(y_test, y_test_pred)\n",
    "cm3 = confusion_matrix(y_train, y_train_pred1)\n",
    "cm4 = confusion_matrix(y_test, y_test_pred1)\n",
    "\n",
    "cm1_normalised = cm1/cm1.sum(axis=1)\n",
    "cm2_normalised = cm2/cm2.sum(axis=1)\n",
    "cm3_normalised = cm3/cm3.sum(axis=1)\n",
    "cm4_normalised = cm4/cm4.sum(axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Validation Data\n",
    "# Your Code goes here:\n",
    "plot_confusion_matrix(cm1_normalised)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_confusion_matrix(cm2_normalised)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_confusion_matrix(cm3_normalised)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_confusion_matrix(cm4_normalised)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**N.B. it will be obvious if you have plotted the full depth decision tree as the training confusion matrix will be the identity**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 1.18 ==========\n",
    "\n",
    "Finally we will create a [`Random decision forest`](http://scikit-learn.org/0.19/modules/generated/sklearn.ensemble.RandomForestClassifier.html) classifier and compare the performance of this classifier to that of the decision tree. The random decision forest is an ensemble classifier that consists of many decision trees and outputs the class that is the mode of the class's output by individual trees. Start with `n_estimators = 100`, use the `entropy` criterion and the same train/test split as before. Plot the classification accuracy of the random forest model on the test set and show the confusion matrix. How does the random decision forest compare performance wise to the decision tree?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1.0 0.74\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Your Code goes here:\n",
    "rf = RandomForestClassifier(n_estimators = 100, criterion='entropy')\n",
    "rf.fit(X_train, y_train)\n",
    "\n",
    "y_train_pred2 = rf.predict(X_train)\n",
    "y_test_pred2 = rf.predict(X_test)\n",
    "train_acc2 = accuracy_score(y_train, y_train_pred2)\n",
    "test_acc2 = accuracy_score(y_test, y_test_pred2)\n",
    "print(round(train_acc2,4), round(test_acc2,4))\n",
    "\n",
    "cm_rf1 = confusion_matrix(y_train, y_train_pred2)\n",
    "cm_rf2 = confusion_matrix(y_test, y_test_pred2)\n",
    "\n",
    "cm_rf1_normalised = cm_rf1/cm_rf1.sum(axis=1)\n",
    "cm_rf2_normalised = cm_rf2/cm_rf2.sum(axis=1)\n",
    "\n",
    "plot_confusion_matrix(cm_rf1_normalised)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_confusion_matrix(cm_rf2_normalised)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 1.19 ==========\n",
    "How high can you get the performance of the classifier by changing the max depth of the trees (`max_depth`), or the `max_features` parameters? Try a few values just to get a look. *Don't do a grid search or anything in-depth, just get a feel*. Try the same settings twice...do you get the same accuracy?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Your Code goes here:\n",
    "def dt_eva(X_train, y_train, X_test, y_test, criterion='entropy', depth=2):\n",
    "    dt = DecisionTreeClassifier(criterion=criterion, max_depth=depth, random_state=1000)\n",
    "    dt.fit(X_train, y_train)\n",
    "    y_train_pred = dt.predict(X_train)\n",
    "    y_test_pred = dt.predict(X_test)\n",
    "    train_acc = accuracy_score(y_train, y_train_pred)\n",
    "    test_acc = accuracy_score(y_test, y_test_pred)\n",
    "    return round(train_acc,4), round(test_acc,4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5,1,'Entropy')"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "train_accs, test_accs = [], []\n",
    "for i in range(2, 15):\n",
    "    train_acc = dt_eva(X_train, y_train, X_test, y_test, depth=i)[0]\n",
    "    test_acc = dt_eva(X_train, y_train, X_test, y_test, depth=i)[1]\n",
    "    train_accs.append(train_acc)\n",
    "    test_accs.append(test_acc)\n",
    "x = np.arange(2, 15)\n",
    "fig, ax = plt.subplots()\n",
    "ax.plot(x, train_accs, 'r-+', label='train')\n",
    "ax.plot(x, test_accs, 'b-', label='test')\n",
    "ax.legend(loc='upper right', fontsize=12)   \n",
    "ax.set_xlabel('Max_depth', fontsize=14) \n",
    "ax.set_ylabel('Accuracy', fontsize=14)   \n",
    "ax.set_title('Entropy', fontsize=14)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n",
       "<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n",
       " \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n",
       "<!-- Generated by graphviz version 2.40.1 (20161225.0304)\n",
       " -->\n",
       "<!-- Title: Tree Pages: 1 -->\n",
       "<svg width=\"5795pt\" height=\"1147pt\"\n",
       " viewBox=\"0.00 0.00 5794.50 1147.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n",
       "<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 1143)\">\n",
       "<title>Tree</title>\n",
       "<polygon fill=\"#ffffff\" stroke=\"transparent\" points=\"-4,4 -4,-1143 5790.5,-1143 5790.5,4 -4,4\"/>\n",
       "<!-- 0 -->\n",
       "<g id=\"node1\" class=\"node\">\n",
       "<title>0</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.560784\" stroke=\"#000000\" d=\"M3606,-1139C3606,-1139 3422,-1139 3422,-1139 3416,-1139 3410,-1133 3410,-1127 3410,-1127 3410,-1068 3410,-1068 3410,-1062 3416,-1056 3422,-1056 3422,-1056 3606,-1056 3606,-1056 3612,-1056 3618,-1062 3618,-1068 3618,-1068 3618,-1127 3618,-1127 3618,-1133 3612,-1139 3606,-1139\"/>\n",
       "<text text-anchor=\"middle\" x=\"3514\" y=\"-1123.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">CheckingAccount_none &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"3514\" y=\"-1108.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.888</text>\n",
       "<text text-anchor=\"middle\" x=\"3514\" y=\"-1093.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 900</text>\n",
       "<text text-anchor=\"middle\" x=\"3514\" y=\"-1078.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [275, 625]</text>\n",
       "<text text-anchor=\"middle\" x=\"3514\" y=\"-1063.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 1 -->\n",
       "<g id=\"node2\" class=\"node\">\n",
       "<title>1</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.250980\" stroke=\"#000000\" d=\"M2797,-1020C2797,-1020 2693,-1020 2693,-1020 2687,-1020 2681,-1014 2681,-1008 2681,-1008 2681,-949 2681,-949 2681,-943 2687,-937 2693,-937 2693,-937 2797,-937 2797,-937 2803,-937 2809,-943 2809,-949 2809,-949 2809,-1008 2809,-1008 2809,-1014 2803,-1020 2797,-1020\"/>\n",
       "<text text-anchor=\"middle\" x=\"2745\" y=\"-1004.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Duration &lt;= 11.5</text>\n",
       "<text text-anchor=\"middle\" x=\"2745\" y=\"-989.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.985</text>\n",
       "<text text-anchor=\"middle\" x=\"2745\" y=\"-974.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 544</text>\n",
       "<text text-anchor=\"middle\" x=\"2745\" y=\"-959.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [233, 311]</text>\n",
       "<text text-anchor=\"middle\" x=\"2745\" y=\"-944.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 0&#45;&gt;1 -->\n",
       "<g id=\"edge1\" class=\"edge\">\n",
       "<title>0&#45;&gt;1</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M3409.8894,-1081.3893C3252.2717,-1056.9985 2956.8978,-1011.2904 2819.1988,-989.982\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2819.5796,-986.4993 2809.1619,-988.4288 2818.5091,-993.417 2819.5796,-986.4993\"/>\n",
       "<text text-anchor=\"middle\" x=\"2823.9283\" y=\"-1004.9019\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">True</text>\n",
       "</g>\n",
       "<!-- 106 -->\n",
       "<g id=\"node107\" class=\"node\">\n",
       "<title>106</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.866667\" stroke=\"#000000\" d=\"M4605.5,-1020C4605.5,-1020 4460.5,-1020 4460.5,-1020 4454.5,-1020 4448.5,-1014 4448.5,-1008 4448.5,-1008 4448.5,-949 4448.5,-949 4448.5,-943 4454.5,-937 4460.5,-937 4460.5,-937 4605.5,-937 4605.5,-937 4611.5,-937 4617.5,-943 4617.5,-949 4617.5,-949 4617.5,-1008 4617.5,-1008 4617.5,-1014 4611.5,-1020 4605.5,-1020\"/>\n",
       "<text text-anchor=\"middle\" x=\"4533\" y=\"-1004.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">OtherPlans_none &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"4533\" y=\"-989.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.524</text>\n",
       "<text text-anchor=\"middle\" x=\"4533\" y=\"-974.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 356</text>\n",
       "<text text-anchor=\"middle\" x=\"4533\" y=\"-959.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [42, 314]</text>\n",
       "<text text-anchor=\"middle\" x=\"4533\" y=\"-944.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 0&#45;&gt;106 -->\n",
       "<g id=\"edge106\" class=\"edge\">\n",
       "<title>0&#45;&gt;106</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M3618.2621,-1085.3241C3816.9701,-1062.1188 4247.1012,-1011.8876 4438.1982,-989.5711\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4438.6972,-993.0367 4448.2237,-988.4003 4437.8852,-986.0839 4438.6972,-993.0367\"/>\n",
       "<text text-anchor=\"middle\" x=\"4432.7158\" y=\"-1004.3091\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">False</text>\n",
       "</g>\n",
       "<!-- 2 -->\n",
       "<g id=\"node3\" class=\"node\">\n",
       "<title>2</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.741176\" stroke=\"#000000\" d=\"M1589.5,-901C1589.5,-901 1362.5,-901 1362.5,-901 1356.5,-901 1350.5,-895 1350.5,-889 1350.5,-889 1350.5,-830 1350.5,-830 1350.5,-824 1356.5,-818 1362.5,-818 1362.5,-818 1589.5,-818 1589.5,-818 1595.5,-818 1601.5,-824 1601.5,-830 1601.5,-830 1601.5,-889 1601.5,-889 1601.5,-895 1595.5,-901 1589.5,-901\"/>\n",
       "<text text-anchor=\"middle\" x=\"1476\" y=\"-885.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">CreditHistory_ok_at_this_bank &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"1476\" y=\"-870.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.735</text>\n",
       "<text text-anchor=\"middle\" x=\"1476\" y=\"-855.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 92</text>\n",
       "<text text-anchor=\"middle\" x=\"1476\" y=\"-840.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [19, 73]</text>\n",
       "<text text-anchor=\"middle\" x=\"1476\" y=\"-825.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 1&#45;&gt;2 -->\n",
       "<g id=\"edge2\" class=\"edge\">\n",
       "<title>1&#45;&gt;2</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2680.7636,-972.4763C2483.4655,-953.9747 1883.2311,-897.6879 1611.8214,-872.2366\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1611.7994,-868.7193 1601.5163,-871.2702 1611.1458,-875.6887 1611.7994,-868.7193\"/>\n",
       "</g>\n",
       "<!-- 27 -->\n",
       "<g id=\"node28\" class=\"node\">\n",
       "<title>27</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.101961\" stroke=\"#000000\" d=\"M2829.5,-901C2829.5,-901 2660.5,-901 2660.5,-901 2654.5,-901 2648.5,-895 2648.5,-889 2648.5,-889 2648.5,-830 2648.5,-830 2648.5,-824 2654.5,-818 2660.5,-818 2660.5,-818 2829.5,-818 2829.5,-818 2835.5,-818 2841.5,-824 2841.5,-830 2841.5,-830 2841.5,-889 2841.5,-889 2841.5,-895 2835.5,-901 2829.5,-901\"/>\n",
       "<text text-anchor=\"middle\" x=\"2745\" y=\"-885.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">CheckingAccount_&lt;0 &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"2745\" y=\"-870.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.998</text>\n",
       "<text text-anchor=\"middle\" x=\"2745\" y=\"-855.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 452</text>\n",
       "<text text-anchor=\"middle\" x=\"2745\" y=\"-840.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [214, 238]</text>\n",
       "<text text-anchor=\"middle\" x=\"2745\" y=\"-825.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 1&#45;&gt;27 -->\n",
       "<g id=\"edge27\" class=\"edge\">\n",
       "<title>1&#45;&gt;27</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2745,-936.8796C2745,-928.6838 2745,-919.9891 2745,-911.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2748.5001,-911.298 2745,-901.2981 2741.5001,-911.2981 2748.5001,-911.298\"/>\n",
       "</g>\n",
       "<!-- 3 -->\n",
       "<g id=\"node4\" class=\"node\">\n",
       "<title>3</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.803922\" stroke=\"#000000\" d=\"M834,-782C834,-782 744,-782 744,-782 738,-782 732,-776 732,-770 732,-770 732,-711 732,-711 732,-705 738,-699 744,-699 744,-699 834,-699 834,-699 840,-699 846,-705 846,-711 846,-711 846,-770 846,-770 846,-776 840,-782 834,-782\"/>\n",
       "<text text-anchor=\"middle\" x=\"789\" y=\"-766.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Age &lt;= 34.5</text>\n",
       "<text text-anchor=\"middle\" x=\"789\" y=\"-751.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.641</text>\n",
       "<text text-anchor=\"middle\" x=\"789\" y=\"-736.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 86</text>\n",
       "<text text-anchor=\"middle\" x=\"789\" y=\"-721.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [14, 72]</text>\n",
       "<text text-anchor=\"middle\" x=\"789\" y=\"-706.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 2&#45;&gt;3 -->\n",
       "<g id=\"edge3\" class=\"edge\">\n",
       "<title>2&#45;&gt;3</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M1350.3932,-837.7428C1204.9393,-812.5477 970.7097,-771.9752 856.2798,-752.154\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"856.7027,-748.6752 846.2521,-750.417 855.5079,-755.5725 856.7027,-748.6752\"/>\n",
       "</g>\n",
       "<!-- 24 -->\n",
       "<g id=\"node25\" class=\"node\">\n",
       "<title>24</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.800000\" stroke=\"#000000\" d=\"M1553,-782C1553,-782 1399,-782 1399,-782 1393,-782 1387,-776 1387,-770 1387,-770 1387,-711 1387,-711 1387,-705 1393,-699 1399,-699 1399,-699 1553,-699 1553,-699 1559,-699 1565,-705 1565,-711 1565,-711 1565,-770 1565,-770 1565,-776 1559,-782 1553,-782\"/>\n",
       "<text text-anchor=\"middle\" x=\"1476\" y=\"-766.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Purpose_television &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"1476\" y=\"-751.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.65</text>\n",
       "<text text-anchor=\"middle\" x=\"1476\" y=\"-736.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 6</text>\n",
       "<text text-anchor=\"middle\" x=\"1476\" y=\"-721.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [5, 1]</text>\n",
       "<text text-anchor=\"middle\" x=\"1476\" y=\"-706.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 2&#45;&gt;24 -->\n",
       "<g id=\"edge24\" class=\"edge\">\n",
       "<title>2&#45;&gt;24</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M1476,-817.8796C1476,-809.6838 1476,-800.9891 1476,-792.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1479.5001,-792.298 1476,-782.2981 1472.5001,-792.2981 1479.5001,-792.298\"/>\n",
       "</g>\n",
       "<!-- 4 -->\n",
       "<g id=\"node5\" class=\"node\">\n",
       "<title>4</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.619608\" stroke=\"#000000\" d=\"M628.5,-663C628.5,-663 471.5,-663 471.5,-663 465.5,-663 459.5,-657 459.5,-651 459.5,-651 459.5,-592 459.5,-592 459.5,-586 465.5,-580 471.5,-580 471.5,-580 628.5,-580 628.5,-580 634.5,-580 640.5,-586 640.5,-592 640.5,-592 640.5,-651 640.5,-651 640.5,-657 634.5,-663 628.5,-663\"/>\n",
       "<text text-anchor=\"middle\" x=\"550\" y=\"-647.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Purpose_education &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"550\" y=\"-632.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.849</text>\n",
       "<text text-anchor=\"middle\" x=\"550\" y=\"-617.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 40</text>\n",
       "<text text-anchor=\"middle\" x=\"550\" y=\"-602.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [11, 29]</text>\n",
       "<text text-anchor=\"middle\" x=\"550\" y=\"-587.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 3&#45;&gt;4 -->\n",
       "<g id=\"edge4\" class=\"edge\">\n",
       "<title>3&#45;&gt;4</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M731.7535,-711.9965C705.0964,-698.7237 672.7051,-682.5958 642.6924,-667.6523\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"643.9752,-664.3812 633.4634,-663.0571 640.8552,-670.6474 643.9752,-664.3812\"/>\n",
       "</g>\n",
       "<!-- 17 -->\n",
       "<g id=\"node18\" class=\"node\">\n",
       "<title>17</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.929412\" stroke=\"#000000\" d=\"M869.5,-663C869.5,-663 708.5,-663 708.5,-663 702.5,-663 696.5,-657 696.5,-651 696.5,-651 696.5,-592 696.5,-592 696.5,-586 702.5,-580 708.5,-580 708.5,-580 869.5,-580 869.5,-580 875.5,-580 881.5,-586 881.5,-592 881.5,-592 881.5,-651 881.5,-651 881.5,-657 875.5,-663 869.5,-663\"/>\n",
       "<text text-anchor=\"middle\" x=\"789\" y=\"-647.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">InstallmentRate_1.0 &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"789\" y=\"-632.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.348</text>\n",
       "<text text-anchor=\"middle\" x=\"789\" y=\"-617.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 46</text>\n",
       "<text text-anchor=\"middle\" x=\"789\" y=\"-602.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [3, 43]</text>\n",
       "<text text-anchor=\"middle\" x=\"789\" y=\"-587.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 3&#45;&gt;17 -->\n",
       "<g id=\"edge17\" class=\"edge\">\n",
       "<title>3&#45;&gt;17</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M789,-698.8796C789,-690.6838 789,-681.9891 789,-673.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"792.5001,-673.298 789,-663.2981 785.5001,-673.2981 792.5001,-673.298\"/>\n",
       "</g>\n",
       "<!-- 5 -->\n",
       "<g id=\"node6\" class=\"node\">\n",
       "<title>5</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.725490\" stroke=\"#000000\" d=\"M470,-544C470,-544 380,-544 380,-544 374,-544 368,-538 368,-532 368,-532 368,-473 368,-473 368,-467 374,-461 380,-461 380,-461 470,-461 470,-461 476,-461 482,-467 482,-473 482,-473 482,-532 482,-532 482,-538 476,-544 470,-544\"/>\n",
       "<text text-anchor=\"middle\" x=\"425\" y=\"-528.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Duration &lt;= 7.5</text>\n",
       "<text text-anchor=\"middle\" x=\"425\" y=\"-513.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.753</text>\n",
       "<text text-anchor=\"middle\" x=\"425\" y=\"-498.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 37</text>\n",
       "<text text-anchor=\"middle\" x=\"425\" y=\"-483.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [8, 29]</text>\n",
       "<text text-anchor=\"middle\" x=\"425\" y=\"-468.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 4&#45;&gt;5 -->\n",
       "<g id=\"edge5\" class=\"edge\">\n",
       "<title>4&#45;&gt;5</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M506.2811,-579.8796C496.6314,-570.6931 486.3234,-560.8798 476.4009,-551.4336\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"478.5616,-548.6582 468.9055,-544.2981 473.735,-553.7282 478.5616,-548.6582\"/>\n",
       "</g>\n",
       "<!-- 16 -->\n",
       "<g id=\"node17\" class=\"node\">\n",
       "<title>16</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M587.5,-536.5C587.5,-536.5 512.5,-536.5 512.5,-536.5 506.5,-536.5 500.5,-530.5 500.5,-524.5 500.5,-524.5 500.5,-480.5 500.5,-480.5 500.5,-474.5 506.5,-468.5 512.5,-468.5 512.5,-468.5 587.5,-468.5 587.5,-468.5 593.5,-468.5 599.5,-474.5 599.5,-480.5 599.5,-480.5 599.5,-524.5 599.5,-524.5 599.5,-530.5 593.5,-536.5 587.5,-536.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"550\" y=\"-521.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"550\" y=\"-506.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 3</text>\n",
       "<text text-anchor=\"middle\" x=\"550\" y=\"-491.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [3, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"550\" y=\"-476.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 4&#45;&gt;16 -->\n",
       "<g id=\"edge16\" class=\"edge\">\n",
       "<title>4&#45;&gt;16</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M550,-579.8796C550,-569.2134 550,-557.7021 550,-546.9015\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"553.5001,-546.8149 550,-536.8149 546.5001,-546.815 553.5001,-546.8149\"/>\n",
       "</g>\n",
       "<!-- 6 -->\n",
       "<g id=\"node7\" class=\"node\">\n",
       "<title>6</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M343.5,-417.5C343.5,-417.5 262.5,-417.5 262.5,-417.5 256.5,-417.5 250.5,-411.5 250.5,-405.5 250.5,-405.5 250.5,-361.5 250.5,-361.5 250.5,-355.5 256.5,-349.5 262.5,-349.5 262.5,-349.5 343.5,-349.5 343.5,-349.5 349.5,-349.5 355.5,-355.5 355.5,-361.5 355.5,-361.5 355.5,-405.5 355.5,-405.5 355.5,-411.5 349.5,-417.5 343.5,-417.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"303\" y=\"-402.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"303\" y=\"-387.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 14</text>\n",
       "<text text-anchor=\"middle\" x=\"303\" y=\"-372.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 14]</text>\n",
       "<text text-anchor=\"middle\" x=\"303\" y=\"-357.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 5&#45;&gt;6 -->\n",
       "<g id=\"edge6\" class=\"edge\">\n",
       "<title>5&#45;&gt;6</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M382.3303,-460.8796C370.3806,-449.2237 357.3963,-436.5587 345.4589,-424.9148\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"347.7825,-422.292 338.18,-417.8149 342.8947,-427.303 347.7825,-422.292\"/>\n",
       "</g>\n",
       "<!-- 7 -->\n",
       "<g id=\"node8\" class=\"node\">\n",
       "<title>7</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.466667\" stroke=\"#000000\" d=\"M476,-425C476,-425 386,-425 386,-425 380,-425 374,-419 374,-413 374,-413 374,-354 374,-354 374,-348 380,-342 386,-342 386,-342 476,-342 476,-342 482,-342 488,-348 488,-354 488,-354 488,-413 488,-413 488,-419 482,-425 476,-425\"/>\n",
       "<text text-anchor=\"middle\" x=\"431\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Duration &lt;= 9.5</text>\n",
       "<text text-anchor=\"middle\" x=\"431\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.932</text>\n",
       "<text text-anchor=\"middle\" x=\"431\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 23</text>\n",
       "<text text-anchor=\"middle\" x=\"431\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [8, 15]</text>\n",
       "<text text-anchor=\"middle\" x=\"431\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 5&#45;&gt;7 -->\n",
       "<g id=\"edge7\" class=\"edge\">\n",
       "<title>5&#45;&gt;7</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M427.0985,-460.8796C427.5117,-452.6838 427.9501,-443.9891 428.3781,-435.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"431.8844,-435.4617 428.8925,-425.2981 424.8933,-435.1091 431.8844,-435.4617\"/>\n",
       "</g>\n",
       "<!-- 8 -->\n",
       "<g id=\"node9\" class=\"node\">\n",
       "<title>8</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.200000\" stroke=\"#000000\" d=\"M354.5,-306C354.5,-306 173.5,-306 173.5,-306 167.5,-306 161.5,-300 161.5,-294 161.5,-294 161.5,-235 161.5,-235 161.5,-229 167.5,-223 173.5,-223 173.5,-223 354.5,-223 354.5,-223 360.5,-223 366.5,-229 366.5,-235 366.5,-235 366.5,-294 366.5,-294 366.5,-300 360.5,-306 354.5,-306\"/>\n",
       "<text text-anchor=\"middle\" x=\"264\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">PersonalStatus_female &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"264\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.991</text>\n",
       "<text text-anchor=\"middle\" x=\"264\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 18</text>\n",
       "<text text-anchor=\"middle\" x=\"264\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [8, 10]</text>\n",
       "<text text-anchor=\"middle\" x=\"264\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 7&#45;&gt;8 -->\n",
       "<g id=\"edge8\" class=\"edge\">\n",
       "<title>7&#45;&gt;8</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M373.9952,-342.8798C360.0934,-332.9737 345.0985,-322.2888 330.7867,-312.0905\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"332.6275,-309.1046 322.4525,-306.1518 328.5653,-314.8053 332.6275,-309.1046\"/>\n",
       "</g>\n",
       "<!-- 15 -->\n",
       "<g id=\"node16\" class=\"node\">\n",
       "<title>15</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M471.5,-298.5C471.5,-298.5 396.5,-298.5 396.5,-298.5 390.5,-298.5 384.5,-292.5 384.5,-286.5 384.5,-286.5 384.5,-242.5 384.5,-242.5 384.5,-236.5 390.5,-230.5 396.5,-230.5 396.5,-230.5 471.5,-230.5 471.5,-230.5 477.5,-230.5 483.5,-236.5 483.5,-242.5 483.5,-242.5 483.5,-286.5 483.5,-286.5 483.5,-292.5 477.5,-298.5 471.5,-298.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"434\" y=\"-283.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"434\" y=\"-268.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 5</text>\n",
       "<text text-anchor=\"middle\" x=\"434\" y=\"-253.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 5]</text>\n",
       "<text text-anchor=\"middle\" x=\"434\" y=\"-238.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 7&#45;&gt;15 -->\n",
       "<g id=\"edge15\" class=\"edge\">\n",
       "<title>7&#45;&gt;15</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M432.0493,-341.8796C432.3182,-331.2134 432.6084,-319.7021 432.8806,-308.9015\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"436.3817,-308.9 433.1349,-298.8149 429.3839,-308.7235 436.3817,-308.9\"/>\n",
       "</g>\n",
       "<!-- 9 -->\n",
       "<g id=\"node10\" class=\"node\">\n",
       "<title>9</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.666667\" stroke=\"#000000\" d=\"M238,-187C238,-187 90,-187 90,-187 84,-187 78,-181 78,-175 78,-175 78,-116 78,-116 78,-110 84,-104 90,-104 90,-104 238,-104 238,-104 244,-104 250,-110 250,-116 250,-116 250,-175 250,-175 250,-181 244,-187 238,-187\"/>\n",
       "<text text-anchor=\"middle\" x=\"164\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Job_management &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"164\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.811</text>\n",
       "<text text-anchor=\"middle\" x=\"164\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 12</text>\n",
       "<text text-anchor=\"middle\" x=\"164\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [3, 9]</text>\n",
       "<text text-anchor=\"middle\" x=\"164\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 8&#45;&gt;9 -->\n",
       "<g id=\"edge9\" class=\"edge\">\n",
       "<title>8&#45;&gt;9</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M229.0249,-222.8796C221.4565,-213.8733 213.3819,-204.2644 205.588,-194.9897\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"208.2374,-192.7022 199.1244,-187.2981 202.8784,-197.2056 208.2374,-192.7022\"/>\n",
       "</g>\n",
       "<!-- 12 -->\n",
       "<g id=\"node13\" class=\"node\">\n",
       "<title>12</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.800000\" stroke=\"#000000\" d=\"M447.5,-187C447.5,-187 280.5,-187 280.5,-187 274.5,-187 268.5,-181 268.5,-175 268.5,-175 268.5,-116 268.5,-116 268.5,-110 274.5,-104 280.5,-104 280.5,-104 447.5,-104 447.5,-104 453.5,-104 459.5,-110 459.5,-116 459.5,-116 459.5,-175 459.5,-175 459.5,-181 453.5,-187 447.5,-187\"/>\n",
       "<text text-anchor=\"middle\" x=\"364\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">YearsEmployed_&gt;=7 &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"364\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.65</text>\n",
       "<text text-anchor=\"middle\" x=\"364\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 6</text>\n",
       "<text text-anchor=\"middle\" x=\"364\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [5, 1]</text>\n",
       "<text text-anchor=\"middle\" x=\"364\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 8&#45;&gt;12 -->\n",
       "<g id=\"edge12\" class=\"edge\">\n",
       "<title>8&#45;&gt;12</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M298.9751,-222.8796C306.5435,-213.8733 314.6181,-204.2644 322.412,-194.9897\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"325.1216,-197.2056 328.8756,-187.2981 319.7626,-192.7022 325.1216,-197.2056\"/>\n",
       "</g>\n",
       "<!-- 10 -->\n",
       "<g id=\"node11\" class=\"node\">\n",
       "<title>10</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.890196\" stroke=\"#000000\" d=\"M102,-68C102,-68 12,-68 12,-68 6,-68 0,-62 0,-56 0,-56 0,-12 0,-12 0,-6 6,0 12,0 12,0 102,0 102,0 108,0 114,-6 114,-12 114,-12 114,-56 114,-56 114,-62 108,-68 102,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"57\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.469</text>\n",
       "<text text-anchor=\"middle\" x=\"57\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 10</text>\n",
       "<text text-anchor=\"middle\" x=\"57\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 9]</text>\n",
       "<text text-anchor=\"middle\" x=\"57\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 9&#45;&gt;10 -->\n",
       "<g id=\"edge10\" class=\"edge\">\n",
       "<title>9&#45;&gt;10</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M124.1571,-103.9815C115.2492,-94.6989 105.7999,-84.8522 96.8901,-75.5677\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"99.3302,-73.0555 89.8808,-68.2637 94.2795,-77.9023 99.3302,-73.0555\"/>\n",
       "</g>\n",
       "<!-- 11 -->\n",
       "<g id=\"node12\" class=\"node\">\n",
       "<title>11</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M219.5,-68C219.5,-68 144.5,-68 144.5,-68 138.5,-68 132.5,-62 132.5,-56 132.5,-56 132.5,-12 132.5,-12 132.5,-6 138.5,0 144.5,0 144.5,0 219.5,0 219.5,0 225.5,0 231.5,-6 231.5,-12 231.5,-12 231.5,-56 231.5,-56 231.5,-62 225.5,-68 219.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"182\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"182\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n",
       "<text text-anchor=\"middle\" x=\"182\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"182\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 9&#45;&gt;11 -->\n",
       "<g id=\"edge11\" class=\"edge\">\n",
       "<title>9&#45;&gt;11</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M170.7025,-103.9815C172.0527,-95.618 173.4768,-86.7965 174.8418,-78.3409\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"178.3301,-78.6937 176.4686,-68.2637 171.4196,-77.578 178.3301,-78.6937\"/>\n",
       "</g>\n",
       "<!-- 13 -->\n",
       "<g id=\"node14\" class=\"node\">\n",
       "<title>13</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M358.5,-68C358.5,-68 283.5,-68 283.5,-68 277.5,-68 271.5,-62 271.5,-56 271.5,-56 271.5,-12 271.5,-12 271.5,-6 277.5,0 283.5,0 283.5,0 358.5,0 358.5,0 364.5,0 370.5,-6 370.5,-12 370.5,-12 370.5,-56 370.5,-56 370.5,-62 364.5,-68 358.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"321\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"321\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 5</text>\n",
       "<text text-anchor=\"middle\" x=\"321\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [5, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"321\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 12&#45;&gt;13 -->\n",
       "<g id=\"edge13\" class=\"edge\">\n",
       "<title>12&#45;&gt;13</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M347.9884,-103.9815C344.6921,-95.4342 341.2114,-86.4086 337.8853,-77.7839\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"341.0776,-76.3345 334.2138,-68.2637 334.5465,-78.8533 341.0776,-76.3345\"/>\n",
       "</g>\n",
       "<!-- 14 -->\n",
       "<g id=\"node15\" class=\"node\">\n",
       "<title>14</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M475.5,-68C475.5,-68 400.5,-68 400.5,-68 394.5,-68 388.5,-62 388.5,-56 388.5,-56 388.5,-12 388.5,-12 388.5,-6 394.5,0 400.5,0 400.5,0 475.5,0 475.5,0 481.5,0 487.5,-6 487.5,-12 487.5,-12 487.5,-56 487.5,-56 487.5,-62 481.5,-68 475.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"438\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"438\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n",
       "<text text-anchor=\"middle\" x=\"438\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 1]</text>\n",
       "<text text-anchor=\"middle\" x=\"438\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 12&#45;&gt;14 -->\n",
       "<g id=\"edge14\" class=\"edge\">\n",
       "<title>12&#45;&gt;14</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M391.5549,-103.9815C397.4715,-95.0666 403.7335,-85.6313 409.6787,-76.6734\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"412.6464,-78.5311 415.26,-68.2637 406.814,-74.6602 412.6464,-78.5311\"/>\n",
       "</g>\n",
       "<!-- 18 -->\n",
       "<g id=\"node19\" class=\"node\">\n",
       "<title>18</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M710.5,-536.5C710.5,-536.5 629.5,-536.5 629.5,-536.5 623.5,-536.5 617.5,-530.5 617.5,-524.5 617.5,-524.5 617.5,-480.5 617.5,-480.5 617.5,-474.5 623.5,-468.5 629.5,-468.5 629.5,-468.5 710.5,-468.5 710.5,-468.5 716.5,-468.5 722.5,-474.5 722.5,-480.5 722.5,-480.5 722.5,-524.5 722.5,-524.5 722.5,-530.5 716.5,-536.5 710.5,-536.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"670\" y=\"-521.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"670\" y=\"-506.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 32</text>\n",
       "<text text-anchor=\"middle\" x=\"670\" y=\"-491.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 32]</text>\n",
       "<text text-anchor=\"middle\" x=\"670\" y=\"-476.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 17&#45;&gt;18 -->\n",
       "<g id=\"edge18\" class=\"edge\">\n",
       "<title>17&#45;&gt;18</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M747.3796,-579.8796C735.7237,-568.2237 723.0587,-555.5587 711.4148,-543.9148\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"713.8609,-541.4111 704.3149,-536.8149 708.9111,-546.3609 713.8609,-541.4111\"/>\n",
       "</g>\n",
       "<!-- 19 -->\n",
       "<g id=\"node20\" class=\"node\">\n",
       "<title>19</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.725490\" stroke=\"#000000\" d=\"M901,-544C901,-544 753,-544 753,-544 747,-544 741,-538 741,-532 741,-532 741,-473 741,-473 741,-467 747,-461 753,-461 753,-461 901,-461 901,-461 907,-461 913,-467 913,-473 913,-473 913,-532 913,-532 913,-538 907,-544 901,-544\"/>\n",
       "<text text-anchor=\"middle\" x=\"827\" y=\"-528.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Job_management &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"827\" y=\"-513.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.75</text>\n",
       "<text text-anchor=\"middle\" x=\"827\" y=\"-498.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 14</text>\n",
       "<text text-anchor=\"middle\" x=\"827\" y=\"-483.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [3, 11]</text>\n",
       "<text text-anchor=\"middle\" x=\"827\" y=\"-468.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 17&#45;&gt;19 -->\n",
       "<g id=\"edge19\" class=\"edge\">\n",
       "<title>17&#45;&gt;19</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M802.2906,-579.8796C804.9652,-571.5037 807.8063,-562.6067 810.5731,-553.942\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"813.9448,-554.8889 813.6527,-544.2981 807.2766,-552.7595 813.9448,-554.8889\"/>\n",
       "</g>\n",
       "<!-- 20 -->\n",
       "<g id=\"node21\" class=\"node\">\n",
       "<title>20</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.909804\" stroke=\"#000000\" d=\"M744.5,-425C744.5,-425 625.5,-425 625.5,-425 619.5,-425 613.5,-419 613.5,-413 613.5,-413 613.5,-354 613.5,-354 613.5,-348 619.5,-342 625.5,-342 625.5,-342 744.5,-342 744.5,-342 750.5,-342 756.5,-348 756.5,-354 756.5,-354 756.5,-413 756.5,-413 756.5,-419 750.5,-425 744.5,-425\"/>\n",
       "<text text-anchor=\"middle\" x=\"685\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Housing_free &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"685\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.414</text>\n",
       "<text text-anchor=\"middle\" x=\"685\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 12</text>\n",
       "<text text-anchor=\"middle\" x=\"685\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 11]</text>\n",
       "<text text-anchor=\"middle\" x=\"685\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 19&#45;&gt;20 -->\n",
       "<g id=\"edge20\" class=\"edge\">\n",
       "<title>19&#45;&gt;20</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M777.3353,-460.8796C766.1584,-451.513 754.2038,-441.4948 742.7288,-431.8784\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"744.7893,-429.0386 734.8767,-425.2981 740.2931,-434.4037 744.7893,-429.0386\"/>\n",
       "</g>\n",
       "<!-- 23 -->\n",
       "<g id=\"node24\" class=\"node\">\n",
       "<title>23</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M864.5,-417.5C864.5,-417.5 789.5,-417.5 789.5,-417.5 783.5,-417.5 777.5,-411.5 777.5,-405.5 777.5,-405.5 777.5,-361.5 777.5,-361.5 777.5,-355.5 783.5,-349.5 789.5,-349.5 789.5,-349.5 864.5,-349.5 864.5,-349.5 870.5,-349.5 876.5,-355.5 876.5,-361.5 876.5,-361.5 876.5,-405.5 876.5,-405.5 876.5,-411.5 870.5,-417.5 864.5,-417.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"827\" y=\"-402.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"827\" y=\"-387.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n",
       "<text text-anchor=\"middle\" x=\"827\" y=\"-372.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"827\" y=\"-357.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 19&#45;&gt;23 -->\n",
       "<g id=\"edge23\" class=\"edge\">\n",
       "<title>19&#45;&gt;23</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M827,-460.8796C827,-450.2134 827,-438.7021 827,-427.9015\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"830.5001,-427.8149 827,-417.8149 823.5001,-427.815 830.5001,-427.8149\"/>\n",
       "</g>\n",
       "<!-- 21 -->\n",
       "<g id=\"node22\" class=\"node\">\n",
       "<title>21</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M605.5,-298.5C605.5,-298.5 524.5,-298.5 524.5,-298.5 518.5,-298.5 512.5,-292.5 512.5,-286.5 512.5,-286.5 512.5,-242.5 512.5,-242.5 512.5,-236.5 518.5,-230.5 524.5,-230.5 524.5,-230.5 605.5,-230.5 605.5,-230.5 611.5,-230.5 617.5,-236.5 617.5,-242.5 617.5,-242.5 617.5,-286.5 617.5,-286.5 617.5,-292.5 611.5,-298.5 605.5,-298.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"565\" y=\"-283.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"565\" y=\"-268.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 11</text>\n",
       "<text text-anchor=\"middle\" x=\"565\" y=\"-253.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 11]</text>\n",
       "<text text-anchor=\"middle\" x=\"565\" y=\"-238.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 20&#45;&gt;21 -->\n",
       "<g id=\"edge21\" class=\"edge\">\n",
       "<title>20&#45;&gt;21</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M643.0298,-341.8796C631.276,-330.2237 618.5046,-317.5587 606.7628,-305.9148\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"609.1684,-303.3712 599.6033,-298.8149 604.2394,-308.3416 609.1684,-303.3712\"/>\n",
       "</g>\n",
       "<!-- 22 -->\n",
       "<g id=\"node23\" class=\"node\">\n",
       "<title>22</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M722.5,-298.5C722.5,-298.5 647.5,-298.5 647.5,-298.5 641.5,-298.5 635.5,-292.5 635.5,-286.5 635.5,-286.5 635.5,-242.5 635.5,-242.5 635.5,-236.5 641.5,-230.5 647.5,-230.5 647.5,-230.5 722.5,-230.5 722.5,-230.5 728.5,-230.5 734.5,-236.5 734.5,-242.5 734.5,-242.5 734.5,-286.5 734.5,-286.5 734.5,-292.5 728.5,-298.5 722.5,-298.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"685\" y=\"-283.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"685\" y=\"-268.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n",
       "<text text-anchor=\"middle\" x=\"685\" y=\"-253.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"685\" y=\"-238.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 20&#45;&gt;22 -->\n",
       "<g id=\"edge22\" class=\"edge\">\n",
       "<title>20&#45;&gt;22</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M685,-341.8796C685,-331.2134 685,-319.7021 685,-308.9015\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"688.5001,-308.8149 685,-298.8149 681.5001,-308.815 688.5001,-308.8149\"/>\n",
       "</g>\n",
       "<!-- 25 -->\n",
       "<g id=\"node26\" class=\"node\">\n",
       "<title>25</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M1455.5,-655.5C1455.5,-655.5 1380.5,-655.5 1380.5,-655.5 1374.5,-655.5 1368.5,-649.5 1368.5,-643.5 1368.5,-643.5 1368.5,-599.5 1368.5,-599.5 1368.5,-593.5 1374.5,-587.5 1380.5,-587.5 1380.5,-587.5 1455.5,-587.5 1455.5,-587.5 1461.5,-587.5 1467.5,-593.5 1467.5,-599.5 1467.5,-599.5 1467.5,-643.5 1467.5,-643.5 1467.5,-649.5 1461.5,-655.5 1455.5,-655.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"1418\" y=\"-640.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"1418\" y=\"-625.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 5</text>\n",
       "<text text-anchor=\"middle\" x=\"1418\" y=\"-610.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [5, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"1418\" y=\"-595.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 24&#45;&gt;25 -->\n",
       "<g id=\"edge25\" class=\"edge\">\n",
       "<title>24&#45;&gt;25</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M1455.7144,-698.8796C1450.355,-687.8835 1444.5578,-675.9893 1439.1537,-664.9015\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1442.2524,-663.2706 1434.7249,-655.8149 1435.96,-666.3375 1442.2524,-663.2706\"/>\n",
       "</g>\n",
       "<!-- 26 -->\n",
       "<g id=\"node27\" class=\"node\">\n",
       "<title>26</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M1572.5,-655.5C1572.5,-655.5 1497.5,-655.5 1497.5,-655.5 1491.5,-655.5 1485.5,-649.5 1485.5,-643.5 1485.5,-643.5 1485.5,-599.5 1485.5,-599.5 1485.5,-593.5 1491.5,-587.5 1497.5,-587.5 1497.5,-587.5 1572.5,-587.5 1572.5,-587.5 1578.5,-587.5 1584.5,-593.5 1584.5,-599.5 1584.5,-599.5 1584.5,-643.5 1584.5,-643.5 1584.5,-649.5 1578.5,-655.5 1572.5,-655.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"1535\" y=\"-640.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"1535\" y=\"-625.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n",
       "<text text-anchor=\"middle\" x=\"1535\" y=\"-610.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 1]</text>\n",
       "<text text-anchor=\"middle\" x=\"1535\" y=\"-595.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 24&#45;&gt;26 -->\n",
       "<g id=\"edge26\" class=\"edge\">\n",
       "<title>24&#45;&gt;26</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M1496.6353,-698.8796C1502.0872,-687.8835 1507.9843,-675.9893 1513.4816,-664.9015\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1516.6804,-666.3289 1517.9867,-655.8149 1510.4089,-663.2195 1516.6804,-666.3289\"/>\n",
       "</g>\n",
       "<!-- 28 -->\n",
       "<g id=\"node29\" class=\"node\">\n",
       "<title>28</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.392157\" stroke=\"#000000\" d=\"M2631.5,-782C2631.5,-782 2478.5,-782 2478.5,-782 2472.5,-782 2466.5,-776 2466.5,-770 2466.5,-770 2466.5,-711 2466.5,-711 2466.5,-705 2472.5,-699 2478.5,-699 2478.5,-699 2631.5,-699 2631.5,-699 2637.5,-699 2643.5,-705 2643.5,-711 2643.5,-711 2643.5,-770 2643.5,-770 2643.5,-776 2637.5,-782 2631.5,-782\"/>\n",
       "<text text-anchor=\"middle\" x=\"2555\" y=\"-766.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">CreditAmount &lt;= 12296.5</text>\n",
       "<text text-anchor=\"middle\" x=\"2555\" y=\"-751.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.957</text>\n",
       "<text text-anchor=\"middle\" x=\"2555\" y=\"-736.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 243</text>\n",
       "<text text-anchor=\"middle\" x=\"2555\" y=\"-721.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [92, 151]</text>\n",
       "<text text-anchor=\"middle\" x=\"2555\" y=\"-706.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 27&#45;&gt;28 -->\n",
       "<g id=\"edge28\" class=\"edge\">\n",
       "<title>27&#45;&gt;28</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2678.5472,-817.8796C2662.9267,-808.0962 2646.171,-797.6019 2630.1971,-787.5971\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2631.7481,-784.4387 2621.4153,-782.0969 2628.0324,-790.3712 2631.7481,-784.4387\"/>\n",
       "</g>\n",
       "<!-- 71 -->\n",
       "<g id=\"node72\" class=\"node\">\n",
       "<title>71</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.286275\" stroke=\"#000000\" d=\"M3032,-782C3032,-782 2840,-782 2840,-782 2834,-782 2828,-776 2828,-770 2828,-770 2828,-711 2828,-711 2828,-705 2834,-699 2840,-699 2840,-699 3032,-699 3032,-699 3038,-699 3044,-705 3044,-711 3044,-711 3044,-770 3044,-770 3044,-776 3038,-782 3032,-782\"/>\n",
       "<text text-anchor=\"middle\" x=\"2936\" y=\"-766.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">SavingsAccount_&gt;=1000 &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"2936\" y=\"-751.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.98</text>\n",
       "<text text-anchor=\"middle\" x=\"2936\" y=\"-736.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 209</text>\n",
       "<text text-anchor=\"middle\" x=\"2936\" y=\"-721.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [122, 87]</text>\n",
       "<text text-anchor=\"middle\" x=\"2936\" y=\"-706.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 27&#45;&gt;71 -->\n",
       "<g id=\"edge71\" class=\"edge\">\n",
       "<title>27&#45;&gt;71</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2811.8025,-817.8796C2827.5053,-808.0962 2844.3491,-797.6019 2860.4071,-787.5971\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2862.5985,-790.3556 2869.2352,-782.0969 2858.8969,-784.4144 2862.5985,-790.3556\"/>\n",
       "</g>\n",
       "<!-- 29 -->\n",
       "<g id=\"node30\" class=\"node\">\n",
       "<title>29</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.462745\" stroke=\"#000000\" d=\"M2342,-663C2342,-663 2142,-663 2142,-663 2136,-663 2130,-657 2130,-651 2130,-651 2130,-592 2130,-592 2130,-586 2136,-580 2142,-580 2142,-580 2342,-580 2342,-580 2348,-580 2354,-586 2354,-592 2354,-592 2354,-651 2354,-651 2354,-657 2348,-663 2342,-663\"/>\n",
       "<text text-anchor=\"middle\" x=\"2242\" y=\"-647.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">SavingsAccount_unknown &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"2242\" y=\"-632.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.933</text>\n",
       "<text text-anchor=\"middle\" x=\"2242\" y=\"-617.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 232</text>\n",
       "<text text-anchor=\"middle\" x=\"2242\" y=\"-602.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [81, 151]</text>\n",
       "<text text-anchor=\"middle\" x=\"2242\" y=\"-587.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 28&#45;&gt;29 -->\n",
       "<g id=\"edge29\" class=\"edge\">\n",
       "<title>28&#45;&gt;29</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2466.144,-706.7177C2433.5163,-694.3129 2396.0313,-680.0614 2361.1705,-666.8076\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2362.0049,-663.3805 2351.4138,-663.0982 2359.5172,-669.9236 2362.0049,-663.3805\"/>\n",
       "</g>\n",
       "<!-- 70 -->\n",
       "<g id=\"node71\" class=\"node\">\n",
       "<title>70</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M2595.5,-655.5C2595.5,-655.5 2514.5,-655.5 2514.5,-655.5 2508.5,-655.5 2502.5,-649.5 2502.5,-643.5 2502.5,-643.5 2502.5,-599.5 2502.5,-599.5 2502.5,-593.5 2508.5,-587.5 2514.5,-587.5 2514.5,-587.5 2595.5,-587.5 2595.5,-587.5 2601.5,-587.5 2607.5,-593.5 2607.5,-599.5 2607.5,-599.5 2607.5,-643.5 2607.5,-643.5 2607.5,-649.5 2601.5,-655.5 2595.5,-655.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"2555\" y=\"-640.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"2555\" y=\"-625.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 11</text>\n",
       "<text text-anchor=\"middle\" x=\"2555\" y=\"-610.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [11, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"2555\" y=\"-595.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 28&#45;&gt;70 -->\n",
       "<g id=\"edge70\" class=\"edge\">\n",
       "<title>28&#45;&gt;70</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2555,-698.8796C2555,-688.2134 2555,-676.7021 2555,-665.9015\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2558.5001,-665.8149 2555,-655.8149 2551.5001,-665.815 2558.5001,-665.8149\"/>\n",
       "</g>\n",
       "<!-- 30 -->\n",
       "<g id=\"node31\" class=\"node\">\n",
       "<title>30</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.360784\" stroke=\"#000000\" d=\"M1697.5,-544C1697.5,-544 1600.5,-544 1600.5,-544 1594.5,-544 1588.5,-538 1588.5,-532 1588.5,-532 1588.5,-473 1588.5,-473 1588.5,-467 1594.5,-461 1600.5,-461 1600.5,-461 1697.5,-461 1697.5,-461 1703.5,-461 1709.5,-467 1709.5,-473 1709.5,-473 1709.5,-532 1709.5,-532 1709.5,-538 1703.5,-544 1697.5,-544\"/>\n",
       "<text text-anchor=\"middle\" x=\"1649\" y=\"-528.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Duration &lt;= 20.5</text>\n",
       "<text text-anchor=\"middle\" x=\"1649\" y=\"-513.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.964</text>\n",
       "<text text-anchor=\"middle\" x=\"1649\" y=\"-498.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 190</text>\n",
       "<text text-anchor=\"middle\" x=\"1649\" y=\"-483.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [74, 116]</text>\n",
       "<text text-anchor=\"middle\" x=\"1649\" y=\"-468.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 29&#45;&gt;30 -->\n",
       "<g id=\"edge30\" class=\"edge\">\n",
       "<title>29&#45;&gt;30</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2129.7641,-598.9771C2009.0436,-574.7516 1820.8042,-536.9767 1719.3958,-516.6267\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1720.053,-513.1888 1709.5598,-514.6528 1718.6757,-520.052 1720.053,-513.1888\"/>\n",
       "</g>\n",
       "<!-- 57 -->\n",
       "<g id=\"node58\" class=\"node\">\n",
       "<title>57</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.800000\" stroke=\"#000000\" d=\"M2314.5,-544C2314.5,-544 2169.5,-544 2169.5,-544 2163.5,-544 2157.5,-538 2157.5,-532 2157.5,-532 2157.5,-473 2157.5,-473 2157.5,-467 2163.5,-461 2169.5,-461 2169.5,-461 2314.5,-461 2314.5,-461 2320.5,-461 2326.5,-467 2326.5,-473 2326.5,-473 2326.5,-532 2326.5,-532 2326.5,-538 2320.5,-544 2314.5,-544\"/>\n",
       "<text text-anchor=\"middle\" x=\"2242\" y=\"-528.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">CreditAmount &lt;= 1944.5</text>\n",
       "<text text-anchor=\"middle\" x=\"2242\" y=\"-513.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.65</text>\n",
       "<text text-anchor=\"middle\" x=\"2242\" y=\"-498.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 42</text>\n",
       "<text text-anchor=\"middle\" x=\"2242\" y=\"-483.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [7, 35]</text>\n",
       "<text text-anchor=\"middle\" x=\"2242\" y=\"-468.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 29&#45;&gt;57 -->\n",
       "<g id=\"edge57\" class=\"edge\">\n",
       "<title>29&#45;&gt;57</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2242,-579.8796C2242,-571.6838 2242,-562.9891 2242,-554.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2245.5001,-554.298 2242,-544.2981 2238.5001,-554.2981 2245.5001,-554.298\"/>\n",
       "</g>\n",
       "<!-- 31 -->\n",
       "<g id=\"node32\" class=\"node\">\n",
       "<title>31</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.596078\" stroke=\"#000000\" d=\"M1140,-425C1140,-425 1008,-425 1008,-425 1002,-425 996,-419 996,-413 996,-413 996,-354 996,-354 996,-348 1002,-342 1008,-342 1008,-342 1140,-342 1140,-342 1146,-342 1152,-348 1152,-354 1152,-354 1152,-413 1152,-413 1152,-419 1146,-425 1140,-425\"/>\n",
       "<text text-anchor=\"middle\" x=\"1074\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Telephone_yes &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"1074\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.865</text>\n",
       "<text text-anchor=\"middle\" x=\"1074\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 94</text>\n",
       "<text text-anchor=\"middle\" x=\"1074\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [27, 67]</text>\n",
       "<text text-anchor=\"middle\" x=\"1074\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 30&#45;&gt;31 -->\n",
       "<g id=\"edge31\" class=\"edge\">\n",
       "<title>30&#45;&gt;31</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M1588.2807,-489.9338C1486.3157,-468.8314 1280.2869,-426.1924 1162.2971,-401.7737\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1162.7114,-398.2853 1152.2096,-399.686 1161.2927,-405.14 1162.7114,-398.2853\"/>\n",
       "</g>\n",
       "<!-- 44 -->\n",
       "<g id=\"node45\" class=\"node\">\n",
       "<title>44</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.039216\" stroke=\"#000000\" d=\"M1701.5,-425C1701.5,-425 1596.5,-425 1596.5,-425 1590.5,-425 1584.5,-419 1584.5,-413 1584.5,-413 1584.5,-354 1584.5,-354 1584.5,-348 1590.5,-342 1596.5,-342 1596.5,-342 1701.5,-342 1701.5,-342 1707.5,-342 1713.5,-348 1713.5,-354 1713.5,-354 1713.5,-413 1713.5,-413 1713.5,-419 1707.5,-425 1701.5,-425\"/>\n",
       "<text text-anchor=\"middle\" x=\"1649\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Job_skilled &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"1649\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 1.0</text>\n",
       "<text text-anchor=\"middle\" x=\"1649\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 96</text>\n",
       "<text text-anchor=\"middle\" x=\"1649\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [47, 49]</text>\n",
       "<text text-anchor=\"middle\" x=\"1649\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 30&#45;&gt;44 -->\n",
       "<g id=\"edge44\" class=\"edge\">\n",
       "<title>30&#45;&gt;44</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M1649,-460.8796C1649,-452.6838 1649,-443.9891 1649,-435.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1652.5001,-435.298 1649,-425.2981 1645.5001,-435.2981 1652.5001,-435.298\"/>\n",
       "</g>\n",
       "<!-- 32 -->\n",
       "<g id=\"node33\" class=\"node\">\n",
       "<title>32</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.341176\" stroke=\"#000000\" d=\"M909.5,-306C909.5,-306 764.5,-306 764.5,-306 758.5,-306 752.5,-300 752.5,-294 752.5,-294 752.5,-235 752.5,-235 752.5,-229 758.5,-223 764.5,-223 764.5,-223 909.5,-223 909.5,-223 915.5,-223 921.5,-229 921.5,-235 921.5,-235 921.5,-294 921.5,-294 921.5,-300 915.5,-306 909.5,-306\"/>\n",
       "<text text-anchor=\"middle\" x=\"837\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">CreditAmount &lt;= 2985.0</text>\n",
       "<text text-anchor=\"middle\" x=\"837\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.969</text>\n",
       "<text text-anchor=\"middle\" x=\"837\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 58</text>\n",
       "<text text-anchor=\"middle\" x=\"837\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [23, 35]</text>\n",
       "<text text-anchor=\"middle\" x=\"837\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 31&#45;&gt;32 -->\n",
       "<g id=\"edge32\" class=\"edge\">\n",
       "<title>31&#45;&gt;32</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M995.7405,-344.2052C974.2915,-333.4354 950.8466,-321.6635 928.7167,-310.5518\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"930.1605,-307.3604 919.6532,-306.001 927.0194,-313.6161 930.1605,-307.3604\"/>\n",
       "</g>\n",
       "<!-- 37 -->\n",
       "<g id=\"node38\" class=\"node\">\n",
       "<title>37</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.874510\" stroke=\"#000000\" d=\"M1146.5,-306C1146.5,-306 1001.5,-306 1001.5,-306 995.5,-306 989.5,-300 989.5,-294 989.5,-294 989.5,-235 989.5,-235 989.5,-229 995.5,-223 1001.5,-223 1001.5,-223 1146.5,-223 1146.5,-223 1152.5,-223 1158.5,-229 1158.5,-235 1158.5,-235 1158.5,-294 1158.5,-294 1158.5,-300 1152.5,-306 1146.5,-306\"/>\n",
       "<text text-anchor=\"middle\" x=\"1074\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">CreditAmount &lt;= 1015.5</text>\n",
       "<text text-anchor=\"middle\" x=\"1074\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.503</text>\n",
       "<text text-anchor=\"middle\" x=\"1074\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 36</text>\n",
       "<text text-anchor=\"middle\" x=\"1074\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [4, 32]</text>\n",
       "<text text-anchor=\"middle\" x=\"1074\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 31&#45;&gt;37 -->\n",
       "<g id=\"edge37\" class=\"edge\">\n",
       "<title>31&#45;&gt;37</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M1074,-341.8796C1074,-333.6838 1074,-324.9891 1074,-316.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1077.5001,-316.298 1074,-306.2981 1070.5001,-316.2981 1077.5001,-316.298\"/>\n",
       "</g>\n",
       "<!-- 33 -->\n",
       "<g id=\"node34\" class=\"node\">\n",
       "<title>33</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.113725\" stroke=\"#000000\" d=\"M668,-187C668,-187 514,-187 514,-187 508,-187 502,-181 502,-175 502,-175 502,-116 502,-116 502,-110 508,-104 514,-104 514,-104 668,-104 668,-104 674,-104 680,-110 680,-116 680,-116 680,-175 680,-175 680,-181 674,-187 668,-187\"/>\n",
       "<text text-anchor=\"middle\" x=\"591\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">ResidentSince_4.0 &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"591\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.997</text>\n",
       "<text text-anchor=\"middle\" x=\"591\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 49</text>\n",
       "<text text-anchor=\"middle\" x=\"591\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [23, 26]</text>\n",
       "<text text-anchor=\"middle\" x=\"591\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 32&#45;&gt;33 -->\n",
       "<g id=\"edge33\" class=\"edge\">\n",
       "<title>32&#45;&gt;33</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M752.3408,-223.547C731.0591,-213.2521 708.0759,-202.1343 686.3125,-191.6065\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"687.5948,-188.3388 677.0686,-187.1348 684.5465,-194.6402 687.5948,-188.3388\"/>\n",
       "</g>\n",
       "<!-- 36 -->\n",
       "<g id=\"node37\" class=\"node\">\n",
       "<title>36</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M785.5,-179.5C785.5,-179.5 710.5,-179.5 710.5,-179.5 704.5,-179.5 698.5,-173.5 698.5,-167.5 698.5,-167.5 698.5,-123.5 698.5,-123.5 698.5,-117.5 704.5,-111.5 710.5,-111.5 710.5,-111.5 785.5,-111.5 785.5,-111.5 791.5,-111.5 797.5,-117.5 797.5,-123.5 797.5,-123.5 797.5,-167.5 797.5,-167.5 797.5,-173.5 791.5,-179.5 785.5,-179.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"748\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"748\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 9</text>\n",
       "<text text-anchor=\"middle\" x=\"748\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 9]</text>\n",
       "<text text-anchor=\"middle\" x=\"748\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 32&#45;&gt;36 -->\n",
       "<g id=\"edge36\" class=\"edge\">\n",
       "<title>32&#45;&gt;36</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M805.8721,-222.8796C797.4014,-211.5536 788.2181,-199.2748 779.7153,-187.9058\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"782.4562,-185.7268 773.6641,-179.8149 776.8505,-189.9193 782.4562,-185.7268\"/>\n",
       "</g>\n",
       "<!-- 34 -->\n",
       "<g id=\"node35\" class=\"node\">\n",
       "<title>34</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.380392\" stroke=\"#000000\" d=\"M617.5,-68C617.5,-68 528.5,-68 528.5,-68 522.5,-68 516.5,-62 516.5,-56 516.5,-56 516.5,-12 516.5,-12 516.5,-6 522.5,0 528.5,0 528.5,0 617.5,0 617.5,0 623.5,0 629.5,-6 629.5,-12 629.5,-12 629.5,-56 629.5,-56 629.5,-62 623.5,-68 617.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"573\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.96</text>\n",
       "<text text-anchor=\"middle\" x=\"573\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 34</text>\n",
       "<text text-anchor=\"middle\" x=\"573\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [21, 13]</text>\n",
       "<text text-anchor=\"middle\" x=\"573\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 33&#45;&gt;34 -->\n",
       "<g id=\"edge34\" class=\"edge\">\n",
       "<title>33&#45;&gt;34</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M584.2975,-103.9815C582.9473,-95.618 581.5232,-86.7965 580.1582,-78.3409\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"583.5804,-77.578 578.5314,-68.2637 576.6699,-78.6937 583.5804,-77.578\"/>\n",
       "</g>\n",
       "<!-- 35 -->\n",
       "<g id=\"node36\" class=\"node\">\n",
       "<title>35</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.847059\" stroke=\"#000000\" d=\"M750,-68C750,-68 660,-68 660,-68 654,-68 648,-62 648,-56 648,-56 648,-12 648,-12 648,-6 654,0 660,0 660,0 750,0 750,0 756,0 762,-6 762,-12 762,-12 762,-56 762,-56 762,-62 756,-68 750,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"705\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.567</text>\n",
       "<text text-anchor=\"middle\" x=\"705\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 15</text>\n",
       "<text text-anchor=\"middle\" x=\"705\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 13]</text>\n",
       "<text text-anchor=\"middle\" x=\"705\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 33&#45;&gt;35 -->\n",
       "<g id=\"edge35\" class=\"edge\">\n",
       "<title>33&#45;&gt;35</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M633.4494,-103.9815C643.0341,-94.607 653.207,-84.6572 662.7821,-75.2921\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"665.2663,-77.7581 669.9681,-68.2637 660.3717,-72.7538 665.2663,-77.7581\"/>\n",
       "</g>\n",
       "<!-- 38 -->\n",
       "<g id=\"node39\" class=\"node\">\n",
       "<title>38</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.498039\" stroke=\"#000000\" d=\"M992,-187C992,-187 828,-187 828,-187 822,-187 816,-181 816,-175 816,-175 816,-116 816,-116 816,-110 822,-104 828,-104 828,-104 992,-104 992,-104 998,-104 1004,-110 1004,-116 1004,-116 1004,-175 1004,-175 1004,-181 998,-187 992,-187\"/>\n",
       "<text text-anchor=\"middle\" x=\"910\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">CreditHistory_critical &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"910\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.918</text>\n",
       "<text text-anchor=\"middle\" x=\"910\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 3</text>\n",
       "<text text-anchor=\"middle\" x=\"910\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 1]</text>\n",
       "<text text-anchor=\"middle\" x=\"910\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 37&#45;&gt;38 -->\n",
       "<g id=\"edge38\" class=\"edge\">\n",
       "<title>37&#45;&gt;38</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M1016.6408,-222.8796C1003.4075,-213.2774 989.2303,-202.9903 975.6736,-193.1534\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"977.4762,-190.1371 967.3269,-187.0969 973.3651,-195.8027 977.4762,-190.1371\"/>\n",
       "</g>\n",
       "<!-- 41 -->\n",
       "<g id=\"node42\" class=\"node\">\n",
       "<title>41</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.937255\" stroke=\"#000000\" d=\"M1261.5,-187C1261.5,-187 1034.5,-187 1034.5,-187 1028.5,-187 1022.5,-181 1022.5,-175 1022.5,-175 1022.5,-116 1022.5,-116 1022.5,-110 1028.5,-104 1034.5,-104 1034.5,-104 1261.5,-104 1261.5,-104 1267.5,-104 1273.5,-110 1273.5,-116 1273.5,-116 1273.5,-175 1273.5,-175 1273.5,-181 1267.5,-187 1261.5,-187\"/>\n",
       "<text text-anchor=\"middle\" x=\"1148\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">CreditHistory_ok_at_this_bank &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"1148\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.33</text>\n",
       "<text text-anchor=\"middle\" x=\"1148\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 33</text>\n",
       "<text text-anchor=\"middle\" x=\"1148\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 31]</text>\n",
       "<text text-anchor=\"middle\" x=\"1148\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 37&#45;&gt;41 -->\n",
       "<g id=\"edge41\" class=\"edge\">\n",
       "<title>37&#45;&gt;41</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M1099.8816,-222.8796C1105.3142,-214.1434 1111.0992,-204.8404 1116.7053,-195.8253\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1119.6993,-197.6383 1122.0079,-187.2981 1113.7549,-193.9418 1119.6993,-197.6383\"/>\n",
       "</g>\n",
       "<!-- 39 -->\n",
       "<g id=\"node40\" class=\"node\">\n",
       "<title>39</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M877.5,-68C877.5,-68 802.5,-68 802.5,-68 796.5,-68 790.5,-62 790.5,-56 790.5,-56 790.5,-12 790.5,-12 790.5,-6 796.5,0 802.5,0 802.5,0 877.5,0 877.5,0 883.5,0 889.5,-6 889.5,-12 889.5,-12 889.5,-56 889.5,-56 889.5,-62 883.5,-68 877.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"840\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"840\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n",
       "<text text-anchor=\"middle\" x=\"840\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 1]</text>\n",
       "<text text-anchor=\"middle\" x=\"840\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 38&#45;&gt;39 -->\n",
       "<g id=\"edge39\" class=\"edge\">\n",
       "<title>38&#45;&gt;39</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M883.9346,-103.9815C878.3955,-95.1585 872.5364,-85.8258 866.9645,-76.9506\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"869.7922,-74.872 861.5108,-68.2637 863.8637,-78.594 869.7922,-74.872\"/>\n",
       "</g>\n",
       "<!-- 40 -->\n",
       "<g id=\"node41\" class=\"node\">\n",
       "<title>40</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M994.5,-68C994.5,-68 919.5,-68 919.5,-68 913.5,-68 907.5,-62 907.5,-56 907.5,-56 907.5,-12 907.5,-12 907.5,-6 913.5,0 919.5,0 919.5,0 994.5,0 994.5,0 1000.5,0 1006.5,-6 1006.5,-12 1006.5,-12 1006.5,-56 1006.5,-56 1006.5,-62 1000.5,-68 994.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"957\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"957\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n",
       "<text text-anchor=\"middle\" x=\"957\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"957\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 38&#45;&gt;40 -->\n",
       "<g id=\"edge40\" class=\"edge\">\n",
       "<title>38&#45;&gt;40</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M927.5011,-103.9815C931.1427,-95.3423 934.9903,-86.2144 938.6612,-77.5059\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"941.8979,-78.838 942.557,-68.2637 935.4475,-76.119 941.8979,-78.838\"/>\n",
       "</g>\n",
       "<!-- 42 -->\n",
       "<g id=\"node43\" class=\"node\">\n",
       "<title>42</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.968627\" stroke=\"#000000\" d=\"M1127,-68C1127,-68 1037,-68 1037,-68 1031,-68 1025,-62 1025,-56 1025,-56 1025,-12 1025,-12 1025,-6 1031,0 1037,0 1037,0 1127,0 1127,0 1133,0 1139,-6 1139,-12 1139,-12 1139,-56 1139,-56 1139,-62 1133,-68 1127,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"1082\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.201</text>\n",
       "<text text-anchor=\"middle\" x=\"1082\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 32</text>\n",
       "<text text-anchor=\"middle\" x=\"1082\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 31]</text>\n",
       "<text text-anchor=\"middle\" x=\"1082\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 41&#45;&gt;42 -->\n",
       "<g id=\"edge42\" class=\"edge\">\n",
       "<title>41&#45;&gt;42</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M1123.424,-103.9815C1118.2014,-95.1585 1112.6771,-85.8258 1107.4237,-76.9506\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1110.3874,-75.0863 1102.2816,-68.2637 1104.3636,-78.652 1110.3874,-75.0863\"/>\n",
       "</g>\n",
       "<!-- 43 -->\n",
       "<g id=\"node44\" class=\"node\">\n",
       "<title>43</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M1244.5,-68C1244.5,-68 1169.5,-68 1169.5,-68 1163.5,-68 1157.5,-62 1157.5,-56 1157.5,-56 1157.5,-12 1157.5,-12 1157.5,-6 1163.5,0 1169.5,0 1169.5,0 1244.5,0 1244.5,0 1250.5,0 1256.5,-6 1256.5,-12 1256.5,-12 1256.5,-56 1256.5,-56 1256.5,-62 1250.5,-68 1244.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"1207\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"1207\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n",
       "<text text-anchor=\"middle\" x=\"1207\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"1207\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 41&#45;&gt;43 -->\n",
       "<g id=\"edge43\" class=\"edge\">\n",
       "<title>41&#45;&gt;43</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M1169.9694,-103.9815C1174.5895,-95.2504 1179.4736,-86.0202 1184.126,-77.2281\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1187.2859,-78.7395 1188.8694,-68.2637 1181.0987,-75.4655 1187.2859,-78.7395\"/>\n",
       "</g>\n",
       "<!-- 45 -->\n",
       "<g id=\"node46\" class=\"node\">\n",
       "<title>45</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.615686\" stroke=\"#000000\" d=\"M1624.5,-306C1624.5,-306 1479.5,-306 1479.5,-306 1473.5,-306 1467.5,-300 1467.5,-294 1467.5,-294 1467.5,-235 1467.5,-235 1467.5,-229 1473.5,-223 1479.5,-223 1479.5,-223 1624.5,-223 1624.5,-223 1630.5,-223 1636.5,-229 1636.5,-235 1636.5,-235 1636.5,-294 1636.5,-294 1636.5,-300 1630.5,-306 1624.5,-306\"/>\n",
       "<text text-anchor=\"middle\" x=\"1552\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">CreditAmount &lt;= 5594.0</text>\n",
       "<text text-anchor=\"middle\" x=\"1552\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.852</text>\n",
       "<text text-anchor=\"middle\" x=\"1552\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 36</text>\n",
       "<text text-anchor=\"middle\" x=\"1552\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [26, 10]</text>\n",
       "<text text-anchor=\"middle\" x=\"1552\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 44&#45;&gt;45 -->\n",
       "<g id=\"edge45\" class=\"edge\">\n",
       "<title>44&#45;&gt;45</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M1615.0741,-341.8796C1607.8062,-332.9633 1600.057,-323.4565 1592.5672,-314.268\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1595.1018,-311.8379 1586.0707,-306.2981 1589.676,-316.2606 1595.1018,-311.8379\"/>\n",
       "</g>\n",
       "<!-- 52 -->\n",
       "<g id=\"node53\" class=\"node\">\n",
       "<title>52</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.462745\" stroke=\"#000000\" d=\"M1825.5,-306C1825.5,-306 1666.5,-306 1666.5,-306 1660.5,-306 1654.5,-300 1654.5,-294 1654.5,-294 1654.5,-235 1654.5,-235 1654.5,-229 1660.5,-223 1666.5,-223 1666.5,-223 1825.5,-223 1825.5,-223 1831.5,-223 1837.5,-229 1837.5,-235 1837.5,-235 1837.5,-294 1837.5,-294 1837.5,-300 1831.5,-306 1825.5,-306\"/>\n",
       "<text text-anchor=\"middle\" x=\"1746\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">OtherDebtors_none &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"1746\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.934</text>\n",
       "<text text-anchor=\"middle\" x=\"1746\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 60</text>\n",
       "<text text-anchor=\"middle\" x=\"1746\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [21, 39]</text>\n",
       "<text text-anchor=\"middle\" x=\"1746\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 44&#45;&gt;52 -->\n",
       "<g id=\"edge52\" class=\"edge\">\n",
       "<title>44&#45;&gt;52</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M1682.9259,-341.8796C1690.1938,-332.9633 1697.943,-323.4565 1705.4328,-314.268\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1708.324,-316.2606 1711.9293,-306.2981 1702.8982,-311.8379 1708.324,-316.2606\"/>\n",
       "</g>\n",
       "<!-- 46 -->\n",
       "<g id=\"node47\" class=\"node\">\n",
       "<title>46</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.850980\" stroke=\"#000000\" d=\"M1458,-187C1458,-187 1304,-187 1304,-187 1298,-187 1292,-181 1292,-175 1292,-175 1292,-116 1292,-116 1292,-110 1298,-104 1304,-104 1304,-104 1458,-104 1458,-104 1464,-104 1470,-110 1470,-116 1470,-116 1470,-175 1470,-175 1470,-181 1464,-187 1458,-187\"/>\n",
       "<text text-anchor=\"middle\" x=\"1381\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Purpose_television &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"1381\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.559</text>\n",
       "<text text-anchor=\"middle\" x=\"1381\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 23</text>\n",
       "<text text-anchor=\"middle\" x=\"1381\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [20, 3]</text>\n",
       "<text text-anchor=\"middle\" x=\"1381\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 45&#45;&gt;46 -->\n",
       "<g id=\"edge46\" class=\"edge\">\n",
       "<title>45&#45;&gt;46</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M1492.1925,-222.8796C1478.2642,-213.1868 1463.3331,-202.7961 1449.0769,-192.8752\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1450.9811,-189.9362 1440.7737,-187.0969 1446.9826,-195.6819 1450.9811,-189.9362\"/>\n",
       "</g>\n",
       "<!-- 49 -->\n",
       "<g id=\"node50\" class=\"node\">\n",
       "<title>49</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.141176\" stroke=\"#000000\" d=\"M1645.5,-187C1645.5,-187 1500.5,-187 1500.5,-187 1494.5,-187 1488.5,-181 1488.5,-175 1488.5,-175 1488.5,-116 1488.5,-116 1488.5,-110 1494.5,-104 1500.5,-104 1500.5,-104 1645.5,-104 1645.5,-104 1651.5,-104 1657.5,-110 1657.5,-116 1657.5,-116 1657.5,-175 1657.5,-175 1657.5,-181 1651.5,-187 1645.5,-187\"/>\n",
       "<text text-anchor=\"middle\" x=\"1573\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">CreditAmount &lt;= 7187.5</text>\n",
       "<text text-anchor=\"middle\" x=\"1573\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.996</text>\n",
       "<text text-anchor=\"middle\" x=\"1573\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 13</text>\n",
       "<text text-anchor=\"middle\" x=\"1573\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [6, 7]</text>\n",
       "<text text-anchor=\"middle\" x=\"1573\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 45&#45;&gt;49 -->\n",
       "<g id=\"edge49\" class=\"edge\">\n",
       "<title>45&#45;&gt;49</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M1559.3448,-222.8796C1560.807,-214.5938 1562.3592,-205.798 1563.8727,-197.2216\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1567.3327,-197.7542 1565.6239,-187.2981 1560.4392,-196.5376 1567.3327,-197.7542\"/>\n",
       "</g>\n",
       "<!-- 47 -->\n",
       "<g id=\"node48\" class=\"node\">\n",
       "<title>47</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M1367.5,-68C1367.5,-68 1286.5,-68 1286.5,-68 1280.5,-68 1274.5,-62 1274.5,-56 1274.5,-56 1274.5,-12 1274.5,-12 1274.5,-6 1280.5,0 1286.5,0 1286.5,0 1367.5,0 1367.5,0 1373.5,0 1379.5,-6 1379.5,-12 1379.5,-12 1379.5,-56 1379.5,-56 1379.5,-62 1373.5,-68 1367.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"1327\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"1327\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 17</text>\n",
       "<text text-anchor=\"middle\" x=\"1327\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [17, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"1327\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 46&#45;&gt;47 -->\n",
       "<g id=\"edge47\" class=\"edge\">\n",
       "<title>46&#45;&gt;47</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M1360.8924,-103.9815C1356.7084,-95.3423 1352.2877,-86.2144 1348.0701,-77.5059\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1351.1029,-75.7382 1343.5941,-68.2637 1344.8029,-78.7893 1351.1029,-75.7382\"/>\n",
       "</g>\n",
       "<!-- 48 -->\n",
       "<g id=\"node49\" class=\"node\">\n",
       "<title>48</title>\n",
       "<path fill=\"transparent\" stroke=\"#000000\" d=\"M1484.5,-68C1484.5,-68 1409.5,-68 1409.5,-68 1403.5,-68 1397.5,-62 1397.5,-56 1397.5,-56 1397.5,-12 1397.5,-12 1397.5,-6 1403.5,0 1409.5,0 1409.5,0 1484.5,0 1484.5,0 1490.5,0 1496.5,-6 1496.5,-12 1496.5,-12 1496.5,-56 1496.5,-56 1496.5,-62 1490.5,-68 1484.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"1447\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 1.0</text>\n",
       "<text text-anchor=\"middle\" x=\"1447\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 6</text>\n",
       "<text text-anchor=\"middle\" x=\"1447\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [3, 3]</text>\n",
       "<text text-anchor=\"middle\" x=\"1447\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 46&#45;&gt;48 -->\n",
       "<g id=\"edge48\" class=\"edge\">\n",
       "<title>46&#45;&gt;48</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M1405.576,-103.9815C1410.7986,-95.1585 1416.3229,-85.8258 1421.5763,-76.9506\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1424.6364,-78.652 1426.7184,-68.2637 1418.6126,-75.0863 1424.6364,-78.652\"/>\n",
       "</g>\n",
       "<!-- 50 -->\n",
       "<g id=\"node51\" class=\"node\">\n",
       "<title>50</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M1601.5,-68C1601.5,-68 1526.5,-68 1526.5,-68 1520.5,-68 1514.5,-62 1514.5,-56 1514.5,-56 1514.5,-12 1514.5,-12 1514.5,-6 1520.5,0 1526.5,0 1526.5,0 1601.5,0 1601.5,0 1607.5,0 1613.5,-6 1613.5,-12 1613.5,-12 1613.5,-56 1613.5,-56 1613.5,-62 1607.5,-68 1601.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"1564\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"1564\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 4</text>\n",
       "<text text-anchor=\"middle\" x=\"1564\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 4]</text>\n",
       "<text text-anchor=\"middle\" x=\"1564\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 49&#45;&gt;50 -->\n",
       "<g id=\"edge50\" class=\"edge\">\n",
       "<title>49&#45;&gt;50</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M1569.6487,-103.9815C1568.9737,-95.618 1568.2616,-86.7965 1567.5791,-78.3409\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1571.059,-77.9496 1566.7657,-68.2637 1564.0817,-78.5129 1571.059,-77.9496\"/>\n",
       "</g>\n",
       "<!-- 51 -->\n",
       "<g id=\"node52\" class=\"node\">\n",
       "<title>51</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.498039\" stroke=\"#000000\" d=\"M1734,-68C1734,-68 1644,-68 1644,-68 1638,-68 1632,-62 1632,-56 1632,-56 1632,-12 1632,-12 1632,-6 1638,0 1644,0 1644,0 1734,0 1734,0 1740,0 1746,-6 1746,-12 1746,-12 1746,-56 1746,-56 1746,-62 1740,-68 1734,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"1689\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.918</text>\n",
       "<text text-anchor=\"middle\" x=\"1689\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 9</text>\n",
       "<text text-anchor=\"middle\" x=\"1689\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [6, 3]</text>\n",
       "<text text-anchor=\"middle\" x=\"1689\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 49&#45;&gt;51 -->\n",
       "<g id=\"edge51\" class=\"edge\">\n",
       "<title>49&#45;&gt;51</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M1616.1941,-103.9815C1625.9469,-94.607 1636.2983,-84.6572 1646.0414,-75.2921\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1648.5694,-77.7169 1653.3535,-68.2637 1643.7185,-72.6702 1648.5694,-77.7169\"/>\n",
       "</g>\n",
       "<!-- 53 -->\n",
       "<g id=\"node54\" class=\"node\">\n",
       "<title>53</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M1762.5,-179.5C1762.5,-179.5 1687.5,-179.5 1687.5,-179.5 1681.5,-179.5 1675.5,-173.5 1675.5,-167.5 1675.5,-167.5 1675.5,-123.5 1675.5,-123.5 1675.5,-117.5 1681.5,-111.5 1687.5,-111.5 1687.5,-111.5 1762.5,-111.5 1762.5,-111.5 1768.5,-111.5 1774.5,-117.5 1774.5,-123.5 1774.5,-123.5 1774.5,-167.5 1774.5,-167.5 1774.5,-173.5 1768.5,-179.5 1762.5,-179.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"1725\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"1725\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 5</text>\n",
       "<text text-anchor=\"middle\" x=\"1725\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [5, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"1725\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 52&#45;&gt;53 -->\n",
       "<g id=\"edge53\" class=\"edge\">\n",
       "<title>52&#45;&gt;53</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M1738.6552,-222.8796C1736.7729,-212.2134 1734.7415,-200.7021 1732.8356,-189.9015\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1736.2403,-189.0545 1731.0556,-179.8149 1729.3468,-190.2711 1736.2403,-189.0545\"/>\n",
       "</g>\n",
       "<!-- 54 -->\n",
       "<g id=\"node55\" class=\"node\">\n",
       "<title>54</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.588235\" stroke=\"#000000\" d=\"M1893.5,-187C1893.5,-187 1804.5,-187 1804.5,-187 1798.5,-187 1792.5,-181 1792.5,-175 1792.5,-175 1792.5,-116 1792.5,-116 1792.5,-110 1798.5,-104 1804.5,-104 1804.5,-104 1893.5,-104 1893.5,-104 1899.5,-104 1905.5,-110 1905.5,-116 1905.5,-116 1905.5,-175 1905.5,-175 1905.5,-181 1899.5,-187 1893.5,-187\"/>\n",
       "<text text-anchor=\"middle\" x=\"1849\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Age &lt;= 56.5</text>\n",
       "<text text-anchor=\"middle\" x=\"1849\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.87</text>\n",
       "<text text-anchor=\"middle\" x=\"1849\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 55</text>\n",
       "<text text-anchor=\"middle\" x=\"1849\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [16, 39]</text>\n",
       "<text text-anchor=\"middle\" x=\"1849\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 52&#45;&gt;54 -->\n",
       "<g id=\"edge54\" class=\"edge\">\n",
       "<title>52&#45;&gt;54</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M1782.0244,-222.8796C1789.8198,-213.8733 1798.1367,-204.2644 1806.1644,-194.9897\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1808.9237,-197.1498 1812.8218,-187.2981 1803.6309,-192.5686 1808.9237,-197.1498\"/>\n",
       "</g>\n",
       "<!-- 55 -->\n",
       "<g id=\"node56\" class=\"node\">\n",
       "<title>55</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.639216\" stroke=\"#000000\" d=\"M1880,-68C1880,-68 1790,-68 1790,-68 1784,-68 1778,-62 1778,-56 1778,-56 1778,-12 1778,-12 1778,-6 1784,0 1790,0 1790,0 1880,0 1880,0 1886,0 1892,-6 1892,-12 1892,-12 1892,-56 1892,-56 1892,-62 1886,-68 1880,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"1835\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.833</text>\n",
       "<text text-anchor=\"middle\" x=\"1835\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 53</text>\n",
       "<text text-anchor=\"middle\" x=\"1835\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [14, 39]</text>\n",
       "<text text-anchor=\"middle\" x=\"1835\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 54&#45;&gt;55 -->\n",
       "<g id=\"edge55\" class=\"edge\">\n",
       "<title>54&#45;&gt;55</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M1843.7869,-103.9815C1842.7368,-95.618 1841.6292,-86.7965 1840.5675,-78.3409\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1844.0208,-77.7497 1839.3022,-68.2637 1837.0753,-78.6218 1844.0208,-77.7497\"/>\n",
       "</g>\n",
       "<!-- 56 -->\n",
       "<g id=\"node57\" class=\"node\">\n",
       "<title>56</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M1997.5,-68C1997.5,-68 1922.5,-68 1922.5,-68 1916.5,-68 1910.5,-62 1910.5,-56 1910.5,-56 1910.5,-12 1910.5,-12 1910.5,-6 1916.5,0 1922.5,0 1922.5,0 1997.5,0 1997.5,0 2003.5,0 2009.5,-6 2009.5,-12 2009.5,-12 2009.5,-56 2009.5,-56 2009.5,-62 2003.5,-68 1997.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"1960\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"1960\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n",
       "<text text-anchor=\"middle\" x=\"1960\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"1960\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 54&#45;&gt;56 -->\n",
       "<g id=\"edge56\" class=\"edge\">\n",
       "<title>54&#45;&gt;56</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M1890.3323,-103.9815C1899.5733,-94.6989 1909.3758,-84.8522 1918.6187,-75.5677\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1921.3152,-77.82 1925.89,-68.2637 1916.3543,-72.8813 1921.3152,-77.82\"/>\n",
       "</g>\n",
       "<!-- 58 -->\n",
       "<g id=\"node59\" class=\"node\">\n",
       "<title>58</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.376471\" stroke=\"#000000\" d=\"M2215,-425C2215,-425 2125,-425 2125,-425 2119,-425 2113,-419 2113,-413 2113,-413 2113,-354 2113,-354 2113,-348 2119,-342 2125,-342 2125,-342 2215,-342 2215,-342 2221,-342 2227,-348 2227,-354 2227,-354 2227,-413 2227,-413 2227,-419 2221,-425 2215,-425\"/>\n",
       "<text text-anchor=\"middle\" x=\"2170\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Age &lt;= 44.0</text>\n",
       "<text text-anchor=\"middle\" x=\"2170\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.961</text>\n",
       "<text text-anchor=\"middle\" x=\"2170\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 13</text>\n",
       "<text text-anchor=\"middle\" x=\"2170\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [5, 8]</text>\n",
       "<text text-anchor=\"middle\" x=\"2170\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 57&#45;&gt;58 -->\n",
       "<g id=\"edge58\" class=\"edge\">\n",
       "<title>57&#45;&gt;58</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2216.8179,-460.8796C2211.5867,-452.2335 2206.0195,-443.0322 2200.6177,-434.1042\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2203.4608,-432.0421 2195.2896,-425.2981 2197.4717,-435.6658 2203.4608,-432.0421\"/>\n",
       "</g>\n",
       "<!-- 65 -->\n",
       "<g id=\"node66\" class=\"node\">\n",
       "<title>65</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.925490\" stroke=\"#000000\" d=\"M2361.5,-425C2361.5,-425 2264.5,-425 2264.5,-425 2258.5,-425 2252.5,-419 2252.5,-413 2252.5,-413 2252.5,-354 2252.5,-354 2252.5,-348 2258.5,-342 2264.5,-342 2264.5,-342 2361.5,-342 2361.5,-342 2367.5,-342 2373.5,-348 2373.5,-354 2373.5,-354 2373.5,-413 2373.5,-413 2373.5,-419 2367.5,-425 2361.5,-425\"/>\n",
       "<text text-anchor=\"middle\" x=\"2313\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Duration &lt;= 13.5</text>\n",
       "<text text-anchor=\"middle\" x=\"2313\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.362</text>\n",
       "<text text-anchor=\"middle\" x=\"2313\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 29</text>\n",
       "<text text-anchor=\"middle\" x=\"2313\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 27]</text>\n",
       "<text text-anchor=\"middle\" x=\"2313\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 57&#45;&gt;65 -->\n",
       "<g id=\"edge65\" class=\"edge\">\n",
       "<title>57&#45;&gt;65</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2266.8324,-460.8796C2271.9909,-452.2335 2277.4808,-443.0322 2282.8076,-434.1042\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2285.9436,-435.679 2288.0617,-425.2981 2279.9322,-432.0924 2285.9436,-435.679\"/>\n",
       "</g>\n",
       "<!-- 59 -->\n",
       "<g id=\"node60\" class=\"node\">\n",
       "<title>59</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.200000\" stroke=\"#000000\" d=\"M2090.5,-306C2090.5,-306 1929.5,-306 1929.5,-306 1923.5,-306 1917.5,-300 1917.5,-294 1917.5,-294 1917.5,-235 1917.5,-235 1917.5,-229 1923.5,-223 1929.5,-223 1929.5,-223 2090.5,-223 2090.5,-223 2096.5,-223 2102.5,-229 2102.5,-235 2102.5,-235 2102.5,-294 2102.5,-294 2102.5,-300 2096.5,-306 2090.5,-306\"/>\n",
       "<text text-anchor=\"middle\" x=\"2010\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">InstallmentRate_4.0 &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"2010\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.991</text>\n",
       "<text text-anchor=\"middle\" x=\"2010\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 9</text>\n",
       "<text text-anchor=\"middle\" x=\"2010\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [5, 4]</text>\n",
       "<text text-anchor=\"middle\" x=\"2010\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 58&#45;&gt;59 -->\n",
       "<g id=\"edge59\" class=\"edge\">\n",
       "<title>58&#45;&gt;59</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2114.0398,-341.8796C2101.1292,-332.2774 2087.2979,-321.9903 2074.0718,-312.1534\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2076.0414,-309.2564 2065.9286,-306.0969 2071.8639,-314.8732 2076.0414,-309.2564\"/>\n",
       "</g>\n",
       "<!-- 64 -->\n",
       "<g id=\"node65\" class=\"node\">\n",
       "<title>64</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M2207.5,-298.5C2207.5,-298.5 2132.5,-298.5 2132.5,-298.5 2126.5,-298.5 2120.5,-292.5 2120.5,-286.5 2120.5,-286.5 2120.5,-242.5 2120.5,-242.5 2120.5,-236.5 2126.5,-230.5 2132.5,-230.5 2132.5,-230.5 2207.5,-230.5 2207.5,-230.5 2213.5,-230.5 2219.5,-236.5 2219.5,-242.5 2219.5,-242.5 2219.5,-286.5 2219.5,-286.5 2219.5,-292.5 2213.5,-298.5 2207.5,-298.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"2170\" y=\"-283.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"2170\" y=\"-268.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 4</text>\n",
       "<text text-anchor=\"middle\" x=\"2170\" y=\"-253.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 4]</text>\n",
       "<text text-anchor=\"middle\" x=\"2170\" y=\"-238.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 58&#45;&gt;64 -->\n",
       "<g id=\"edge64\" class=\"edge\">\n",
       "<title>58&#45;&gt;64</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2170,-341.8796C2170,-331.2134 2170,-319.7021 2170,-308.9015\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2173.5001,-308.8149 2170,-298.8149 2166.5001,-308.815 2173.5001,-308.8149\"/>\n",
       "</g>\n",
       "<!-- 60 -->\n",
       "<g id=\"node61\" class=\"node\">\n",
       "<title>60</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M2010.5,-179.5C2010.5,-179.5 1935.5,-179.5 1935.5,-179.5 1929.5,-179.5 1923.5,-173.5 1923.5,-167.5 1923.5,-167.5 1923.5,-123.5 1923.5,-123.5 1923.5,-117.5 1929.5,-111.5 1935.5,-111.5 1935.5,-111.5 2010.5,-111.5 2010.5,-111.5 2016.5,-111.5 2022.5,-117.5 2022.5,-123.5 2022.5,-123.5 2022.5,-167.5 2022.5,-167.5 2022.5,-173.5 2016.5,-179.5 2010.5,-179.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"1973\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"1973\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n",
       "<text text-anchor=\"middle\" x=\"1973\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"1973\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 59&#45;&gt;60 -->\n",
       "<g id=\"edge60\" class=\"edge\">\n",
       "<title>59&#45;&gt;60</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M1997.0592,-222.8796C1993.7086,-212.1034 1990.0899,-200.4647 1986.7017,-189.5677\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1989.9806,-188.3248 1983.6693,-179.8149 1983.2963,-190.4032 1989.9806,-188.3248\"/>\n",
       "</g>\n",
       "<!-- 61 -->\n",
       "<g id=\"node62\" class=\"node\">\n",
       "<title>61</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.250980\" stroke=\"#000000\" d=\"M2201.5,-187C2201.5,-187 2052.5,-187 2052.5,-187 2046.5,-187 2040.5,-181 2040.5,-175 2040.5,-175 2040.5,-116 2040.5,-116 2040.5,-110 2046.5,-104 2052.5,-104 2052.5,-104 2201.5,-104 2201.5,-104 2207.5,-104 2213.5,-110 2213.5,-116 2213.5,-116 2213.5,-175 2213.5,-175 2213.5,-181 2207.5,-187 2201.5,-187\"/>\n",
       "<text text-anchor=\"middle\" x=\"2127\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Purpose_car_new &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"2127\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.985</text>\n",
       "<text text-anchor=\"middle\" x=\"2127\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 7</text>\n",
       "<text text-anchor=\"middle\" x=\"2127\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [3, 4]</text>\n",
       "<text text-anchor=\"middle\" x=\"2127\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 59&#45;&gt;61 -->\n",
       "<g id=\"edge61\" class=\"edge\">\n",
       "<title>59&#45;&gt;61</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2050.9209,-222.8796C2059.953,-213.6931 2069.6013,-203.8798 2078.8888,-194.4336\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2081.3893,-196.8827 2085.9044,-187.2981 2076.3977,-191.975 2081.3893,-196.8827\"/>\n",
       "</g>\n",
       "<!-- 62 -->\n",
       "<g id=\"node63\" class=\"node\">\n",
       "<title>62</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.749020\" stroke=\"#000000\" d=\"M2144,-68C2144,-68 2054,-68 2054,-68 2048,-68 2042,-62 2042,-56 2042,-56 2042,-12 2042,-12 2042,-6 2048,0 2054,0 2054,0 2144,0 2144,0 2150,0 2156,-6 2156,-12 2156,-12 2156,-56 2156,-56 2156,-62 2150,-68 2144,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"2099\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.722</text>\n",
       "<text text-anchor=\"middle\" x=\"2099\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 5</text>\n",
       "<text text-anchor=\"middle\" x=\"2099\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 4]</text>\n",
       "<text text-anchor=\"middle\" x=\"2099\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 61&#45;&gt;62 -->\n",
       "<g id=\"edge62\" class=\"edge\">\n",
       "<title>61&#45;&gt;62</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2116.5738,-103.9815C2114.4505,-95.5261 2112.2096,-86.6026 2110.065,-78.0623\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2113.4346,-77.1101 2107.6043,-68.2637 2106.6454,-78.815 2113.4346,-77.1101\"/>\n",
       "</g>\n",
       "<!-- 63 -->\n",
       "<g id=\"node64\" class=\"node\">\n",
       "<title>63</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M2261.5,-68C2261.5,-68 2186.5,-68 2186.5,-68 2180.5,-68 2174.5,-62 2174.5,-56 2174.5,-56 2174.5,-12 2174.5,-12 2174.5,-6 2180.5,0 2186.5,0 2186.5,0 2261.5,0 2261.5,0 2267.5,0 2273.5,-6 2273.5,-12 2273.5,-12 2273.5,-56 2273.5,-56 2273.5,-62 2267.5,-68 2261.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"2224\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"2224\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n",
       "<text text-anchor=\"middle\" x=\"2224\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"2224\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 61&#45;&gt;63 -->\n",
       "<g id=\"edge63\" class=\"edge\">\n",
       "<title>61&#45;&gt;63</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2163.1192,-103.9815C2171.1147,-94.7908 2179.5913,-85.0472 2187.5979,-75.8436\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2190.2693,-78.1055 2194.1921,-68.2637 2184.988,-73.5111 2190.2693,-78.1055\"/>\n",
       "</g>\n",
       "<!-- 66 -->\n",
       "<g id=\"node67\" class=\"node\">\n",
       "<title>66</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.333333\" stroke=\"#000000\" d=\"M2376,-306C2376,-306 2250,-306 2250,-306 2244,-306 2238,-300 2238,-294 2238,-294 2238,-235 2238,-235 2238,-229 2244,-223 2250,-223 2250,-223 2376,-223 2376,-223 2382,-223 2388,-229 2388,-235 2388,-235 2388,-294 2388,-294 2388,-300 2382,-306 2376,-306\"/>\n",
       "<text text-anchor=\"middle\" x=\"2313\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Telephone_no &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"2313\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.971</text>\n",
       "<text text-anchor=\"middle\" x=\"2313\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 5</text>\n",
       "<text text-anchor=\"middle\" x=\"2313\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 3]</text>\n",
       "<text text-anchor=\"middle\" x=\"2313\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 65&#45;&gt;66 -->\n",
       "<g id=\"edge66\" class=\"edge\">\n",
       "<title>65&#45;&gt;66</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2313,-341.8796C2313,-333.6838 2313,-324.9891 2313,-316.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2316.5001,-316.298 2313,-306.2981 2309.5001,-316.2981 2316.5001,-316.298\"/>\n",
       "</g>\n",
       "<!-- 69 -->\n",
       "<g id=\"node70\" class=\"node\">\n",
       "<title>69</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M2499.5,-298.5C2499.5,-298.5 2418.5,-298.5 2418.5,-298.5 2412.5,-298.5 2406.5,-292.5 2406.5,-286.5 2406.5,-286.5 2406.5,-242.5 2406.5,-242.5 2406.5,-236.5 2412.5,-230.5 2418.5,-230.5 2418.5,-230.5 2499.5,-230.5 2499.5,-230.5 2505.5,-230.5 2511.5,-236.5 2511.5,-242.5 2511.5,-242.5 2511.5,-286.5 2511.5,-286.5 2511.5,-292.5 2505.5,-298.5 2499.5,-298.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"2459\" y=\"-283.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"2459\" y=\"-268.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 24</text>\n",
       "<text text-anchor=\"middle\" x=\"2459\" y=\"-253.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 24]</text>\n",
       "<text text-anchor=\"middle\" x=\"2459\" y=\"-238.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 65&#45;&gt;69 -->\n",
       "<g id=\"edge69\" class=\"edge\">\n",
       "<title>65&#45;&gt;69</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2364.0637,-341.8796C2378.634,-330.0038 2394.4896,-317.0804 2408.9958,-305.2568\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2411.3592,-307.8459 2416.8993,-298.8149 2406.9366,-302.4199 2411.3592,-307.8459\"/>\n",
       "</g>\n",
       "<!-- 67 -->\n",
       "<g id=\"node68\" class=\"node\">\n",
       "<title>67</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M2318.5,-179.5C2318.5,-179.5 2243.5,-179.5 2243.5,-179.5 2237.5,-179.5 2231.5,-173.5 2231.5,-167.5 2231.5,-167.5 2231.5,-123.5 2231.5,-123.5 2231.5,-117.5 2237.5,-111.5 2243.5,-111.5 2243.5,-111.5 2318.5,-111.5 2318.5,-111.5 2324.5,-111.5 2330.5,-117.5 2330.5,-123.5 2330.5,-123.5 2330.5,-167.5 2330.5,-167.5 2330.5,-173.5 2324.5,-179.5 2318.5,-179.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"2281\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"2281\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n",
       "<text text-anchor=\"middle\" x=\"2281\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"2281\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 66&#45;&gt;67 -->\n",
       "<g id=\"edge67\" class=\"edge\">\n",
       "<title>66&#45;&gt;67</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2301.808,-222.8796C2298.9102,-212.1034 2295.7804,-200.4647 2292.8501,-189.5677\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2296.2044,-188.563 2290.2275,-179.8149 2289.4445,-190.3808 2296.2044,-188.563\"/>\n",
       "</g>\n",
       "<!-- 68 -->\n",
       "<g id=\"node69\" class=\"node\">\n",
       "<title>68</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M2435.5,-179.5C2435.5,-179.5 2360.5,-179.5 2360.5,-179.5 2354.5,-179.5 2348.5,-173.5 2348.5,-167.5 2348.5,-167.5 2348.5,-123.5 2348.5,-123.5 2348.5,-117.5 2354.5,-111.5 2360.5,-111.5 2360.5,-111.5 2435.5,-111.5 2435.5,-111.5 2441.5,-111.5 2447.5,-117.5 2447.5,-123.5 2447.5,-123.5 2447.5,-167.5 2447.5,-167.5 2447.5,-173.5 2441.5,-179.5 2435.5,-179.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"2398\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"2398\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 3</text>\n",
       "<text text-anchor=\"middle\" x=\"2398\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 3]</text>\n",
       "<text text-anchor=\"middle\" x=\"2398\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 66&#45;&gt;68 -->\n",
       "<g id=\"edge68\" class=\"edge\">\n",
       "<title>66&#45;&gt;68</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2342.7289,-222.8796C2350.7403,-211.6636 2359.4192,-199.5131 2367.4734,-188.2372\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2370.525,-189.9866 2373.4893,-179.8149 2364.8288,-185.9179 2370.525,-189.9866\"/>\n",
       "</g>\n",
       "<!-- 72 -->\n",
       "<g id=\"node73\" class=\"node\">\n",
       "<title>72</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.329412\" stroke=\"#000000\" d=\"M2984.5,-663C2984.5,-663 2887.5,-663 2887.5,-663 2881.5,-663 2875.5,-657 2875.5,-651 2875.5,-651 2875.5,-592 2875.5,-592 2875.5,-586 2881.5,-580 2887.5,-580 2887.5,-580 2984.5,-580 2984.5,-580 2990.5,-580 2996.5,-586 2996.5,-592 2996.5,-592 2996.5,-651 2996.5,-651 2996.5,-657 2990.5,-663 2984.5,-663\"/>\n",
       "<text text-anchor=\"middle\" x=\"2936\" y=\"-647.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Duration &lt;= 31.5</text>\n",
       "<text text-anchor=\"middle\" x=\"2936\" y=\"-632.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.972</text>\n",
       "<text text-anchor=\"middle\" x=\"2936\" y=\"-617.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 204</text>\n",
       "<text text-anchor=\"middle\" x=\"2936\" y=\"-602.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [122, 82]</text>\n",
       "<text text-anchor=\"middle\" x=\"2936\" y=\"-587.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 71&#45;&gt;72 -->\n",
       "<g id=\"edge72\" class=\"edge\">\n",
       "<title>71&#45;&gt;72</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2936,-698.8796C2936,-690.6838 2936,-681.9891 2936,-673.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2939.5001,-673.298 2936,-663.2981 2932.5001,-673.2981 2939.5001,-673.298\"/>\n",
       "</g>\n",
       "<!-- 105 -->\n",
       "<g id=\"node106\" class=\"node\">\n",
       "<title>105</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M3101.5,-655.5C3101.5,-655.5 3026.5,-655.5 3026.5,-655.5 3020.5,-655.5 3014.5,-649.5 3014.5,-643.5 3014.5,-643.5 3014.5,-599.5 3014.5,-599.5 3014.5,-593.5 3020.5,-587.5 3026.5,-587.5 3026.5,-587.5 3101.5,-587.5 3101.5,-587.5 3107.5,-587.5 3113.5,-593.5 3113.5,-599.5 3113.5,-599.5 3113.5,-643.5 3113.5,-643.5 3113.5,-649.5 3107.5,-655.5 3101.5,-655.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"3064\" y=\"-640.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"3064\" y=\"-625.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 5</text>\n",
       "<text text-anchor=\"middle\" x=\"3064\" y=\"-610.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 5]</text>\n",
       "<text text-anchor=\"middle\" x=\"3064\" y=\"-595.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 71&#45;&gt;105 -->\n",
       "<g id=\"edge105\" class=\"edge\">\n",
       "<title>71&#45;&gt;105</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2980.7682,-698.8796C2993.3056,-687.2237 3006.9284,-674.5587 3019.453,-662.9148\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"3022.1491,-665.1872 3027.0898,-655.8149 3017.3828,-660.0605 3022.1491,-665.1872\"/>\n",
       "</g>\n",
       "<!-- 73 -->\n",
       "<g id=\"node74\" class=\"node\">\n",
       "<title>73</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.184314\" stroke=\"#000000\" d=\"M3013,-544C3013,-544 2859,-544 2859,-544 2853,-544 2847,-538 2847,-532 2847,-532 2847,-473 2847,-473 2847,-467 2853,-461 2859,-461 2859,-461 3013,-461 3013,-461 3019,-461 3025,-467 3025,-473 3025,-473 3025,-532 3025,-532 3025,-538 3019,-544 3013,-544\"/>\n",
       "<text text-anchor=\"middle\" x=\"2936\" y=\"-528.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Purpose_car_used &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"2936\" y=\"-513.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.993</text>\n",
       "<text text-anchor=\"middle\" x=\"2936\" y=\"-498.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 158</text>\n",
       "<text text-anchor=\"middle\" x=\"2936\" y=\"-483.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [87, 71]</text>\n",
       "<text text-anchor=\"middle\" x=\"2936\" y=\"-468.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 72&#45;&gt;73 -->\n",
       "<g id=\"edge73\" class=\"edge\">\n",
       "<title>72&#45;&gt;73</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2936,-579.8796C2936,-571.6838 2936,-562.9891 2936,-554.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2939.5001,-554.298 2936,-544.2981 2932.5001,-554.2981 2939.5001,-554.298\"/>\n",
       "</g>\n",
       "<!-- 92 -->\n",
       "<g id=\"node93\" class=\"node\">\n",
       "<title>92</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.686275\" stroke=\"#000000\" d=\"M3493.5,-544C3493.5,-544 3326.5,-544 3326.5,-544 3320.5,-544 3314.5,-538 3314.5,-532 3314.5,-532 3314.5,-473 3314.5,-473 3314.5,-467 3320.5,-461 3326.5,-461 3326.5,-461 3493.5,-461 3493.5,-461 3499.5,-461 3505.5,-467 3505.5,-473 3505.5,-473 3505.5,-532 3505.5,-532 3505.5,-538 3499.5,-544 3493.5,-544\"/>\n",
       "<text text-anchor=\"middle\" x=\"3410\" y=\"-528.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">YearsEmployed_&gt;=7 &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"3410\" y=\"-513.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.794</text>\n",
       "<text text-anchor=\"middle\" x=\"3410\" y=\"-498.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 46</text>\n",
       "<text text-anchor=\"middle\" x=\"3410\" y=\"-483.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [35, 11]</text>\n",
       "<text text-anchor=\"middle\" x=\"3410\" y=\"-468.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 72&#45;&gt;92 -->\n",
       "<g id=\"edge92\" class=\"edge\">\n",
       "<title>72&#45;&gt;92</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2996.7517,-583.4429C2999.5017,-582.2045 3002.2581,-581.0486 3005,-580 3102.665,-542.6489 3220.7248,-522.6907 3304.1132,-512.4372\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"3304.5969,-515.9043 3314.107,-511.2344 3303.7604,-508.9545 3304.5969,-515.9043\"/>\n",
       "</g>\n",
       "<!-- 74 -->\n",
       "<g id=\"node75\" class=\"node\">\n",
       "<title>74</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.325490\" stroke=\"#000000\" d=\"M2901.5,-425C2901.5,-425 2756.5,-425 2756.5,-425 2750.5,-425 2744.5,-419 2744.5,-413 2744.5,-413 2744.5,-354 2744.5,-354 2744.5,-348 2750.5,-342 2756.5,-342 2756.5,-342 2901.5,-342 2901.5,-342 2907.5,-342 2913.5,-348 2913.5,-354 2913.5,-354 2913.5,-413 2913.5,-413 2913.5,-419 2907.5,-425 2901.5,-425\"/>\n",
       "<text text-anchor=\"middle\" x=\"2829\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">CreditAmount &lt;= 1381.5</text>\n",
       "<text text-anchor=\"middle\" x=\"2829\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.973</text>\n",
       "<text text-anchor=\"middle\" x=\"2829\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 144</text>\n",
       "<text text-anchor=\"middle\" x=\"2829\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [86, 58]</text>\n",
       "<text text-anchor=\"middle\" x=\"2829\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 73&#45;&gt;74 -->\n",
       "<g id=\"edge74\" class=\"edge\">\n",
       "<title>73&#45;&gt;74</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2898.5766,-460.8796C2890.4785,-451.8733 2881.8386,-442.2644 2873.4991,-432.9897\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2875.872,-430.394 2866.5831,-425.2981 2870.6667,-435.0743 2875.872,-430.394\"/>\n",
       "</g>\n",
       "<!-- 87 -->\n",
       "<g id=\"node88\" class=\"node\">\n",
       "<title>87</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.921569\" stroke=\"#000000\" d=\"M3091.5,-425C3091.5,-425 2994.5,-425 2994.5,-425 2988.5,-425 2982.5,-419 2982.5,-413 2982.5,-413 2982.5,-354 2982.5,-354 2982.5,-348 2988.5,-342 2994.5,-342 2994.5,-342 3091.5,-342 3091.5,-342 3097.5,-342 3103.5,-348 3103.5,-354 3103.5,-354 3103.5,-413 3103.5,-413 3103.5,-419 3097.5,-425 3091.5,-425\"/>\n",
       "<text text-anchor=\"middle\" x=\"3043\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Duration &lt;= 18.0</text>\n",
       "<text text-anchor=\"middle\" x=\"3043\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.371</text>\n",
       "<text text-anchor=\"middle\" x=\"3043\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 14</text>\n",
       "<text text-anchor=\"middle\" x=\"3043\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 13]</text>\n",
       "<text text-anchor=\"middle\" x=\"3043\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 73&#45;&gt;87 -->\n",
       "<g id=\"edge87\" class=\"edge\">\n",
       "<title>73&#45;&gt;87</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2973.4234,-460.8796C2981.5215,-451.8733 2990.1614,-442.2644 2998.5009,-432.9897\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"3001.3333,-435.0743 3005.4169,-425.2981 2996.128,-430.394 3001.3333,-435.0743\"/>\n",
       "</g>\n",
       "<!-- 75 -->\n",
       "<g id=\"node76\" class=\"node\">\n",
       "<title>75</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.647059\" stroke=\"#000000\" d=\"M2711.5,-306C2711.5,-306 2574.5,-306 2574.5,-306 2568.5,-306 2562.5,-300 2562.5,-294 2562.5,-294 2562.5,-235 2562.5,-235 2562.5,-229 2568.5,-223 2574.5,-223 2574.5,-223 2711.5,-223 2711.5,-223 2717.5,-223 2723.5,-229 2723.5,-235 2723.5,-235 2723.5,-294 2723.5,-294 2723.5,-300 2717.5,-306 2711.5,-306\"/>\n",
       "<text text-anchor=\"middle\" x=\"2643\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">CreditAmount &lt;= 598.5</text>\n",
       "<text text-anchor=\"middle\" x=\"2643\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.827</text>\n",
       "<text text-anchor=\"middle\" x=\"2643\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 50</text>\n",
       "<text text-anchor=\"middle\" x=\"2643\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [37, 13]</text>\n",
       "<text text-anchor=\"middle\" x=\"2643\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 74&#45;&gt;75 -->\n",
       "<g id=\"edge75\" class=\"edge\">\n",
       "<title>74&#45;&gt;75</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2763.9462,-341.8796C2748.6546,-332.0962 2732.2516,-321.6019 2716.614,-311.5971\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2718.3268,-308.538 2708.017,-306.0969 2714.5543,-314.4345 2718.3268,-308.538\"/>\n",
       "</g>\n",
       "<!-- 80 -->\n",
       "<g id=\"node81\" class=\"node\">\n",
       "<title>80</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.082353\" stroke=\"#000000\" d=\"M2901.5,-306C2901.5,-306 2756.5,-306 2756.5,-306 2750.5,-306 2744.5,-300 2744.5,-294 2744.5,-294 2744.5,-235 2744.5,-235 2744.5,-229 2750.5,-223 2756.5,-223 2756.5,-223 2901.5,-223 2901.5,-223 2907.5,-223 2913.5,-229 2913.5,-235 2913.5,-235 2913.5,-294 2913.5,-294 2913.5,-300 2907.5,-306 2901.5,-306\"/>\n",
       "<text text-anchor=\"middle\" x=\"2829\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">CreditAmount &lt;= 3106.0</text>\n",
       "<text text-anchor=\"middle\" x=\"2829\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.999</text>\n",
       "<text text-anchor=\"middle\" x=\"2829\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 94</text>\n",
       "<text text-anchor=\"middle\" x=\"2829\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [49, 45]</text>\n",
       "<text text-anchor=\"middle\" x=\"2829\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 74&#45;&gt;80 -->\n",
       "<g id=\"edge80\" class=\"edge\">\n",
       "<title>74&#45;&gt;80</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2829,-341.8796C2829,-333.6838 2829,-324.9891 2829,-316.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2832.5001,-316.298 2829,-306.2981 2825.5001,-316.2981 2832.5001,-316.298\"/>\n",
       "</g>\n",
       "<!-- 76 -->\n",
       "<g id=\"node77\" class=\"node\">\n",
       "<title>76</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M2552.5,-179.5C2552.5,-179.5 2477.5,-179.5 2477.5,-179.5 2471.5,-179.5 2465.5,-173.5 2465.5,-167.5 2465.5,-167.5 2465.5,-123.5 2465.5,-123.5 2465.5,-117.5 2471.5,-111.5 2477.5,-111.5 2477.5,-111.5 2552.5,-111.5 2552.5,-111.5 2558.5,-111.5 2564.5,-117.5 2564.5,-123.5 2564.5,-123.5 2564.5,-167.5 2564.5,-167.5 2564.5,-173.5 2558.5,-179.5 2552.5,-179.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"2515\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"2515\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 3</text>\n",
       "<text text-anchor=\"middle\" x=\"2515\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 3]</text>\n",
       "<text text-anchor=\"middle\" x=\"2515\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 75&#45;&gt;76 -->\n",
       "<g id=\"edge76\" class=\"edge\">\n",
       "<title>75&#45;&gt;76</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2598.2318,-222.8796C2585.6944,-211.2237 2572.0716,-198.5587 2559.547,-186.9148\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2561.6172,-184.0605 2551.9102,-179.8149 2556.8509,-189.1872 2561.6172,-184.0605\"/>\n",
       "</g>\n",
       "<!-- 77 -->\n",
       "<g id=\"node78\" class=\"node\">\n",
       "<title>77</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.729412\" stroke=\"#000000\" d=\"M2691.5,-187C2691.5,-187 2594.5,-187 2594.5,-187 2588.5,-187 2582.5,-181 2582.5,-175 2582.5,-175 2582.5,-116 2582.5,-116 2582.5,-110 2588.5,-104 2594.5,-104 2594.5,-104 2691.5,-104 2691.5,-104 2697.5,-104 2703.5,-110 2703.5,-116 2703.5,-116 2703.5,-175 2703.5,-175 2703.5,-181 2697.5,-187 2691.5,-187\"/>\n",
       "<text text-anchor=\"middle\" x=\"2643\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Duration &lt;= 16.5</text>\n",
       "<text text-anchor=\"middle\" x=\"2643\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.747</text>\n",
       "<text text-anchor=\"middle\" x=\"2643\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 47</text>\n",
       "<text text-anchor=\"middle\" x=\"2643\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [37, 10]</text>\n",
       "<text text-anchor=\"middle\" x=\"2643\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 75&#45;&gt;77 -->\n",
       "<g id=\"edge77\" class=\"edge\">\n",
       "<title>75&#45;&gt;77</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2643,-222.8796C2643,-214.6838 2643,-205.9891 2643,-197.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2646.5001,-197.298 2643,-187.2981 2639.5001,-197.2981 2646.5001,-197.298\"/>\n",
       "</g>\n",
       "<!-- 78 -->\n",
       "<g id=\"node79\" class=\"node\">\n",
       "<title>78</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.498039\" stroke=\"#000000\" d=\"M2506,-68C2506,-68 2416,-68 2416,-68 2410,-68 2404,-62 2404,-56 2404,-56 2404,-12 2404,-12 2404,-6 2410,0 2416,0 2416,0 2506,0 2506,0 2512,0 2518,-6 2518,-12 2518,-12 2518,-56 2518,-56 2518,-62 2512,-68 2506,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"2461\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.918</text>\n",
       "<text text-anchor=\"middle\" x=\"2461\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 30</text>\n",
       "<text text-anchor=\"middle\" x=\"2461\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [20, 10]</text>\n",
       "<text text-anchor=\"middle\" x=\"2461\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 77&#45;&gt;78 -->\n",
       "<g id=\"edge78\" class=\"edge\">\n",
       "<title>77&#45;&gt;78</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2582.3966,-108.3721C2564.0966,-97.1608 2543.9436,-84.8144 2525.4051,-73.457\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2527.0879,-70.3833 2516.7324,-68.1438 2523.431,-76.3522 2527.0879,-70.3833\"/>\n",
       "</g>\n",
       "<!-- 79 -->\n",
       "<g id=\"node80\" class=\"node\">\n",
       "<title>79</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M2629.5,-68C2629.5,-68 2548.5,-68 2548.5,-68 2542.5,-68 2536.5,-62 2536.5,-56 2536.5,-56 2536.5,-12 2536.5,-12 2536.5,-6 2542.5,0 2548.5,0 2548.5,0 2629.5,0 2629.5,0 2635.5,0 2641.5,-6 2641.5,-12 2641.5,-12 2641.5,-56 2641.5,-56 2641.5,-62 2635.5,-68 2629.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"2589\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"2589\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 17</text>\n",
       "<text text-anchor=\"middle\" x=\"2589\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [17, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"2589\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 77&#45;&gt;79 -->\n",
       "<g id=\"edge79\" class=\"edge\">\n",
       "<title>77&#45;&gt;79</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2622.8924,-103.9815C2618.7084,-95.3423 2614.2877,-86.2144 2610.0701,-77.5059\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2613.1029,-75.7382 2605.5941,-68.2637 2606.8029,-78.7893 2613.1029,-75.7382\"/>\n",
       "</g>\n",
       "<!-- 81 -->\n",
       "<g id=\"node82\" class=\"node\">\n",
       "<title>81</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.274510\" stroke=\"#000000\" d=\"M2830.5,-187C2830.5,-187 2733.5,-187 2733.5,-187 2727.5,-187 2721.5,-181 2721.5,-175 2721.5,-175 2721.5,-116 2721.5,-116 2721.5,-110 2727.5,-104 2733.5,-104 2733.5,-104 2830.5,-104 2830.5,-104 2836.5,-104 2842.5,-110 2842.5,-116 2842.5,-116 2842.5,-175 2842.5,-175 2842.5,-181 2836.5,-187 2830.5,-187\"/>\n",
       "<text text-anchor=\"middle\" x=\"2782\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Duration &lt;= 15.5</text>\n",
       "<text text-anchor=\"middle\" x=\"2782\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.982</text>\n",
       "<text text-anchor=\"middle\" x=\"2782\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 57</text>\n",
       "<text text-anchor=\"middle\" x=\"2782\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [24, 33]</text>\n",
       "<text text-anchor=\"middle\" x=\"2782\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 80&#45;&gt;81 -->\n",
       "<g id=\"edge81\" class=\"edge\">\n",
       "<title>80&#45;&gt;81</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2812.5617,-222.8796C2809.218,-214.4136 2805.664,-205.4153 2802.2071,-196.6626\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2805.4373,-195.3132 2798.5085,-187.2981 2798.9267,-197.8847 2805.4373,-195.3132\"/>\n",
       "</g>\n",
       "<!-- 84 -->\n",
       "<g id=\"node85\" class=\"node\">\n",
       "<title>84</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.521569\" stroke=\"#000000\" d=\"M2963,-187C2963,-187 2873,-187 2873,-187 2867,-187 2861,-181 2861,-175 2861,-175 2861,-116 2861,-116 2861,-110 2867,-104 2873,-104 2873,-104 2963,-104 2963,-104 2969,-104 2975,-110 2975,-116 2975,-116 2975,-175 2975,-175 2975,-181 2969,-187 2963,-187\"/>\n",
       "<text text-anchor=\"middle\" x=\"2918\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Age &lt;= 28.5</text>\n",
       "<text text-anchor=\"middle\" x=\"2918\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.909</text>\n",
       "<text text-anchor=\"middle\" x=\"2918\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 37</text>\n",
       "<text text-anchor=\"middle\" x=\"2918\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [25, 12]</text>\n",
       "<text text-anchor=\"middle\" x=\"2918\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 80&#45;&gt;84 -->\n",
       "<g id=\"edge84\" class=\"edge\">\n",
       "<title>80&#45;&gt;84</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2860.1279,-222.8796C2866.729,-214.0534 2873.7629,-204.6485 2880.5702,-195.5466\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2883.5528,-197.4024 2886.7393,-187.2981 2877.9472,-193.2099 2883.5528,-197.4024\"/>\n",
       "</g>\n",
       "<!-- 82 -->\n",
       "<g id=\"node83\" class=\"node\">\n",
       "<title>82</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.823529\" stroke=\"#000000\" d=\"M2754,-68C2754,-68 2672,-68 2672,-68 2666,-68 2660,-62 2660,-56 2660,-56 2660,-12 2660,-12 2660,-6 2666,0 2672,0 2672,0 2754,0 2754,0 2760,0 2766,-6 2766,-12 2766,-12 2766,-56 2766,-56 2766,-62 2760,-68 2754,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"2713\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.61</text>\n",
       "<text text-anchor=\"middle\" x=\"2713\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 20</text>\n",
       "<text text-anchor=\"middle\" x=\"2713\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [3, 17]</text>\n",
       "<text text-anchor=\"middle\" x=\"2713\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 81&#45;&gt;82 -->\n",
       "<g id=\"edge82\" class=\"edge\">\n",
       "<title>81&#45;&gt;82</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2756.3069,-103.9815C2750.8469,-95.1585 2745.0716,-85.8258 2739.5793,-76.9506\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2742.442,-74.9254 2734.2035,-68.2637 2736.4896,-78.609 2742.442,-74.9254\"/>\n",
       "</g>\n",
       "<!-- 83 -->\n",
       "<g id=\"node84\" class=\"node\">\n",
       "<title>83</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.239216\" stroke=\"#000000\" d=\"M2886,-68C2886,-68 2796,-68 2796,-68 2790,-68 2784,-62 2784,-56 2784,-56 2784,-12 2784,-12 2784,-6 2790,0 2796,0 2796,0 2886,0 2886,0 2892,0 2898,-6 2898,-12 2898,-12 2898,-56 2898,-56 2898,-62 2892,-68 2886,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"2841\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.987</text>\n",
       "<text text-anchor=\"middle\" x=\"2841\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 37</text>\n",
       "<text text-anchor=\"middle\" x=\"2841\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [21, 16]</text>\n",
       "<text text-anchor=\"middle\" x=\"2841\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 81&#45;&gt;83 -->\n",
       "<g id=\"edge83\" class=\"edge\">\n",
       "<title>81&#45;&gt;83</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2803.9694,-103.9815C2808.5895,-95.2504 2813.4736,-86.0202 2818.126,-77.2281\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2821.2859,-78.7395 2822.8694,-68.2637 2815.0987,-75.4655 2821.2859,-78.7395\"/>\n",
       "</g>\n",
       "<!-- 85 -->\n",
       "<g id=\"node86\" class=\"node\">\n",
       "<title>85</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.301961\" stroke=\"#000000\" d=\"M3018,-68C3018,-68 2928,-68 2928,-68 2922,-68 2916,-62 2916,-56 2916,-56 2916,-12 2916,-12 2916,-6 2922,0 2928,0 2928,0 3018,0 3018,0 3024,0 3030,-6 3030,-12 3030,-12 3030,-56 3030,-56 3030,-62 3024,-68 3018,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"2973\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.977</text>\n",
       "<text text-anchor=\"middle\" x=\"2973\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 17</text>\n",
       "<text text-anchor=\"middle\" x=\"2973\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [7, 10]</text>\n",
       "<text text-anchor=\"middle\" x=\"2973\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 84&#45;&gt;85 -->\n",
       "<g id=\"edge85\" class=\"edge\">\n",
       "<title>84&#45;&gt;85</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2938.48,-103.9815C2942.7415,-95.3423 2947.244,-86.2144 2951.5397,-77.5059\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2954.8137,-78.7803 2956.0986,-68.2637 2948.5359,-75.6836 2954.8137,-78.7803\"/>\n",
       "</g>\n",
       "<!-- 86 -->\n",
       "<g id=\"node87\" class=\"node\">\n",
       "<title>86</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.890196\" stroke=\"#000000\" d=\"M3150,-68C3150,-68 3060,-68 3060,-68 3054,-68 3048,-62 3048,-56 3048,-56 3048,-12 3048,-12 3048,-6 3054,0 3060,0 3060,0 3150,0 3150,0 3156,0 3162,-6 3162,-12 3162,-12 3162,-56 3162,-56 3162,-62 3156,-68 3150,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"3105\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.469</text>\n",
       "<text text-anchor=\"middle\" x=\"3105\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 20</text>\n",
       "<text text-anchor=\"middle\" x=\"3105\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [18, 2]</text>\n",
       "<text text-anchor=\"middle\" x=\"3105\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 84&#45;&gt;86 -->\n",
       "<g id=\"edge86\" class=\"edge\">\n",
       "<title>84&#45;&gt;86</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M2975.1575,-109.3801C2978.1419,-107.5506 2981.1027,-105.7481 2984,-104 3001.7681,-93.2793 3021.166,-81.9107 3039.1227,-71.5231\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"3040.8974,-74.54 3047.8086,-66.5097 3037.3981,-68.4774 3040.8974,-74.54\"/>\n",
       "</g>\n",
       "<!-- 88 -->\n",
       "<g id=\"node89\" class=\"node\">\n",
       "<title>88</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.498039\" stroke=\"#000000\" d=\"M3138.5,-306C3138.5,-306 2947.5,-306 2947.5,-306 2941.5,-306 2935.5,-300 2935.5,-294 2935.5,-294 2935.5,-235 2935.5,-235 2935.5,-229 2941.5,-223 2947.5,-223 2947.5,-223 3138.5,-223 3138.5,-223 3144.5,-223 3150.5,-229 3150.5,-235 3150.5,-235 3150.5,-294 3150.5,-294 3150.5,-300 3144.5,-306 3138.5,-306\"/>\n",
       "<text text-anchor=\"middle\" x=\"3043\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">CreditHistory_ok_til_now &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"3043\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.918</text>\n",
       "<text text-anchor=\"middle\" x=\"3043\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 3</text>\n",
       "<text text-anchor=\"middle\" x=\"3043\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 2]</text>\n",
       "<text text-anchor=\"middle\" x=\"3043\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 87&#45;&gt;88 -->\n",
       "<g id=\"edge88\" class=\"edge\">\n",
       "<title>87&#45;&gt;88</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M3043,-341.8796C3043,-333.6838 3043,-324.9891 3043,-316.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"3046.5001,-316.298 3043,-306.2981 3039.5001,-316.2981 3046.5001,-316.298\"/>\n",
       "</g>\n",
       "<!-- 91 -->\n",
       "<g id=\"node92\" class=\"node\">\n",
       "<title>91</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M3261.5,-298.5C3261.5,-298.5 3180.5,-298.5 3180.5,-298.5 3174.5,-298.5 3168.5,-292.5 3168.5,-286.5 3168.5,-286.5 3168.5,-242.5 3168.5,-242.5 3168.5,-236.5 3174.5,-230.5 3180.5,-230.5 3180.5,-230.5 3261.5,-230.5 3261.5,-230.5 3267.5,-230.5 3273.5,-236.5 3273.5,-242.5 3273.5,-242.5 3273.5,-286.5 3273.5,-286.5 3273.5,-292.5 3267.5,-298.5 3261.5,-298.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"3221\" y=\"-283.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"3221\" y=\"-268.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 11</text>\n",
       "<text text-anchor=\"middle\" x=\"3221\" y=\"-253.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 11]</text>\n",
       "<text text-anchor=\"middle\" x=\"3221\" y=\"-238.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 87&#45;&gt;91 -->\n",
       "<g id=\"edge91\" class=\"edge\">\n",
       "<title>87&#45;&gt;91</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M3103.5122,-343.0859C3121.3828,-331.1468 3140.9809,-318.0499 3159,-306 3159.7772,-305.4802 3160.56,-304.9568 3161.3472,-304.4303\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"3163.5476,-307.1693 3169.9135,-298.7001 3159.6556,-301.351 3163.5476,-307.1693\"/>\n",
       "</g>\n",
       "<!-- 89 -->\n",
       "<g id=\"node90\" class=\"node\">\n",
       "<title>89</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M3080.5,-179.5C3080.5,-179.5 3005.5,-179.5 3005.5,-179.5 2999.5,-179.5 2993.5,-173.5 2993.5,-167.5 2993.5,-167.5 2993.5,-123.5 2993.5,-123.5 2993.5,-117.5 2999.5,-111.5 3005.5,-111.5 3005.5,-111.5 3080.5,-111.5 3080.5,-111.5 3086.5,-111.5 3092.5,-117.5 3092.5,-123.5 3092.5,-123.5 3092.5,-167.5 3092.5,-167.5 3092.5,-173.5 3086.5,-179.5 3080.5,-179.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"3043\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"3043\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n",
       "<text text-anchor=\"middle\" x=\"3043\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 2]</text>\n",
       "<text text-anchor=\"middle\" x=\"3043\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 88&#45;&gt;89 -->\n",
       "<g id=\"edge89\" class=\"edge\">\n",
       "<title>88&#45;&gt;89</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M3043,-222.8796C3043,-212.2134 3043,-200.7021 3043,-189.9015\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"3046.5001,-189.8149 3043,-179.8149 3039.5001,-189.815 3046.5001,-189.8149\"/>\n",
       "</g>\n",
       "<!-- 90 -->\n",
       "<g id=\"node91\" class=\"node\">\n",
       "<title>90</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M3197.5,-179.5C3197.5,-179.5 3122.5,-179.5 3122.5,-179.5 3116.5,-179.5 3110.5,-173.5 3110.5,-167.5 3110.5,-167.5 3110.5,-123.5 3110.5,-123.5 3110.5,-117.5 3116.5,-111.5 3122.5,-111.5 3122.5,-111.5 3197.5,-111.5 3197.5,-111.5 3203.5,-111.5 3209.5,-117.5 3209.5,-123.5 3209.5,-123.5 3209.5,-167.5 3209.5,-167.5 3209.5,-173.5 3203.5,-179.5 3197.5,-179.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"3160\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"3160\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n",
       "<text text-anchor=\"middle\" x=\"3160\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"3160\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 88&#45;&gt;90 -->\n",
       "<g id=\"edge90\" class=\"edge\">\n",
       "<title>88&#45;&gt;90</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M3083.9209,-222.8796C3095.2728,-211.3337 3107.5982,-198.7976 3118.957,-187.2446\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"3121.7466,-189.3995 3126.2618,-179.8149 3116.7551,-184.4919 3121.7466,-189.3995\"/>\n",
       "</g>\n",
       "<!-- 93 -->\n",
       "<g id=\"node94\" class=\"node\">\n",
       "<title>93</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.521569\" stroke=\"#000000\" d=\"M3455,-425C3455,-425 3365,-425 3365,-425 3359,-425 3353,-419 3353,-413 3353,-413 3353,-354 3353,-354 3353,-348 3359,-342 3365,-342 3365,-342 3455,-342 3455,-342 3461,-342 3467,-348 3467,-354 3467,-354 3467,-413 3467,-413 3467,-419 3461,-425 3455,-425\"/>\n",
       "<text text-anchor=\"middle\" x=\"3410\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Age &lt;= 34.5</text>\n",
       "<text text-anchor=\"middle\" x=\"3410\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.908</text>\n",
       "<text text-anchor=\"middle\" x=\"3410\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 34</text>\n",
       "<text text-anchor=\"middle\" x=\"3410\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [23, 11]</text>\n",
       "<text text-anchor=\"middle\" x=\"3410\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 92&#45;&gt;93 -->\n",
       "<g id=\"edge93\" class=\"edge\">\n",
       "<title>92&#45;&gt;93</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M3410,-460.8796C3410,-452.6838 3410,-443.9891 3410,-435.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"3413.5001,-435.298 3410,-425.2981 3406.5001,-435.2981 3413.5001,-435.298\"/>\n",
       "</g>\n",
       "<!-- 104 -->\n",
       "<g id=\"node105\" class=\"node\">\n",
       "<title>104</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M3578.5,-417.5C3578.5,-417.5 3497.5,-417.5 3497.5,-417.5 3491.5,-417.5 3485.5,-411.5 3485.5,-405.5 3485.5,-405.5 3485.5,-361.5 3485.5,-361.5 3485.5,-355.5 3491.5,-349.5 3497.5,-349.5 3497.5,-349.5 3578.5,-349.5 3578.5,-349.5 3584.5,-349.5 3590.5,-355.5 3590.5,-361.5 3590.5,-361.5 3590.5,-405.5 3590.5,-405.5 3590.5,-411.5 3584.5,-417.5 3578.5,-417.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"3538\" y=\"-402.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"3538\" y=\"-387.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 12</text>\n",
       "<text text-anchor=\"middle\" x=\"3538\" y=\"-372.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [12, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"3538\" y=\"-357.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 92&#45;&gt;104 -->\n",
       "<g id=\"edge104\" class=\"edge\">\n",
       "<title>92&#45;&gt;104</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M3454.7682,-460.8796C3467.3056,-449.2237 3480.9284,-436.5587 3493.453,-424.9148\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"3496.1491,-427.1872 3501.0898,-417.8149 3491.3828,-422.0605 3496.1491,-427.1872\"/>\n",
       "</g>\n",
       "<!-- 94 -->\n",
       "<g id=\"node95\" class=\"node\">\n",
       "<title>94</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.831373\" stroke=\"#000000\" d=\"M3482,-306C3482,-306 3338,-306 3338,-306 3332,-306 3326,-300 3326,-294 3326,-294 3326,-235 3326,-235 3326,-229 3332,-223 3338,-223 3338,-223 3482,-223 3482,-223 3488,-223 3494,-229 3494,-235 3494,-235 3494,-294 3494,-294 3494,-300 3488,-306 3482,-306\"/>\n",
       "<text text-anchor=\"middle\" x=\"3410\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Property_savings &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"3410\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.592</text>\n",
       "<text text-anchor=\"middle\" x=\"3410\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 21</text>\n",
       "<text text-anchor=\"middle\" x=\"3410\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [18, 3]</text>\n",
       "<text text-anchor=\"middle\" x=\"3410\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 93&#45;&gt;94 -->\n",
       "<g id=\"edge94\" class=\"edge\">\n",
       "<title>93&#45;&gt;94</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M3410,-341.8796C3410,-333.6838 3410,-324.9891 3410,-316.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"3413.5001,-316.298 3410,-306.2981 3406.5001,-316.2981 3413.5001,-316.298\"/>\n",
       "</g>\n",
       "<!-- 99 -->\n",
       "<g id=\"node100\" class=\"node\">\n",
       "<title>99</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.376471\" stroke=\"#000000\" d=\"M3655.5,-306C3655.5,-306 3558.5,-306 3558.5,-306 3552.5,-306 3546.5,-300 3546.5,-294 3546.5,-294 3546.5,-235 3546.5,-235 3546.5,-229 3552.5,-223 3558.5,-223 3558.5,-223 3655.5,-223 3655.5,-223 3661.5,-223 3667.5,-229 3667.5,-235 3667.5,-235 3667.5,-294 3667.5,-294 3667.5,-300 3661.5,-306 3655.5,-306\"/>\n",
       "<text text-anchor=\"middle\" x=\"3607\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Duration &lt;= 47.5</text>\n",
       "<text text-anchor=\"middle\" x=\"3607\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.961</text>\n",
       "<text text-anchor=\"middle\" x=\"3607\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 13</text>\n",
       "<text text-anchor=\"middle\" x=\"3607\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [5, 8]</text>\n",
       "<text text-anchor=\"middle\" x=\"3607\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 93&#45;&gt;99 -->\n",
       "<g id=\"edge99\" class=\"edge\">\n",
       "<title>93&#45;&gt;99</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M3467.1785,-347.4146C3470.1573,-345.5761 3473.1113,-343.7622 3476,-342 3495.9455,-329.8324 3517.7398,-316.8251 3537.7267,-305.0095\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"3539.6368,-307.9463 3546.4693,-299.8488 3536.0785,-301.9182 3539.6368,-307.9463\"/>\n",
       "</g>\n",
       "<!-- 95 -->\n",
       "<g id=\"node96\" class=\"node\">\n",
       "<title>95</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M3320.5,-179.5C3320.5,-179.5 3239.5,-179.5 3239.5,-179.5 3233.5,-179.5 3227.5,-173.5 3227.5,-167.5 3227.5,-167.5 3227.5,-123.5 3227.5,-123.5 3227.5,-117.5 3233.5,-111.5 3239.5,-111.5 3239.5,-111.5 3320.5,-111.5 3320.5,-111.5 3326.5,-111.5 3332.5,-117.5 3332.5,-123.5 3332.5,-123.5 3332.5,-167.5 3332.5,-167.5 3332.5,-173.5 3326.5,-179.5 3320.5,-179.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"3280\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"3280\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 13</text>\n",
       "<text text-anchor=\"middle\" x=\"3280\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [13, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"3280\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 94&#45;&gt;95 -->\n",
       "<g id=\"edge95\" class=\"edge\">\n",
       "<title>94&#45;&gt;95</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M3364.5323,-222.8796C3351.6789,-211.1138 3337.7021,-198.3197 3324.8834,-186.5855\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"3327.2264,-183.9854 3317.4869,-179.8149 3322.4999,-189.1488 3327.2264,-183.9854\"/>\n",
       "</g>\n",
       "<!-- 96 -->\n",
       "<g id=\"node97\" class=\"node\">\n",
       "<title>96</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.400000\" stroke=\"#000000\" d=\"M3527,-187C3527,-187 3363,-187 3363,-187 3357,-187 3351,-181 3351,-175 3351,-175 3351,-116 3351,-116 3351,-110 3357,-104 3363,-104 3363,-104 3527,-104 3527,-104 3533,-104 3539,-110 3539,-116 3539,-116 3539,-175 3539,-175 3539,-181 3533,-187 3527,-187\"/>\n",
       "<text text-anchor=\"middle\" x=\"3445\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">CreditHistory_critical &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"3445\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.954</text>\n",
       "<text text-anchor=\"middle\" x=\"3445\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 8</text>\n",
       "<text text-anchor=\"middle\" x=\"3445\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [5, 3]</text>\n",
       "<text text-anchor=\"middle\" x=\"3445\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 94&#45;&gt;96 -->\n",
       "<g id=\"edge96\" class=\"edge\">\n",
       "<title>94&#45;&gt;96</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M3422.2413,-222.8796C3424.7048,-214.5037 3427.3216,-205.6067 3429.87,-196.942\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"3433.2425,-197.8793 3432.7064,-187.2981 3426.5269,-195.9041 3433.2425,-197.8793\"/>\n",
       "</g>\n",
       "<!-- 97 -->\n",
       "<g id=\"node98\" class=\"node\">\n",
       "<title>97</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.800000\" stroke=\"#000000\" d=\"M3408,-68C3408,-68 3326,-68 3326,-68 3320,-68 3314,-62 3314,-56 3314,-56 3314,-12 3314,-12 3314,-6 3320,0 3326,0 3326,0 3408,0 3408,0 3414,0 3420,-6 3420,-12 3420,-12 3420,-56 3420,-56 3420,-62 3414,-68 3408,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"3367\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.65</text>\n",
       "<text text-anchor=\"middle\" x=\"3367\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 6</text>\n",
       "<text text-anchor=\"middle\" x=\"3367\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [5, 1]</text>\n",
       "<text text-anchor=\"middle\" x=\"3367\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 96&#45;&gt;97 -->\n",
       "<g id=\"edge97\" class=\"edge\">\n",
       "<title>96&#45;&gt;97</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M3415.9557,-103.9815C3409.7192,-95.0666 3403.1187,-85.6313 3396.8522,-76.6734\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"3399.5693,-74.4515 3390.9692,-68.2637 3393.8335,-78.464 3399.5693,-74.4515\"/>\n",
       "</g>\n",
       "<!-- 98 -->\n",
       "<g id=\"node99\" class=\"node\">\n",
       "<title>98</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M3525.5,-68C3525.5,-68 3450.5,-68 3450.5,-68 3444.5,-68 3438.5,-62 3438.5,-56 3438.5,-56 3438.5,-12 3438.5,-12 3438.5,-6 3444.5,0 3450.5,0 3450.5,0 3525.5,0 3525.5,0 3531.5,0 3537.5,-6 3537.5,-12 3537.5,-12 3537.5,-56 3537.5,-56 3537.5,-62 3531.5,-68 3525.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"3488\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"3488\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n",
       "<text text-anchor=\"middle\" x=\"3488\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 2]</text>\n",
       "<text text-anchor=\"middle\" x=\"3488\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 96&#45;&gt;98 -->\n",
       "<g id=\"edge98\" class=\"edge\">\n",
       "<title>96&#45;&gt;98</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M3461.0116,-103.9815C3464.3079,-95.4342 3467.7886,-86.4086 3471.1147,-77.7839\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"3474.4535,-78.8533 3474.7862,-68.2637 3467.9224,-76.3345 3474.4535,-78.8533\"/>\n",
       "</g>\n",
       "<!-- 100 -->\n",
       "<g id=\"node101\" class=\"node\">\n",
       "<title>100</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M3644.5,-179.5C3644.5,-179.5 3569.5,-179.5 3569.5,-179.5 3563.5,-179.5 3557.5,-173.5 3557.5,-167.5 3557.5,-167.5 3557.5,-123.5 3557.5,-123.5 3557.5,-117.5 3563.5,-111.5 3569.5,-111.5 3569.5,-111.5 3644.5,-111.5 3644.5,-111.5 3650.5,-111.5 3656.5,-117.5 3656.5,-123.5 3656.5,-123.5 3656.5,-167.5 3656.5,-167.5 3656.5,-173.5 3650.5,-179.5 3644.5,-179.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"3607\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"3607\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 7</text>\n",
       "<text text-anchor=\"middle\" x=\"3607\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 7]</text>\n",
       "<text text-anchor=\"middle\" x=\"3607\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 99&#45;&gt;100 -->\n",
       "<g id=\"edge100\" class=\"edge\">\n",
       "<title>99&#45;&gt;100</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M3607,-222.8796C3607,-212.2134 3607,-200.7021 3607,-189.9015\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"3610.5001,-189.8149 3607,-179.8149 3603.5001,-189.815 3610.5001,-189.8149\"/>\n",
       "</g>\n",
       "<!-- 101 -->\n",
       "<g id=\"node102\" class=\"node\">\n",
       "<title>101</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.800000\" stroke=\"#000000\" d=\"M3843.5,-187C3843.5,-187 3686.5,-187 3686.5,-187 3680.5,-187 3674.5,-181 3674.5,-175 3674.5,-175 3674.5,-116 3674.5,-116 3674.5,-110 3680.5,-104 3686.5,-104 3686.5,-104 3843.5,-104 3843.5,-104 3849.5,-104 3855.5,-110 3855.5,-116 3855.5,-116 3855.5,-175 3855.5,-175 3855.5,-181 3849.5,-187 3843.5,-187\"/>\n",
       "<text text-anchor=\"middle\" x=\"3765\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Purpose_education &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"3765\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.65</text>\n",
       "<text text-anchor=\"middle\" x=\"3765\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 6</text>\n",
       "<text text-anchor=\"middle\" x=\"3765\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [5, 1]</text>\n",
       "<text text-anchor=\"middle\" x=\"3765\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 99&#45;&gt;101 -->\n",
       "<g id=\"edge101\" class=\"edge\">\n",
       "<title>99&#45;&gt;101</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M3662.2607,-222.8796C3675.0099,-213.2774 3688.6683,-202.9903 3701.7291,-193.1534\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"3703.8883,-195.9089 3709.7705,-187.0969 3699.6769,-190.3174 3703.8883,-195.9089\"/>\n",
       "</g>\n",
       "<!-- 102 -->\n",
       "<g id=\"node103\" class=\"node\">\n",
       "<title>102</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M3728.5,-68C3728.5,-68 3653.5,-68 3653.5,-68 3647.5,-68 3641.5,-62 3641.5,-56 3641.5,-56 3641.5,-12 3641.5,-12 3641.5,-6 3647.5,0 3653.5,0 3653.5,0 3728.5,0 3728.5,0 3734.5,0 3740.5,-6 3740.5,-12 3740.5,-12 3740.5,-56 3740.5,-56 3740.5,-62 3734.5,-68 3728.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"3691\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"3691\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 5</text>\n",
       "<text text-anchor=\"middle\" x=\"3691\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [5, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"3691\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 101&#45;&gt;102 -->\n",
       "<g id=\"edge102\" class=\"edge\">\n",
       "<title>101&#45;&gt;102</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M3737.4451,-103.9815C3731.5285,-95.0666 3725.2665,-85.6313 3719.3213,-76.6734\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"3722.186,-74.6602 3713.74,-68.2637 3716.3536,-78.5311 3722.186,-74.6602\"/>\n",
       "</g>\n",
       "<!-- 103 -->\n",
       "<g id=\"node104\" class=\"node\">\n",
       "<title>103</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M3845.5,-68C3845.5,-68 3770.5,-68 3770.5,-68 3764.5,-68 3758.5,-62 3758.5,-56 3758.5,-56 3758.5,-12 3758.5,-12 3758.5,-6 3764.5,0 3770.5,0 3770.5,0 3845.5,0 3845.5,0 3851.5,0 3857.5,-6 3857.5,-12 3857.5,-12 3857.5,-56 3857.5,-56 3857.5,-62 3851.5,-68 3845.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"3808\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"3808\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n",
       "<text text-anchor=\"middle\" x=\"3808\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 1]</text>\n",
       "<text text-anchor=\"middle\" x=\"3808\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 101&#45;&gt;103 -->\n",
       "<g id=\"edge103\" class=\"edge\">\n",
       "<title>101&#45;&gt;103</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M3781.0116,-103.9815C3784.3079,-95.4342 3787.7886,-86.4086 3791.1147,-77.7839\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"3794.4535,-78.8533 3794.7862,-68.2637 3787.9224,-76.3345 3794.4535,-78.8533\"/>\n",
       "</g>\n",
       "<!-- 107 -->\n",
       "<g id=\"node108\" class=\"node\">\n",
       "<title>107</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.552941\" stroke=\"#000000\" d=\"M4578,-901C4578,-901 4488,-901 4488,-901 4482,-901 4476,-895 4476,-889 4476,-889 4476,-830 4476,-830 4476,-824 4482,-818 4488,-818 4488,-818 4578,-818 4578,-818 4584,-818 4590,-824 4590,-830 4590,-830 4590,-889 4590,-889 4590,-895 4584,-901 4578,-901\"/>\n",
       "<text text-anchor=\"middle\" x=\"4533\" y=\"-885.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Age &lt;= 44.5</text>\n",
       "<text text-anchor=\"middle\" x=\"4533\" y=\"-870.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.892</text>\n",
       "<text text-anchor=\"middle\" x=\"4533\" y=\"-855.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 55</text>\n",
       "<text text-anchor=\"middle\" x=\"4533\" y=\"-840.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [17, 38]</text>\n",
       "<text text-anchor=\"middle\" x=\"4533\" y=\"-825.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 106&#45;&gt;107 -->\n",
       "<g id=\"edge107\" class=\"edge\">\n",
       "<title>106&#45;&gt;107</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4533,-936.8796C4533,-928.6838 4533,-919.9891 4533,-911.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4536.5001,-911.298 4533,-901.2981 4529.5001,-911.2981 4536.5001,-911.298\"/>\n",
       "</g>\n",
       "<!-- 132 -->\n",
       "<g id=\"node133\" class=\"node\">\n",
       "<title>132</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.909804\" stroke=\"#000000\" d=\"M5285,-901C5285,-901 5121,-901 5121,-901 5115,-901 5109,-895 5109,-889 5109,-889 5109,-830 5109,-830 5109,-824 5115,-818 5121,-818 5121,-818 5285,-818 5285,-818 5291,-818 5297,-824 5297,-830 5297,-830 5297,-889 5297,-889 5297,-895 5291,-901 5285,-901\"/>\n",
       "<text text-anchor=\"middle\" x=\"5203\" y=\"-885.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">CreditHistory_critical &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"5203\" y=\"-870.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.413</text>\n",
       "<text text-anchor=\"middle\" x=\"5203\" y=\"-855.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 301</text>\n",
       "<text text-anchor=\"middle\" x=\"5203\" y=\"-840.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [25, 276]</text>\n",
       "<text text-anchor=\"middle\" x=\"5203\" y=\"-825.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 106&#45;&gt;132 -->\n",
       "<g id=\"edge132\" class=\"edge\">\n",
       "<title>106&#45;&gt;132</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4617.5165,-963.4889C4739.8323,-941.7641 4966.0223,-901.5901 5098.6007,-878.0426\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5099.5347,-881.4315 5108.7685,-876.2366 5098.3105,-874.5394 5099.5347,-881.4315\"/>\n",
       "</g>\n",
       "<!-- 108 -->\n",
       "<g id=\"node109\" class=\"node\">\n",
       "<title>108</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.368627\" stroke=\"#000000\" d=\"M4529.5,-782C4529.5,-782 4380.5,-782 4380.5,-782 4374.5,-782 4368.5,-776 4368.5,-770 4368.5,-770 4368.5,-711 4368.5,-711 4368.5,-705 4374.5,-699 4380.5,-699 4380.5,-699 4529.5,-699 4529.5,-699 4535.5,-699 4541.5,-705 4541.5,-711 4541.5,-711 4541.5,-770 4541.5,-770 4541.5,-776 4535.5,-782 4529.5,-782\"/>\n",
       "<text text-anchor=\"middle\" x=\"4455\" y=\"-766.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Purpose_car_new &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"4455\" y=\"-751.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.962</text>\n",
       "<text text-anchor=\"middle\" x=\"4455\" y=\"-736.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 44</text>\n",
       "<text text-anchor=\"middle\" x=\"4455\" y=\"-721.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [17, 27]</text>\n",
       "<text text-anchor=\"middle\" x=\"4455\" y=\"-706.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 107&#45;&gt;108 -->\n",
       "<g id=\"edge108\" class=\"edge\">\n",
       "<title>107&#45;&gt;108</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4505.7194,-817.8796C4499.9932,-809.1434 4493.8954,-799.8404 4487.9863,-790.8253\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4490.8063,-788.7429 4482.3971,-782.2981 4484.9518,-792.5803 4490.8063,-788.7429\"/>\n",
       "</g>\n",
       "<!-- 131 -->\n",
       "<g id=\"node132\" class=\"node\">\n",
       "<title>131</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M4652.5,-774.5C4652.5,-774.5 4571.5,-774.5 4571.5,-774.5 4565.5,-774.5 4559.5,-768.5 4559.5,-762.5 4559.5,-762.5 4559.5,-718.5 4559.5,-718.5 4559.5,-712.5 4565.5,-706.5 4571.5,-706.5 4571.5,-706.5 4652.5,-706.5 4652.5,-706.5 4658.5,-706.5 4664.5,-712.5 4664.5,-718.5 4664.5,-718.5 4664.5,-762.5 4664.5,-762.5 4664.5,-768.5 4658.5,-774.5 4652.5,-774.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"4612\" y=\"-759.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"4612\" y=\"-744.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 11</text>\n",
       "<text text-anchor=\"middle\" x=\"4612\" y=\"-729.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 11]</text>\n",
       "<text text-anchor=\"middle\" x=\"4612\" y=\"-714.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 107&#45;&gt;131 -->\n",
       "<g id=\"edge131\" class=\"edge\">\n",
       "<title>107&#45;&gt;131</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4560.6304,-817.8796C4568.0763,-806.6636 4576.1425,-794.5131 4583.6282,-783.2372\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4586.6046,-785.082 4589.2195,-774.8149 4580.7727,-781.2104 4586.6046,-785.082\"/>\n",
       "</g>\n",
       "<!-- 109 -->\n",
       "<g id=\"node110\" class=\"node\">\n",
       "<title>109</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.560784\" stroke=\"#000000\" d=\"M4447.5,-663C4447.5,-663 4288.5,-663 4288.5,-663 4282.5,-663 4276.5,-657 4276.5,-651 4276.5,-651 4276.5,-592 4276.5,-592 4276.5,-586 4282.5,-580 4288.5,-580 4288.5,-580 4447.5,-580 4447.5,-580 4453.5,-580 4459.5,-586 4459.5,-592 4459.5,-592 4459.5,-651 4459.5,-651 4459.5,-657 4453.5,-663 4447.5,-663\"/>\n",
       "<text text-anchor=\"middle\" x=\"4368\" y=\"-647.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">YearsEmployed_&lt;7 &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"4368\" y=\"-632.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.888</text>\n",
       "<text text-anchor=\"middle\" x=\"4368\" y=\"-617.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 36</text>\n",
       "<text text-anchor=\"middle\" x=\"4368\" y=\"-602.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [11, 25]</text>\n",
       "<text text-anchor=\"middle\" x=\"4368\" y=\"-587.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 108&#45;&gt;109 -->\n",
       "<g id=\"edge109\" class=\"edge\">\n",
       "<title>108&#45;&gt;109</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4424.5716,-698.8796C4418.1189,-690.0534 4411.243,-680.6485 4404.5887,-671.5466\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4407.2856,-669.3051 4398.5583,-663.2981 4401.6347,-673.4364 4407.2856,-669.3051\"/>\n",
       "</g>\n",
       "<!-- 126 -->\n",
       "<g id=\"node127\" class=\"node\">\n",
       "<title>126</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.666667\" stroke=\"#000000\" d=\"M4594.5,-663C4594.5,-663 4489.5,-663 4489.5,-663 4483.5,-663 4477.5,-657 4477.5,-651 4477.5,-651 4477.5,-592 4477.5,-592 4477.5,-586 4483.5,-580 4489.5,-580 4489.5,-580 4594.5,-580 4594.5,-580 4600.5,-580 4606.5,-586 4606.5,-592 4606.5,-592 4606.5,-651 4606.5,-651 4606.5,-657 4600.5,-663 4594.5,-663\"/>\n",
       "<text text-anchor=\"middle\" x=\"4542\" y=\"-647.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Job_skilled &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"4542\" y=\"-632.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.811</text>\n",
       "<text text-anchor=\"middle\" x=\"4542\" y=\"-617.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 8</text>\n",
       "<text text-anchor=\"middle\" x=\"4542\" y=\"-602.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [6, 2]</text>\n",
       "<text text-anchor=\"middle\" x=\"4542\" y=\"-587.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 108&#45;&gt;126 -->\n",
       "<g id=\"edge126\" class=\"edge\">\n",
       "<title>108&#45;&gt;126</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4485.4284,-698.8796C4491.8811,-690.0534 4498.757,-680.6485 4505.4113,-671.5466\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4508.3653,-673.4364 4511.4417,-663.2981 4502.7144,-669.3051 4508.3653,-673.4364\"/>\n",
       "</g>\n",
       "<!-- 110 -->\n",
       "<g id=\"node111\" class=\"node\">\n",
       "<title>110</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.388235\" stroke=\"#000000\" d=\"M4302,-544C4302,-544 4212,-544 4212,-544 4206,-544 4200,-538 4200,-532 4200,-532 4200,-473 4200,-473 4200,-467 4206,-461 4212,-461 4212,-461 4302,-461 4302,-461 4308,-461 4314,-467 4314,-473 4314,-473 4314,-532 4314,-532 4314,-538 4308,-544 4302,-544\"/>\n",
       "<text text-anchor=\"middle\" x=\"4257\" y=\"-528.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Age &lt;= 32.5</text>\n",
       "<text text-anchor=\"middle\" x=\"4257\" y=\"-513.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.958</text>\n",
       "<text text-anchor=\"middle\" x=\"4257\" y=\"-498.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 29</text>\n",
       "<text text-anchor=\"middle\" x=\"4257\" y=\"-483.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [11, 18]</text>\n",
       "<text text-anchor=\"middle\" x=\"4257\" y=\"-468.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 109&#45;&gt;110 -->\n",
       "<g id=\"edge110\" class=\"edge\">\n",
       "<title>109&#45;&gt;110</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4329.1776,-579.8796C4320.6927,-570.7832 4311.6346,-561.0722 4302.9032,-551.7116\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4305.3686,-549.2233 4295.9881,-544.2981 4300.2497,-553.9981 4305.3686,-549.2233\"/>\n",
       "</g>\n",
       "<!-- 125 -->\n",
       "<g id=\"node126\" class=\"node\">\n",
       "<title>125</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M4419.5,-536.5C4419.5,-536.5 4344.5,-536.5 4344.5,-536.5 4338.5,-536.5 4332.5,-530.5 4332.5,-524.5 4332.5,-524.5 4332.5,-480.5 4332.5,-480.5 4332.5,-474.5 4338.5,-468.5 4344.5,-468.5 4344.5,-468.5 4419.5,-468.5 4419.5,-468.5 4425.5,-468.5 4431.5,-474.5 4431.5,-480.5 4431.5,-480.5 4431.5,-524.5 4431.5,-524.5 4431.5,-530.5 4425.5,-536.5 4419.5,-536.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"4382\" y=\"-521.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"4382\" y=\"-506.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 7</text>\n",
       "<text text-anchor=\"middle\" x=\"4382\" y=\"-491.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 7]</text>\n",
       "<text text-anchor=\"middle\" x=\"4382\" y=\"-476.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 109&#45;&gt;125 -->\n",
       "<g id=\"edge125\" class=\"edge\">\n",
       "<title>109&#45;&gt;125</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4372.8965,-579.8796C4374.1514,-569.2134 4375.5056,-557.7021 4376.7763,-546.9015\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4380.2705,-547.1554 4377.9629,-536.8149 4373.3184,-546.3375 4380.2705,-547.1554\"/>\n",
       "</g>\n",
       "<!-- 111 -->\n",
       "<g id=\"node112\" class=\"node\">\n",
       "<title>111</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.749020\" stroke=\"#000000\" d=\"M4208.5,-425C4208.5,-425 4089.5,-425 4089.5,-425 4083.5,-425 4077.5,-419 4077.5,-413 4077.5,-413 4077.5,-354 4077.5,-354 4077.5,-348 4083.5,-342 4089.5,-342 4089.5,-342 4208.5,-342 4208.5,-342 4214.5,-342 4220.5,-348 4220.5,-354 4220.5,-354 4220.5,-413 4220.5,-413 4220.5,-419 4214.5,-425 4208.5,-425\"/>\n",
       "<text text-anchor=\"middle\" x=\"4149\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Housing_rent &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"4149\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.722</text>\n",
       "<text text-anchor=\"middle\" x=\"4149\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 15</text>\n",
       "<text text-anchor=\"middle\" x=\"4149\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [3, 12]</text>\n",
       "<text text-anchor=\"middle\" x=\"4149\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 110&#45;&gt;111 -->\n",
       "<g id=\"edge111\" class=\"edge\">\n",
       "<title>110&#45;&gt;111</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4219.2268,-460.8796C4210.9713,-451.7832 4202.158,-442.0722 4193.6626,-432.7116\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4196.2467,-430.3509 4186.9344,-425.2981 4191.0632,-435.0553 4196.2467,-430.3509\"/>\n",
       "</g>\n",
       "<!-- 118 -->\n",
       "<g id=\"node119\" class=\"node\">\n",
       "<title>118</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.250980\" stroke=\"#000000\" d=\"M4405,-425C4405,-425 4251,-425 4251,-425 4245,-425 4239,-419 4239,-413 4239,-413 4239,-354 4239,-354 4239,-348 4245,-342 4251,-342 4251,-342 4405,-342 4405,-342 4411,-342 4417,-348 4417,-354 4417,-354 4417,-413 4417,-413 4417,-419 4411,-425 4405,-425\"/>\n",
       "<text text-anchor=\"middle\" x=\"4328\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">ResidentSince_2.0 &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"4328\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.985</text>\n",
       "<text text-anchor=\"middle\" x=\"4328\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 14</text>\n",
       "<text text-anchor=\"middle\" x=\"4328\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [8, 6]</text>\n",
       "<text text-anchor=\"middle\" x=\"4328\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 110&#45;&gt;118 -->\n",
       "<g id=\"edge118\" class=\"edge\">\n",
       "<title>110&#45;&gt;118</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4281.8324,-460.8796C4286.9909,-452.2335 4292.4808,-443.0322 4297.8076,-434.1042\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4300.9436,-435.679 4303.0617,-425.2981 4294.9322,-432.0924 4300.9436,-435.679\"/>\n",
       "</g>\n",
       "<!-- 112 -->\n",
       "<g id=\"node113\" class=\"node\">\n",
       "<title>112</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.917647\" stroke=\"#000000\" d=\"M4080.5,-306C4080.5,-306 3935.5,-306 3935.5,-306 3929.5,-306 3923.5,-300 3923.5,-294 3923.5,-294 3923.5,-235 3923.5,-235 3923.5,-229 3929.5,-223 3935.5,-223 3935.5,-223 4080.5,-223 4080.5,-223 4086.5,-223 4092.5,-229 4092.5,-235 4092.5,-235 4092.5,-294 4092.5,-294 4092.5,-300 4086.5,-306 4080.5,-306\"/>\n",
       "<text text-anchor=\"middle\" x=\"4008\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">CreditAmount &lt;= 8390.5</text>\n",
       "<text text-anchor=\"middle\" x=\"4008\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.391</text>\n",
       "<text text-anchor=\"middle\" x=\"4008\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 13</text>\n",
       "<text text-anchor=\"middle\" x=\"4008\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 12]</text>\n",
       "<text text-anchor=\"middle\" x=\"4008\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 111&#45;&gt;112 -->\n",
       "<g id=\"edge112\" class=\"edge\">\n",
       "<title>111&#45;&gt;112</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4099.685,-341.8796C4088.5868,-332.513 4076.7165,-322.4948 4065.3223,-312.8784\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4067.425,-310.0731 4057.5254,-306.2981 4062.9101,-315.4225 4067.425,-310.0731\"/>\n",
       "</g>\n",
       "<!-- 117 -->\n",
       "<g id=\"node118\" class=\"node\">\n",
       "<title>117</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M4197.5,-298.5C4197.5,-298.5 4122.5,-298.5 4122.5,-298.5 4116.5,-298.5 4110.5,-292.5 4110.5,-286.5 4110.5,-286.5 4110.5,-242.5 4110.5,-242.5 4110.5,-236.5 4116.5,-230.5 4122.5,-230.5 4122.5,-230.5 4197.5,-230.5 4197.5,-230.5 4203.5,-230.5 4209.5,-236.5 4209.5,-242.5 4209.5,-242.5 4209.5,-286.5 4209.5,-286.5 4209.5,-292.5 4203.5,-298.5 4197.5,-298.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"4160\" y=\"-283.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"4160\" y=\"-268.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n",
       "<text text-anchor=\"middle\" x=\"4160\" y=\"-253.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"4160\" y=\"-238.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 111&#45;&gt;117 -->\n",
       "<g id=\"edge117\" class=\"edge\">\n",
       "<title>111&#45;&gt;117</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4152.8473,-341.8796C4153.8332,-331.2134 4154.8973,-319.7021 4155.8957,-308.9015\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4159.3926,-309.0947 4156.828,-298.8149 4152.4224,-308.4503 4159.3926,-309.0947\"/>\n",
       "</g>\n",
       "<!-- 113 -->\n",
       "<g id=\"node114\" class=\"node\">\n",
       "<title>113</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M3966.5,-179.5C3966.5,-179.5 3885.5,-179.5 3885.5,-179.5 3879.5,-179.5 3873.5,-173.5 3873.5,-167.5 3873.5,-167.5 3873.5,-123.5 3873.5,-123.5 3873.5,-117.5 3879.5,-111.5 3885.5,-111.5 3885.5,-111.5 3966.5,-111.5 3966.5,-111.5 3972.5,-111.5 3978.5,-117.5 3978.5,-123.5 3978.5,-123.5 3978.5,-167.5 3978.5,-167.5 3978.5,-173.5 3972.5,-179.5 3966.5,-179.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"3926\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"3926\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 11</text>\n",
       "<text text-anchor=\"middle\" x=\"3926\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 11]</text>\n",
       "<text text-anchor=\"middle\" x=\"3926\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 112&#45;&gt;113 -->\n",
       "<g id=\"edge113\" class=\"edge\">\n",
       "<title>112&#45;&gt;113</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M3979.3204,-222.8796C3971.5917,-211.6636 3963.2191,-199.5131 3955.4492,-188.2372\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"3958.2018,-186.0634 3949.6456,-179.8149 3952.4377,-190.0353 3958.2018,-186.0634\"/>\n",
       "</g>\n",
       "<!-- 114 -->\n",
       "<g id=\"node115\" class=\"node\">\n",
       "<title>114</title>\n",
       "<path fill=\"transparent\" stroke=\"#000000\" d=\"M4161,-187C4161,-187 4009,-187 4009,-187 4003,-187 3997,-181 3997,-175 3997,-175 3997,-116 3997,-116 3997,-110 4003,-104 4009,-104 4009,-104 4161,-104 4161,-104 4167,-104 4173,-110 4173,-116 4173,-116 4173,-175 4173,-175 4173,-181 4167,-187 4161,-187\"/>\n",
       "<text text-anchor=\"middle\" x=\"4085\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">OtherPlans_stores &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"4085\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 1.0</text>\n",
       "<text text-anchor=\"middle\" x=\"4085\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n",
       "<text text-anchor=\"middle\" x=\"4085\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 1]</text>\n",
       "<text text-anchor=\"middle\" x=\"4085\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 112&#45;&gt;114 -->\n",
       "<g id=\"edge114\" class=\"edge\">\n",
       "<title>112&#45;&gt;114</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4034.9309,-222.8796C4040.5837,-214.1434 4046.6033,-204.8404 4052.4366,-195.8253\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4055.4601,-197.5952 4057.9542,-187.2981 4049.5831,-193.7924 4055.4601,-197.5952\"/>\n",
       "</g>\n",
       "<!-- 115 -->\n",
       "<g id=\"node116\" class=\"node\">\n",
       "<title>115</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M4045.5,-68C4045.5,-68 3970.5,-68 3970.5,-68 3964.5,-68 3958.5,-62 3958.5,-56 3958.5,-56 3958.5,-12 3958.5,-12 3958.5,-6 3964.5,0 3970.5,0 3970.5,0 4045.5,0 4045.5,0 4051.5,0 4057.5,-6 4057.5,-12 4057.5,-12 4057.5,-56 4057.5,-56 4057.5,-62 4051.5,-68 4045.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"4008\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"4008\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n",
       "<text text-anchor=\"middle\" x=\"4008\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"4008\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 114&#45;&gt;115 -->\n",
       "<g id=\"edge115\" class=\"edge\">\n",
       "<title>114&#45;&gt;115</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4056.328,-103.9815C4050.1715,-95.0666 4043.6557,-85.6313 4037.4695,-76.6734\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4040.2245,-74.5034 4031.6619,-68.2637 4034.4645,-78.4811 4040.2245,-74.5034\"/>\n",
       "</g>\n",
       "<!-- 116 -->\n",
       "<g id=\"node117\" class=\"node\">\n",
       "<title>116</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M4162.5,-68C4162.5,-68 4087.5,-68 4087.5,-68 4081.5,-68 4075.5,-62 4075.5,-56 4075.5,-56 4075.5,-12 4075.5,-12 4075.5,-6 4081.5,0 4087.5,0 4087.5,0 4162.5,0 4162.5,0 4168.5,0 4174.5,-6 4174.5,-12 4174.5,-12 4174.5,-56 4174.5,-56 4174.5,-62 4168.5,-68 4162.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"4125\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"4125\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n",
       "<text text-anchor=\"middle\" x=\"4125\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 1]</text>\n",
       "<text text-anchor=\"middle\" x=\"4125\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 114&#45;&gt;116 -->\n",
       "<g id=\"edge116\" class=\"edge\">\n",
       "<title>114&#45;&gt;116</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4099.8945,-103.9815C4102.9608,-95.4342 4106.1987,-86.4086 4109.2928,-77.7839\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4112.6257,-78.8582 4112.7081,-68.2637 4106.0369,-76.4944 4112.6257,-78.8582\"/>\n",
       "</g>\n",
       "<!-- 119 -->\n",
       "<g id=\"node120\" class=\"node\">\n",
       "<title>119</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.498039\" stroke=\"#000000\" d=\"M4389.5,-306C4389.5,-306 4244.5,-306 4244.5,-306 4238.5,-306 4232.5,-300 4232.5,-294 4232.5,-294 4232.5,-235 4232.5,-235 4232.5,-229 4238.5,-223 4244.5,-223 4244.5,-223 4389.5,-223 4389.5,-223 4395.5,-223 4401.5,-229 4401.5,-235 4401.5,-235 4401.5,-294 4401.5,-294 4401.5,-300 4395.5,-306 4389.5,-306\"/>\n",
       "<text text-anchor=\"middle\" x=\"4317\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">CreditAmount &lt;= 1071.5</text>\n",
       "<text text-anchor=\"middle\" x=\"4317\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.918</text>\n",
       "<text text-anchor=\"middle\" x=\"4317\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 9</text>\n",
       "<text text-anchor=\"middle\" x=\"4317\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [3, 6]</text>\n",
       "<text text-anchor=\"middle\" x=\"4317\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 118&#45;&gt;119 -->\n",
       "<g id=\"edge119\" class=\"edge\">\n",
       "<title>118&#45;&gt;119</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4324.1527,-341.8796C4323.3951,-333.6838 4322.5914,-324.9891 4321.8068,-316.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4325.2694,-315.9334 4320.8637,-306.2981 4318.2991,-316.5778 4325.2694,-315.9334\"/>\n",
       "</g>\n",
       "<!-- 124 -->\n",
       "<g id=\"node125\" class=\"node\">\n",
       "<title>124</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M4506.5,-298.5C4506.5,-298.5 4431.5,-298.5 4431.5,-298.5 4425.5,-298.5 4419.5,-292.5 4419.5,-286.5 4419.5,-286.5 4419.5,-242.5 4419.5,-242.5 4419.5,-236.5 4425.5,-230.5 4431.5,-230.5 4431.5,-230.5 4506.5,-230.5 4506.5,-230.5 4512.5,-230.5 4518.5,-236.5 4518.5,-242.5 4518.5,-242.5 4518.5,-286.5 4518.5,-286.5 4518.5,-292.5 4512.5,-298.5 4506.5,-298.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"4469\" y=\"-283.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"4469\" y=\"-268.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 5</text>\n",
       "<text text-anchor=\"middle\" x=\"4469\" y=\"-253.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [5, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"4469\" y=\"-238.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 118&#45;&gt;124 -->\n",
       "<g id=\"edge124\" class=\"edge\">\n",
       "<title>118&#45;&gt;124</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4377.315,-341.8796C4391.256,-330.1138 4406.4154,-317.3197 4420.3188,-305.5855\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4422.9564,-307.9394 4428.3411,-298.8149 4418.4416,-302.5899 4422.9564,-307.9394\"/>\n",
       "</g>\n",
       "<!-- 120 -->\n",
       "<g id=\"node121\" class=\"node\">\n",
       "<title>120</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M4278.5,-179.5C4278.5,-179.5 4203.5,-179.5 4203.5,-179.5 4197.5,-179.5 4191.5,-173.5 4191.5,-167.5 4191.5,-167.5 4191.5,-123.5 4191.5,-123.5 4191.5,-117.5 4197.5,-111.5 4203.5,-111.5 4203.5,-111.5 4278.5,-111.5 4278.5,-111.5 4284.5,-111.5 4290.5,-117.5 4290.5,-123.5 4290.5,-123.5 4290.5,-167.5 4290.5,-167.5 4290.5,-173.5 4284.5,-179.5 4278.5,-179.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"4241\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"4241\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n",
       "<text text-anchor=\"middle\" x=\"4241\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"4241\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 119&#45;&gt;120 -->\n",
       "<g id=\"edge120\" class=\"edge\">\n",
       "<title>119&#45;&gt;120</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4290.4189,-222.8796C4283.326,-211.7735 4275.6479,-199.7513 4268.5063,-188.5691\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4271.2477,-186.3589 4262.9154,-179.8149 4265.3482,-190.1267 4271.2477,-186.3589\"/>\n",
       "</g>\n",
       "<!-- 121 -->\n",
       "<g id=\"node122\" class=\"node\">\n",
       "<title>121</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.831373\" stroke=\"#000000\" d=\"M4477.5,-187C4477.5,-187 4320.5,-187 4320.5,-187 4314.5,-187 4308.5,-181 4308.5,-175 4308.5,-175 4308.5,-116 4308.5,-116 4308.5,-110 4314.5,-104 4320.5,-104 4320.5,-104 4477.5,-104 4477.5,-104 4483.5,-104 4489.5,-110 4489.5,-116 4489.5,-116 4489.5,-175 4489.5,-175 4489.5,-181 4483.5,-187 4477.5,-187\"/>\n",
       "<text text-anchor=\"middle\" x=\"4399\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Purpose_education &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"4399\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.592</text>\n",
       "<text text-anchor=\"middle\" x=\"4399\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 7</text>\n",
       "<text text-anchor=\"middle\" x=\"4399\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 6]</text>\n",
       "<text text-anchor=\"middle\" x=\"4399\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 119&#45;&gt;121 -->\n",
       "<g id=\"edge121\" class=\"edge\">\n",
       "<title>119&#45;&gt;121</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4345.6796,-222.8796C4351.7615,-214.0534 4358.2422,-204.6485 4364.5141,-195.5466\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4367.4059,-197.5184 4370.198,-187.2981 4361.6418,-193.5465 4367.4059,-197.5184\"/>\n",
       "</g>\n",
       "<!-- 122 -->\n",
       "<g id=\"node123\" class=\"node\">\n",
       "<title>122</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M4359.5,-68C4359.5,-68 4284.5,-68 4284.5,-68 4278.5,-68 4272.5,-62 4272.5,-56 4272.5,-56 4272.5,-12 4272.5,-12 4272.5,-6 4278.5,0 4284.5,0 4284.5,0 4359.5,0 4359.5,0 4365.5,0 4371.5,-6 4371.5,-12 4371.5,-12 4371.5,-56 4371.5,-56 4371.5,-62 4365.5,-68 4359.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"4322\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"4322\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 6</text>\n",
       "<text text-anchor=\"middle\" x=\"4322\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 6]</text>\n",
       "<text text-anchor=\"middle\" x=\"4322\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 121&#45;&gt;122 -->\n",
       "<g id=\"edge122\" class=\"edge\">\n",
       "<title>121&#45;&gt;122</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4370.328,-103.9815C4364.1715,-95.0666 4357.6557,-85.6313 4351.4695,-76.6734\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4354.2245,-74.5034 4345.6619,-68.2637 4348.4645,-78.4811 4354.2245,-74.5034\"/>\n",
       "</g>\n",
       "<!-- 123 -->\n",
       "<g id=\"node124\" class=\"node\">\n",
       "<title>123</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M4476.5,-68C4476.5,-68 4401.5,-68 4401.5,-68 4395.5,-68 4389.5,-62 4389.5,-56 4389.5,-56 4389.5,-12 4389.5,-12 4389.5,-6 4395.5,0 4401.5,0 4401.5,0 4476.5,0 4476.5,0 4482.5,0 4488.5,-6 4488.5,-12 4488.5,-12 4488.5,-56 4488.5,-56 4488.5,-62 4482.5,-68 4476.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"4439\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"4439\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n",
       "<text text-anchor=\"middle\" x=\"4439\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"4439\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 121&#45;&gt;123 -->\n",
       "<g id=\"edge123\" class=\"edge\">\n",
       "<title>121&#45;&gt;123</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4413.8945,-103.9815C4416.9608,-95.4342 4420.1987,-86.4086 4423.2928,-77.7839\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4426.6257,-78.8582 4426.7081,-68.2637 4420.0369,-76.4944 4426.6257,-78.8582\"/>\n",
       "</g>\n",
       "<!-- 127 -->\n",
       "<g id=\"node128\" class=\"node\">\n",
       "<title>127</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.498039\" stroke=\"#000000\" d=\"M4601,-544C4601,-544 4469,-544 4469,-544 4463,-544 4457,-538 4457,-532 4457,-532 4457,-473 4457,-473 4457,-467 4463,-461 4469,-461 4469,-461 4601,-461 4601,-461 4607,-461 4613,-467 4613,-473 4613,-473 4613,-532 4613,-532 4613,-538 4607,-544 4601,-544\"/>\n",
       "<text text-anchor=\"middle\" x=\"4535\" y=\"-528.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Telephone_yes &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"4535\" y=\"-513.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.918</text>\n",
       "<text text-anchor=\"middle\" x=\"4535\" y=\"-498.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 3</text>\n",
       "<text text-anchor=\"middle\" x=\"4535\" y=\"-483.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 2]</text>\n",
       "<text text-anchor=\"middle\" x=\"4535\" y=\"-468.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 126&#45;&gt;127 -->\n",
       "<g id=\"edge127\" class=\"edge\">\n",
       "<title>126&#45;&gt;127</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4539.5517,-579.8796C4539.0696,-571.6838 4538.5582,-562.9891 4538.0589,-554.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4541.54,-554.0753 4537.4587,-544.2981 4534.5521,-554.4864 4541.54,-554.0753\"/>\n",
       "</g>\n",
       "<!-- 130 -->\n",
       "<g id=\"node131\" class=\"node\">\n",
       "<title>130</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M4718.5,-536.5C4718.5,-536.5 4643.5,-536.5 4643.5,-536.5 4637.5,-536.5 4631.5,-530.5 4631.5,-524.5 4631.5,-524.5 4631.5,-480.5 4631.5,-480.5 4631.5,-474.5 4637.5,-468.5 4643.5,-468.5 4643.5,-468.5 4718.5,-468.5 4718.5,-468.5 4724.5,-468.5 4730.5,-474.5 4730.5,-480.5 4730.5,-480.5 4730.5,-524.5 4730.5,-524.5 4730.5,-530.5 4724.5,-536.5 4718.5,-536.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"4681\" y=\"-521.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"4681\" y=\"-506.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 5</text>\n",
       "<text text-anchor=\"middle\" x=\"4681\" y=\"-491.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [5, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"4681\" y=\"-476.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 126&#45;&gt;130 -->\n",
       "<g id=\"edge130\" class=\"edge\">\n",
       "<title>126&#45;&gt;130</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4590.6155,-579.8796C4604.3587,-568.1138 4619.3031,-555.3197 4633.0093,-543.5855\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4635.5976,-545.9771 4640.9178,-536.8149 4631.0452,-540.6596 4635.5976,-545.9771\"/>\n",
       "</g>\n",
       "<!-- 128 -->\n",
       "<g id=\"node129\" class=\"node\">\n",
       "<title>128</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M4547.5,-417.5C4547.5,-417.5 4472.5,-417.5 4472.5,-417.5 4466.5,-417.5 4460.5,-411.5 4460.5,-405.5 4460.5,-405.5 4460.5,-361.5 4460.5,-361.5 4460.5,-355.5 4466.5,-349.5 4472.5,-349.5 4472.5,-349.5 4547.5,-349.5 4547.5,-349.5 4553.5,-349.5 4559.5,-355.5 4559.5,-361.5 4559.5,-361.5 4559.5,-405.5 4559.5,-405.5 4559.5,-411.5 4553.5,-417.5 4547.5,-417.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"4510\" y=\"-402.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"4510\" y=\"-387.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n",
       "<text text-anchor=\"middle\" x=\"4510\" y=\"-372.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 2]</text>\n",
       "<text text-anchor=\"middle\" x=\"4510\" y=\"-357.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 127&#45;&gt;128 -->\n",
       "<g id=\"edge128\" class=\"edge\">\n",
       "<title>127&#45;&gt;128</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4526.2562,-460.8796C4524.0154,-450.2134 4521.5971,-438.7021 4519.3281,-427.9015\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4522.6903,-426.8817 4517.209,-417.8149 4515.8398,-428.3209 4522.6903,-426.8817\"/>\n",
       "</g>\n",
       "<!-- 129 -->\n",
       "<g id=\"node130\" class=\"node\">\n",
       "<title>129</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M4664.5,-417.5C4664.5,-417.5 4589.5,-417.5 4589.5,-417.5 4583.5,-417.5 4577.5,-411.5 4577.5,-405.5 4577.5,-405.5 4577.5,-361.5 4577.5,-361.5 4577.5,-355.5 4583.5,-349.5 4589.5,-349.5 4589.5,-349.5 4664.5,-349.5 4664.5,-349.5 4670.5,-349.5 4676.5,-355.5 4676.5,-361.5 4676.5,-361.5 4676.5,-405.5 4676.5,-405.5 4676.5,-411.5 4670.5,-417.5 4664.5,-417.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"4627\" y=\"-402.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"4627\" y=\"-387.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n",
       "<text text-anchor=\"middle\" x=\"4627\" y=\"-372.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"4627\" y=\"-357.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 127&#45;&gt;129 -->\n",
       "<g id=\"edge129\" class=\"edge\">\n",
       "<title>127&#45;&gt;129</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4567.1771,-460.8796C4575.9333,-449.5536 4585.4262,-437.2748 4594.2156,-425.9058\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4597.1234,-427.8671 4600.4708,-417.8149 4591.5854,-423.5856 4597.1234,-427.8671\"/>\n",
       "</g>\n",
       "<!-- 133 -->\n",
       "<g id=\"node134\" class=\"node\">\n",
       "<title>133</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.850980\" stroke=\"#000000\" d=\"M5280,-782C5280,-782 5126,-782 5126,-782 5120,-782 5114,-776 5114,-770 5114,-770 5114,-711 5114,-711 5114,-705 5120,-699 5126,-699 5126,-699 5280,-699 5280,-699 5286,-699 5292,-705 5292,-711 5292,-711 5292,-770 5292,-770 5292,-776 5286,-782 5280,-782\"/>\n",
       "<text text-anchor=\"middle\" x=\"5203\" y=\"-766.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Purpose_car_used &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"5203\" y=\"-751.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.553</text>\n",
       "<text text-anchor=\"middle\" x=\"5203\" y=\"-736.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 179</text>\n",
       "<text text-anchor=\"middle\" x=\"5203\" y=\"-721.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [23, 156]</text>\n",
       "<text text-anchor=\"middle\" x=\"5203\" y=\"-706.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 132&#45;&gt;133 -->\n",
       "<g id=\"edge133\" class=\"edge\">\n",
       "<title>132&#45;&gt;133</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5203,-817.8796C5203,-809.6838 5203,-800.9891 5203,-792.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5206.5001,-792.298 5203,-782.2981 5199.5001,-792.2981 5206.5001,-792.298\"/>\n",
       "</g>\n",
       "<!-- 162 -->\n",
       "<g id=\"node163\" class=\"node\">\n",
       "<title>162</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.984314\" stroke=\"#000000\" d=\"M5512.5,-782C5512.5,-782 5367.5,-782 5367.5,-782 5361.5,-782 5355.5,-776 5355.5,-770 5355.5,-770 5355.5,-711 5355.5,-711 5355.5,-705 5361.5,-699 5367.5,-699 5367.5,-699 5512.5,-699 5512.5,-699 5518.5,-699 5524.5,-705 5524.5,-711 5524.5,-711 5524.5,-770 5524.5,-770 5524.5,-776 5518.5,-782 5512.5,-782\"/>\n",
       "<text text-anchor=\"middle\" x=\"5440\" y=\"-766.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">CreditAmount &lt;= 6984.5</text>\n",
       "<text text-anchor=\"middle\" x=\"5440\" y=\"-751.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.121</text>\n",
       "<text text-anchor=\"middle\" x=\"5440\" y=\"-736.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 122</text>\n",
       "<text text-anchor=\"middle\" x=\"5440\" y=\"-721.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 120]</text>\n",
       "<text text-anchor=\"middle\" x=\"5440\" y=\"-706.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 132&#45;&gt;162 -->\n",
       "<g id=\"edge162\" class=\"edge\">\n",
       "<title>132&#45;&gt;162</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5285.8911,-817.8796C5306.0071,-807.7791 5327.6323,-796.9209 5348.1356,-786.626\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5349.7895,-789.712 5357.1557,-782.0969 5346.6484,-783.4563 5349.7895,-789.712\"/>\n",
       "</g>\n",
       "<!-- 134 -->\n",
       "<g id=\"node135\" class=\"node\">\n",
       "<title>134</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.819608\" stroke=\"#000000\" d=\"M5193.5,-663C5193.5,-663 5048.5,-663 5048.5,-663 5042.5,-663 5036.5,-657 5036.5,-651 5036.5,-651 5036.5,-592 5036.5,-592 5036.5,-586 5042.5,-580 5048.5,-580 5048.5,-580 5193.5,-580 5193.5,-580 5199.5,-580 5205.5,-586 5205.5,-592 5205.5,-592 5205.5,-651 5205.5,-651 5205.5,-657 5199.5,-663 5193.5,-663\"/>\n",
       "<text text-anchor=\"middle\" x=\"5121\" y=\"-647.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">CreditAmount &lt;= 4458.5</text>\n",
       "<text text-anchor=\"middle\" x=\"5121\" y=\"-632.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.616</text>\n",
       "<text text-anchor=\"middle\" x=\"5121\" y=\"-617.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 151</text>\n",
       "<text text-anchor=\"middle\" x=\"5121\" y=\"-602.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [23, 128]</text>\n",
       "<text text-anchor=\"middle\" x=\"5121\" y=\"-587.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 133&#45;&gt;134 -->\n",
       "<g id=\"edge134\" class=\"edge\">\n",
       "<title>133&#45;&gt;134</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5174.3204,-698.8796C5168.2385,-690.0534 5161.7578,-680.6485 5155.4859,-671.5466\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5158.3582,-669.5465 5149.802,-663.2981 5152.5941,-673.5184 5158.3582,-669.5465\"/>\n",
       "</g>\n",
       "<!-- 161 -->\n",
       "<g id=\"node162\" class=\"node\">\n",
       "<title>161</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M5316.5,-655.5C5316.5,-655.5 5235.5,-655.5 5235.5,-655.5 5229.5,-655.5 5223.5,-649.5 5223.5,-643.5 5223.5,-643.5 5223.5,-599.5 5223.5,-599.5 5223.5,-593.5 5229.5,-587.5 5235.5,-587.5 5235.5,-587.5 5316.5,-587.5 5316.5,-587.5 5322.5,-587.5 5328.5,-593.5 5328.5,-599.5 5328.5,-599.5 5328.5,-643.5 5328.5,-643.5 5328.5,-649.5 5322.5,-655.5 5316.5,-655.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"5276\" y=\"-640.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"5276\" y=\"-625.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 28</text>\n",
       "<text text-anchor=\"middle\" x=\"5276\" y=\"-610.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 28]</text>\n",
       "<text text-anchor=\"middle\" x=\"5276\" y=\"-595.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 133&#45;&gt;161 -->\n",
       "<g id=\"edge161\" class=\"edge\">\n",
       "<title>133&#45;&gt;161</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5228.5319,-698.8796C5235.3448,-687.7735 5242.7198,-675.7513 5249.5794,-664.5691\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5252.704,-666.1691 5254.9497,-655.8149 5246.7372,-662.5087 5252.704,-666.1691\"/>\n",
       "</g>\n",
       "<!-- 135 -->\n",
       "<g id=\"node136\" class=\"node\">\n",
       "<title>135</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.878431\" stroke=\"#000000\" d=\"M5142,-544C5142,-544 5046,-544 5046,-544 5040,-544 5034,-538 5034,-532 5034,-532 5034,-473 5034,-473 5034,-467 5040,-461 5046,-461 5046,-461 5142,-461 5142,-461 5148,-461 5154,-467 5154,-473 5154,-473 5154,-532 5154,-532 5154,-538 5148,-544 5142,-544\"/>\n",
       "<text text-anchor=\"middle\" x=\"5094\" y=\"-528.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Age &lt;= 23.5</text>\n",
       "<text text-anchor=\"middle\" x=\"5094\" y=\"-513.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.495</text>\n",
       "<text text-anchor=\"middle\" x=\"5094\" y=\"-498.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 129</text>\n",
       "<text text-anchor=\"middle\" x=\"5094\" y=\"-483.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [14, 115]</text>\n",
       "<text text-anchor=\"middle\" x=\"5094\" y=\"-468.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 134&#45;&gt;135 -->\n",
       "<g id=\"edge135\" class=\"edge\">\n",
       "<title>134&#45;&gt;135</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5111.5567,-579.8796C5109.6767,-571.5938 5107.6811,-562.798 5105.7351,-554.2216\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5109.1096,-553.2757 5103.4836,-544.2981 5102.2831,-554.8247 5109.1096,-553.2757\"/>\n",
       "</g>\n",
       "<!-- 152 -->\n",
       "<g id=\"node153\" class=\"node\">\n",
       "<title>152</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.305882\" stroke=\"#000000\" d=\"M5398.5,-544C5398.5,-544 5239.5,-544 5239.5,-544 5233.5,-544 5227.5,-538 5227.5,-532 5227.5,-532 5227.5,-473 5227.5,-473 5227.5,-467 5233.5,-461 5239.5,-461 5239.5,-461 5398.5,-461 5398.5,-461 5404.5,-461 5410.5,-467 5410.5,-473 5410.5,-473 5410.5,-532 5410.5,-532 5410.5,-538 5404.5,-544 5398.5,-544\"/>\n",
       "<text text-anchor=\"middle\" x=\"5319\" y=\"-528.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">YearsEmployed_&lt;7 &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"5319\" y=\"-513.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.976</text>\n",
       "<text text-anchor=\"middle\" x=\"5319\" y=\"-498.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 22</text>\n",
       "<text text-anchor=\"middle\" x=\"5319\" y=\"-483.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [9, 13]</text>\n",
       "<text text-anchor=\"middle\" x=\"5319\" y=\"-468.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 134&#45;&gt;152 -->\n",
       "<g id=\"edge152\" class=\"edge\">\n",
       "<title>134&#45;&gt;152</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5190.2508,-579.8796C5206.6797,-570.0056 5224.3136,-559.4075 5241.0989,-549.3193\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5243.0202,-552.2482 5249.7883,-544.0969 5239.4142,-546.2484 5243.0202,-552.2482\"/>\n",
       "</g>\n",
       "<!-- 136 -->\n",
       "<g id=\"node137\" class=\"node\">\n",
       "<title>136</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.443137\" stroke=\"#000000\" d=\"M4936.5,-425C4936.5,-425 4839.5,-425 4839.5,-425 4833.5,-425 4827.5,-419 4827.5,-413 4827.5,-413 4827.5,-354 4827.5,-354 4827.5,-348 4833.5,-342 4839.5,-342 4839.5,-342 4936.5,-342 4936.5,-342 4942.5,-342 4948.5,-348 4948.5,-354 4948.5,-354 4948.5,-413 4948.5,-413 4948.5,-419 4942.5,-425 4936.5,-425\"/>\n",
       "<text text-anchor=\"middle\" x=\"4888\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Duration &lt;= 16.5</text>\n",
       "<text text-anchor=\"middle\" x=\"4888\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.94</text>\n",
       "<text text-anchor=\"middle\" x=\"4888\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 14</text>\n",
       "<text text-anchor=\"middle\" x=\"4888\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [5, 9]</text>\n",
       "<text text-anchor=\"middle\" x=\"4888\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 135&#45;&gt;136 -->\n",
       "<g id=\"edge136\" class=\"edge\">\n",
       "<title>135&#45;&gt;136</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5033.8625,-467.7604C5009.9589,-453.952 4982.3067,-437.9781 4957.5475,-423.6755\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4958.9787,-420.4603 4948.5689,-418.4888 4955.4772,-426.5216 4958.9787,-420.4603\"/>\n",
       "</g>\n",
       "<!-- 143 -->\n",
       "<g id=\"node144\" class=\"node\">\n",
       "<title>143</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.913725\" stroke=\"#000000\" d=\"M5177,-425C5177,-425 5011,-425 5011,-425 5005,-425 4999,-419 4999,-413 4999,-413 4999,-354 4999,-354 4999,-348 5005,-342 5011,-342 5011,-342 5177,-342 5177,-342 5183,-342 5189,-348 5189,-354 5189,-354 5189,-413 5189,-413 5189,-419 5183,-425 5177,-425\"/>\n",
       "<text text-anchor=\"middle\" x=\"5094\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Property_real_estate &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"5094\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.396</text>\n",
       "<text text-anchor=\"middle\" x=\"5094\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 115</text>\n",
       "<text text-anchor=\"middle\" x=\"5094\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [9, 106]</text>\n",
       "<text text-anchor=\"middle\" x=\"5094\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 135&#45;&gt;143 -->\n",
       "<g id=\"edge143\" class=\"edge\">\n",
       "<title>135&#45;&gt;143</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5094,-460.8796C5094,-452.6838 5094,-443.9891 5094,-435.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5097.5001,-435.298 5094,-425.2981 5090.5001,-435.2981 5097.5001,-435.298\"/>\n",
       "</g>\n",
       "<!-- 137 -->\n",
       "<g id=\"node138\" class=\"node\">\n",
       "<title>137</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.776471\" stroke=\"#000000\" d=\"M4793,-306C4793,-306 4639,-306 4639,-306 4633,-306 4627,-300 4627,-294 4627,-294 4627,-235 4627,-235 4627,-229 4633,-223 4639,-223 4639,-223 4793,-223 4793,-223 4799,-223 4805,-229 4805,-235 4805,-235 4805,-294 4805,-294 4805,-300 4799,-306 4793,-306\"/>\n",
       "<text text-anchor=\"middle\" x=\"4716\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">ResidentSince_2.0 &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"4716\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.684</text>\n",
       "<text text-anchor=\"middle\" x=\"4716\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 11</text>\n",
       "<text text-anchor=\"middle\" x=\"4716\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 9]</text>\n",
       "<text text-anchor=\"middle\" x=\"4716\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 136&#45;&gt;137 -->\n",
       "<g id=\"edge137\" class=\"edge\">\n",
       "<title>136&#45;&gt;137</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4827.8427,-341.8796C4813.833,-332.1868 4798.8146,-321.7961 4784.475,-311.8752\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4786.3383,-308.9083 4776.1233,-306.0969 4782.3556,-314.6649 4786.3383,-308.9083\"/>\n",
       "</g>\n",
       "<!-- 142 -->\n",
       "<g id=\"node143\" class=\"node\">\n",
       "<title>142</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M4925.5,-298.5C4925.5,-298.5 4850.5,-298.5 4850.5,-298.5 4844.5,-298.5 4838.5,-292.5 4838.5,-286.5 4838.5,-286.5 4838.5,-242.5 4838.5,-242.5 4838.5,-236.5 4844.5,-230.5 4850.5,-230.5 4850.5,-230.5 4925.5,-230.5 4925.5,-230.5 4931.5,-230.5 4937.5,-236.5 4937.5,-242.5 4937.5,-242.5 4937.5,-286.5 4937.5,-286.5 4937.5,-292.5 4931.5,-298.5 4925.5,-298.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"4888\" y=\"-283.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"4888\" y=\"-268.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 3</text>\n",
       "<text text-anchor=\"middle\" x=\"4888\" y=\"-253.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [3, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"4888\" y=\"-238.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 136&#45;&gt;142 -->\n",
       "<g id=\"edge142\" class=\"edge\">\n",
       "<title>136&#45;&gt;142</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4888,-341.8796C4888,-331.2134 4888,-319.7021 4888,-308.9015\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4891.5001,-308.8149 4888,-298.8149 4884.5001,-308.815 4891.5001,-308.8149\"/>\n",
       "</g>\n",
       "<!-- 138 -->\n",
       "<g id=\"node139\" class=\"node\">\n",
       "<title>138</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M4594.5,-179.5C4594.5,-179.5 4519.5,-179.5 4519.5,-179.5 4513.5,-179.5 4507.5,-173.5 4507.5,-167.5 4507.5,-167.5 4507.5,-123.5 4507.5,-123.5 4507.5,-117.5 4513.5,-111.5 4519.5,-111.5 4519.5,-111.5 4594.5,-111.5 4594.5,-111.5 4600.5,-111.5 4606.5,-117.5 4606.5,-123.5 4606.5,-123.5 4606.5,-167.5 4606.5,-167.5 4606.5,-173.5 4600.5,-179.5 4594.5,-179.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"4557\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"4557\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 7</text>\n",
       "<text text-anchor=\"middle\" x=\"4557\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 7]</text>\n",
       "<text text-anchor=\"middle\" x=\"4557\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 137&#45;&gt;138 -->\n",
       "<g id=\"edge138\" class=\"edge\">\n",
       "<title>137&#45;&gt;138</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4660.3895,-222.8796C4644.2987,-210.8368 4626.7685,-197.7167 4610.7909,-185.7586\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4612.6962,-182.8129 4602.593,-179.623 4608.5018,-188.4171 4612.6962,-182.8129\"/>\n",
       "</g>\n",
       "<!-- 139 -->\n",
       "<g id=\"node140\" class=\"node\">\n",
       "<title>139</title>\n",
       "<path fill=\"transparent\" stroke=\"#000000\" d=\"M4795.5,-187C4795.5,-187 4636.5,-187 4636.5,-187 4630.5,-187 4624.5,-181 4624.5,-175 4624.5,-175 4624.5,-116 4624.5,-116 4624.5,-110 4630.5,-104 4636.5,-104 4636.5,-104 4795.5,-104 4795.5,-104 4801.5,-104 4807.5,-110 4807.5,-116 4807.5,-116 4807.5,-175 4807.5,-175 4807.5,-181 4801.5,-187 4795.5,-187\"/>\n",
       "<text text-anchor=\"middle\" x=\"4716\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">YearsEmployed_&lt;4 &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"4716\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 1.0</text>\n",
       "<text text-anchor=\"middle\" x=\"4716\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 4</text>\n",
       "<text text-anchor=\"middle\" x=\"4716\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 2]</text>\n",
       "<text text-anchor=\"middle\" x=\"4716\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 137&#45;&gt;139 -->\n",
       "<g id=\"edge139\" class=\"edge\">\n",
       "<title>137&#45;&gt;139</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4716,-222.8796C4716,-214.6838 4716,-205.9891 4716,-197.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4719.5001,-197.298 4716,-187.2981 4712.5001,-197.2981 4719.5001,-197.298\"/>\n",
       "</g>\n",
       "<!-- 140 -->\n",
       "<g id=\"node141\" class=\"node\">\n",
       "<title>140</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M4635.5,-68C4635.5,-68 4560.5,-68 4560.5,-68 4554.5,-68 4548.5,-62 4548.5,-56 4548.5,-56 4548.5,-12 4548.5,-12 4548.5,-6 4554.5,0 4560.5,0 4560.5,0 4635.5,0 4635.5,0 4641.5,0 4647.5,-6 4647.5,-12 4647.5,-12 4647.5,-56 4647.5,-56 4647.5,-62 4641.5,-68 4635.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"4598\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"4598\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n",
       "<text text-anchor=\"middle\" x=\"4598\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"4598\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 139&#45;&gt;140 -->\n",
       "<g id=\"edge140\" class=\"edge\">\n",
       "<title>139&#45;&gt;140</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4672.0612,-103.9815C4662.1402,-94.607 4651.6103,-84.6572 4641.6992,-75.2921\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4643.9334,-72.5878 4634.2611,-68.2637 4639.1257,-77.6757 4643.9334,-72.5878\"/>\n",
       "</g>\n",
       "<!-- 141 -->\n",
       "<g id=\"node142\" class=\"node\">\n",
       "<title>141</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M4752.5,-68C4752.5,-68 4677.5,-68 4677.5,-68 4671.5,-68 4665.5,-62 4665.5,-56 4665.5,-56 4665.5,-12 4665.5,-12 4665.5,-6 4671.5,0 4677.5,0 4677.5,0 4752.5,0 4752.5,0 4758.5,0 4764.5,-6 4764.5,-12 4764.5,-12 4764.5,-56 4764.5,-56 4764.5,-62 4758.5,-68 4752.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"4715\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"4715\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n",
       "<text text-anchor=\"middle\" x=\"4715\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 2]</text>\n",
       "<text text-anchor=\"middle\" x=\"4715\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 139&#45;&gt;141 -->\n",
       "<g id=\"edge141\" class=\"edge\">\n",
       "<title>139&#45;&gt;141</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4715.6276,-103.9815C4715.5526,-95.618 4715.4735,-86.7965 4715.3977,-78.3409\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4718.8969,-78.2318 4715.3073,-68.2637 4711.8972,-78.2947 4718.8969,-78.2318\"/>\n",
       "</g>\n",
       "<!-- 144 -->\n",
       "<g id=\"node145\" class=\"node\">\n",
       "<title>144</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.858824\" stroke=\"#000000\" d=\"M5096.5,-306C5096.5,-306 4975.5,-306 4975.5,-306 4969.5,-306 4963.5,-300 4963.5,-294 4963.5,-294 4963.5,-235 4963.5,-235 4963.5,-229 4969.5,-223 4975.5,-223 4975.5,-223 5096.5,-223 5096.5,-223 5102.5,-223 5108.5,-229 5108.5,-235 5108.5,-235 5108.5,-294 5108.5,-294 5108.5,-300 5102.5,-306 5096.5,-306\"/>\n",
       "<text text-anchor=\"middle\" x=\"5036\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Job_unskilled &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"5036\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.539</text>\n",
       "<text text-anchor=\"middle\" x=\"5036\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 73</text>\n",
       "<text text-anchor=\"middle\" x=\"5036\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [9, 64]</text>\n",
       "<text text-anchor=\"middle\" x=\"5036\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 143&#45;&gt;144 -->\n",
       "<g id=\"edge144\" class=\"edge\">\n",
       "<title>143&#45;&gt;144</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5073.7144,-341.8796C5069.5443,-333.3236 5065.1091,-324.2238 5060.8003,-315.3833\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5063.8997,-313.7538 5056.3722,-306.2981 5057.6073,-316.8207 5063.8997,-313.7538\"/>\n",
       "</g>\n",
       "<!-- 151 -->\n",
       "<g id=\"node152\" class=\"node\">\n",
       "<title>151</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M5219.5,-298.5C5219.5,-298.5 5138.5,-298.5 5138.5,-298.5 5132.5,-298.5 5126.5,-292.5 5126.5,-286.5 5126.5,-286.5 5126.5,-242.5 5126.5,-242.5 5126.5,-236.5 5132.5,-230.5 5138.5,-230.5 5138.5,-230.5 5219.5,-230.5 5219.5,-230.5 5225.5,-230.5 5231.5,-236.5 5231.5,-242.5 5231.5,-242.5 5231.5,-286.5 5231.5,-286.5 5231.5,-292.5 5225.5,-298.5 5219.5,-298.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"5179\" y=\"-283.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"5179\" y=\"-268.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 42</text>\n",
       "<text text-anchor=\"middle\" x=\"5179\" y=\"-253.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 42]</text>\n",
       "<text text-anchor=\"middle\" x=\"5179\" y=\"-238.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 143&#45;&gt;151 -->\n",
       "<g id=\"edge151\" class=\"edge\">\n",
       "<title>143&#45;&gt;151</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5123.7289,-341.8796C5131.7403,-330.6636 5140.4192,-318.5131 5148.4734,-307.2372\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5151.525,-308.9866 5154.4893,-298.8149 5145.8288,-304.9179 5151.525,-308.9866\"/>\n",
       "</g>\n",
       "<!-- 145 -->\n",
       "<g id=\"node146\" class=\"node\">\n",
       "<title>145</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.913725\" stroke=\"#000000\" d=\"M4992.5,-187C4992.5,-187 4911.5,-187 4911.5,-187 4905.5,-187 4899.5,-181 4899.5,-175 4899.5,-175 4899.5,-116 4899.5,-116 4899.5,-110 4905.5,-104 4911.5,-104 4911.5,-104 4992.5,-104 4992.5,-104 4998.5,-104 5004.5,-110 5004.5,-116 5004.5,-116 5004.5,-175 5004.5,-175 5004.5,-181 4998.5,-187 4992.5,-187\"/>\n",
       "<text text-anchor=\"middle\" x=\"4952\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Age &lt;= 31.5</text>\n",
       "<text text-anchor=\"middle\" x=\"4952\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.4</text>\n",
       "<text text-anchor=\"middle\" x=\"4952\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 63</text>\n",
       "<text text-anchor=\"middle\" x=\"4952\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [5, 58]</text>\n",
       "<text text-anchor=\"middle\" x=\"4952\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 144&#45;&gt;145 -->\n",
       "<g id=\"edge145\" class=\"edge\">\n",
       "<title>144&#45;&gt;145</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5006.6209,-222.8796C5000.3906,-214.0534 4993.7519,-204.6485 4987.327,-195.5466\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4990.1308,-193.4494 4981.5045,-187.2981 4984.412,-197.4862 4990.1308,-193.4494\"/>\n",
       "</g>\n",
       "<!-- 148 -->\n",
       "<g id=\"node149\" class=\"node\">\n",
       "<title>148</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.333333\" stroke=\"#000000\" d=\"M5181.5,-187C5181.5,-187 5034.5,-187 5034.5,-187 5028.5,-187 5022.5,-181 5022.5,-175 5022.5,-175 5022.5,-116 5022.5,-116 5022.5,-110 5028.5,-104 5034.5,-104 5034.5,-104 5181.5,-104 5181.5,-104 5187.5,-104 5193.5,-110 5193.5,-116 5193.5,-116 5193.5,-175 5193.5,-175 5193.5,-181 5187.5,-187 5181.5,-187\"/>\n",
       "<text text-anchor=\"middle\" x=\"5108\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Purpose_furniture &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"5108\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.971</text>\n",
       "<text text-anchor=\"middle\" x=\"5108\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 10</text>\n",
       "<text text-anchor=\"middle\" x=\"5108\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [4, 6]</text>\n",
       "<text text-anchor=\"middle\" x=\"5108\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 144&#45;&gt;148 -->\n",
       "<g id=\"edge148\" class=\"edge\">\n",
       "<title>144&#45;&gt;148</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5061.1821,-222.8796C5066.4133,-214.2335 5071.9805,-205.0322 5077.3823,-196.1042\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5080.5283,-197.6658 5082.7104,-187.2981 5074.5392,-194.0421 5080.5283,-197.6658\"/>\n",
       "</g>\n",
       "<!-- 146 -->\n",
       "<g id=\"node147\" class=\"node\">\n",
       "<title>146</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.800000\" stroke=\"#000000\" d=\"M4877,-68C4877,-68 4795,-68 4795,-68 4789,-68 4783,-62 4783,-56 4783,-56 4783,-12 4783,-12 4783,-6 4789,0 4795,0 4795,0 4877,0 4877,0 4883,0 4889,-6 4889,-12 4889,-12 4889,-56 4889,-56 4889,-62 4883,-68 4877,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"4836\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.65</text>\n",
       "<text text-anchor=\"middle\" x=\"4836\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 24</text>\n",
       "<text text-anchor=\"middle\" x=\"4836\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [4, 20]</text>\n",
       "<text text-anchor=\"middle\" x=\"4836\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 145&#45;&gt;146 -->\n",
       "<g id=\"edge146\" class=\"edge\">\n",
       "<title>145&#45;&gt;146</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4908.8059,-103.9815C4899.0531,-94.607 4888.7017,-84.6572 4878.9586,-75.2921\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4881.2815,-72.6702 4871.6465,-68.2637 4876.4306,-77.7169 4881.2815,-72.6702\"/>\n",
       "</g>\n",
       "<!-- 147 -->\n",
       "<g id=\"node148\" class=\"node\">\n",
       "<title>147</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.972549\" stroke=\"#000000\" d=\"M5009,-68C5009,-68 4919,-68 4919,-68 4913,-68 4907,-62 4907,-56 4907,-56 4907,-12 4907,-12 4907,-6 4913,0 4919,0 4919,0 5009,0 5009,0 5015,0 5021,-6 5021,-12 5021,-12 5021,-56 5021,-56 5021,-62 5015,-68 5009,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"4964\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.172</text>\n",
       "<text text-anchor=\"middle\" x=\"4964\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 39</text>\n",
       "<text text-anchor=\"middle\" x=\"4964\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 38]</text>\n",
       "<text text-anchor=\"middle\" x=\"4964\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 145&#45;&gt;147 -->\n",
       "<g id=\"edge147\" class=\"edge\">\n",
       "<title>145&#45;&gt;147</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M4956.4684,-103.9815C4957.3685,-95.618 4958.3179,-86.7965 4959.2279,-78.3409\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"4962.7222,-78.5808 4960.3124,-68.2637 4955.7624,-77.8317 4962.7222,-78.5808\"/>\n",
       "</g>\n",
       "<!-- 149 -->\n",
       "<g id=\"node150\" class=\"node\">\n",
       "<title>149</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.666667\" stroke=\"#000000\" d=\"M5141,-68C5141,-68 5051,-68 5051,-68 5045,-68 5039,-62 5039,-56 5039,-56 5039,-12 5039,-12 5039,-6 5045,0 5051,0 5051,0 5141,0 5141,0 5147,0 5153,-6 5153,-12 5153,-12 5153,-56 5153,-56 5153,-62 5147,-68 5141,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"5096\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.811</text>\n",
       "<text text-anchor=\"middle\" x=\"5096\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 8</text>\n",
       "<text text-anchor=\"middle\" x=\"5096\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 6]</text>\n",
       "<text text-anchor=\"middle\" x=\"5096\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 148&#45;&gt;149 -->\n",
       "<g id=\"edge149\" class=\"edge\">\n",
       "<title>148&#45;&gt;149</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5103.5316,-103.9815C5102.6315,-95.618 5101.6821,-86.7965 5100.7721,-78.3409\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5104.2376,-77.8317 5099.6876,-68.2637 5097.2778,-78.5808 5104.2376,-77.8317\"/>\n",
       "</g>\n",
       "<!-- 150 -->\n",
       "<g id=\"node151\" class=\"node\">\n",
       "<title>150</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M5258.5,-68C5258.5,-68 5183.5,-68 5183.5,-68 5177.5,-68 5171.5,-62 5171.5,-56 5171.5,-56 5171.5,-12 5171.5,-12 5171.5,-6 5177.5,0 5183.5,0 5183.5,0 5258.5,0 5258.5,0 5264.5,0 5270.5,-6 5270.5,-12 5270.5,-12 5270.5,-56 5270.5,-56 5270.5,-62 5264.5,-68 5258.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"5221\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"5221\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n",
       "<text text-anchor=\"middle\" x=\"5221\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"5221\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 148&#45;&gt;150 -->\n",
       "<g id=\"edge150\" class=\"edge\">\n",
       "<title>148&#45;&gt;150</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5150.077,-103.9815C5159.5776,-94.607 5169.6613,-84.6572 5179.1524,-75.2921\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5181.6155,-77.7787 5186.2754,-68.2637 5176.6989,-72.796 5181.6155,-77.7787\"/>\n",
       "</g>\n",
       "<!-- 153 -->\n",
       "<g id=\"node154\" class=\"node\">\n",
       "<title>153</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.223529\" stroke=\"#000000\" d=\"M5402.5,-425C5402.5,-425 5235.5,-425 5235.5,-425 5229.5,-425 5223.5,-419 5223.5,-413 5223.5,-413 5223.5,-354 5223.5,-354 5223.5,-348 5229.5,-342 5235.5,-342 5235.5,-342 5402.5,-342 5402.5,-342 5408.5,-342 5414.5,-348 5414.5,-354 5414.5,-354 5414.5,-413 5414.5,-413 5414.5,-419 5408.5,-425 5402.5,-425\"/>\n",
       "<text text-anchor=\"middle\" x=\"5319\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">YearsEmployed_&gt;=7 &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"5319\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.989</text>\n",
       "<text text-anchor=\"middle\" x=\"5319\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 16</text>\n",
       "<text text-anchor=\"middle\" x=\"5319\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [9, 7]</text>\n",
       "<text text-anchor=\"middle\" x=\"5319\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 152&#45;&gt;153 -->\n",
       "<g id=\"edge153\" class=\"edge\">\n",
       "<title>152&#45;&gt;153</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5319,-460.8796C5319,-452.6838 5319,-443.9891 5319,-435.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5322.5001,-435.298 5319,-425.2981 5315.5001,-435.2981 5322.5001,-435.298\"/>\n",
       "</g>\n",
       "<!-- 160 -->\n",
       "<g id=\"node161\" class=\"node\">\n",
       "<title>160</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M5519.5,-417.5C5519.5,-417.5 5444.5,-417.5 5444.5,-417.5 5438.5,-417.5 5432.5,-411.5 5432.5,-405.5 5432.5,-405.5 5432.5,-361.5 5432.5,-361.5 5432.5,-355.5 5438.5,-349.5 5444.5,-349.5 5444.5,-349.5 5519.5,-349.5 5519.5,-349.5 5525.5,-349.5 5531.5,-355.5 5531.5,-361.5 5531.5,-361.5 5531.5,-405.5 5531.5,-405.5 5531.5,-411.5 5525.5,-417.5 5519.5,-417.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"5482\" y=\"-402.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"5482\" y=\"-387.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 6</text>\n",
       "<text text-anchor=\"middle\" x=\"5482\" y=\"-372.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 6]</text>\n",
       "<text text-anchor=\"middle\" x=\"5482\" y=\"-357.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 152&#45;&gt;160 -->\n",
       "<g id=\"edge160\" class=\"edge\">\n",
       "<title>152&#45;&gt;160</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5376.0095,-460.8796C5392.5051,-448.8368 5410.4763,-435.7167 5426.8559,-423.7586\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5429.2472,-426.3463 5435.26,-417.623 5425.1196,-420.6927 5429.2472,-426.3463\"/>\n",
       "</g>\n",
       "<!-- 154 -->\n",
       "<g id=\"node155\" class=\"node\">\n",
       "<title>154</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.666667\" stroke=\"#000000\" d=\"M5404.5,-306C5404.5,-306 5265.5,-306 5265.5,-306 5259.5,-306 5253.5,-300 5253.5,-294 5253.5,-294 5253.5,-235 5253.5,-235 5253.5,-229 5259.5,-223 5265.5,-223 5265.5,-223 5404.5,-223 5404.5,-223 5410.5,-223 5416.5,-229 5416.5,-235 5416.5,-235 5416.5,-294 5416.5,-294 5416.5,-300 5410.5,-306 5404.5,-306\"/>\n",
       "<text text-anchor=\"middle\" x=\"5335\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Dependents_2.0 &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"5335\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.811</text>\n",
       "<text text-anchor=\"middle\" x=\"5335\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 12</text>\n",
       "<text text-anchor=\"middle\" x=\"5335\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [9, 3]</text>\n",
       "<text text-anchor=\"middle\" x=\"5335\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 153&#45;&gt;154 -->\n",
       "<g id=\"edge154\" class=\"edge\">\n",
       "<title>153&#45;&gt;154</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5324.596,-341.8796C5325.7101,-333.5938 5326.8927,-324.798 5328.0458,-316.2216\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5331.5162,-316.6753 5329.3801,-306.2981 5324.5787,-315.7425 5331.5162,-316.6753\"/>\n",
       "</g>\n",
       "<!-- 159 -->\n",
       "<g id=\"node160\" class=\"node\">\n",
       "<title>159</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M5521.5,-298.5C5521.5,-298.5 5446.5,-298.5 5446.5,-298.5 5440.5,-298.5 5434.5,-292.5 5434.5,-286.5 5434.5,-286.5 5434.5,-242.5 5434.5,-242.5 5434.5,-236.5 5440.5,-230.5 5446.5,-230.5 5446.5,-230.5 5521.5,-230.5 5521.5,-230.5 5527.5,-230.5 5533.5,-236.5 5533.5,-242.5 5533.5,-242.5 5533.5,-286.5 5533.5,-286.5 5533.5,-292.5 5527.5,-298.5 5521.5,-298.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"5484\" y=\"-283.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"5484\" y=\"-268.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 4</text>\n",
       "<text text-anchor=\"middle\" x=\"5484\" y=\"-253.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 4]</text>\n",
       "<text text-anchor=\"middle\" x=\"5484\" y=\"-238.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 153&#45;&gt;159 -->\n",
       "<g id=\"edge159\" class=\"edge\">\n",
       "<title>153&#45;&gt;159</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5376.709,-341.8796C5393.407,-329.8368 5411.5987,-316.7167 5428.1793,-304.7586\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5430.6232,-307.3113 5436.6865,-298.623 5426.5285,-301.6339 5430.6232,-307.3113\"/>\n",
       "</g>\n",
       "<!-- 155 -->\n",
       "<g id=\"node156\" class=\"node\">\n",
       "<title>155</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.890196\" stroke=\"#000000\" d=\"M5417.5,-187C5417.5,-187 5256.5,-187 5256.5,-187 5250.5,-187 5244.5,-181 5244.5,-175 5244.5,-175 5244.5,-116 5244.5,-116 5244.5,-110 5250.5,-104 5256.5,-104 5256.5,-104 5417.5,-104 5417.5,-104 5423.5,-104 5429.5,-110 5429.5,-116 5429.5,-116 5429.5,-175 5429.5,-175 5429.5,-181 5423.5,-187 5417.5,-187\"/>\n",
       "<text text-anchor=\"middle\" x=\"5337\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">InstallmentRate_3.0 &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"5337\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.469</text>\n",
       "<text text-anchor=\"middle\" x=\"5337\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 10</text>\n",
       "<text text-anchor=\"middle\" x=\"5337\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [9, 1]</text>\n",
       "<text text-anchor=\"middle\" x=\"5337\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 154&#45;&gt;155 -->\n",
       "<g id=\"edge155\" class=\"edge\">\n",
       "<title>154&#45;&gt;155</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5335.6995,-222.8796C5335.8372,-214.6838 5335.9834,-205.9891 5336.126,-197.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5339.6289,-197.3555 5336.2975,-187.2981 5332.6299,-197.2378 5339.6289,-197.3555\"/>\n",
       "</g>\n",
       "<!-- 158 -->\n",
       "<g id=\"node159\" class=\"node\">\n",
       "<title>158</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M5534.5,-179.5C5534.5,-179.5 5459.5,-179.5 5459.5,-179.5 5453.5,-179.5 5447.5,-173.5 5447.5,-167.5 5447.5,-167.5 5447.5,-123.5 5447.5,-123.5 5447.5,-117.5 5453.5,-111.5 5459.5,-111.5 5459.5,-111.5 5534.5,-111.5 5534.5,-111.5 5540.5,-111.5 5546.5,-117.5 5546.5,-123.5 5546.5,-123.5 5546.5,-167.5 5546.5,-167.5 5546.5,-173.5 5540.5,-179.5 5534.5,-179.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"5497\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"5497\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n",
       "<text text-anchor=\"middle\" x=\"5497\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 2]</text>\n",
       "<text text-anchor=\"middle\" x=\"5497\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 154&#45;&gt;158 -->\n",
       "<g id=\"edge158\" class=\"edge\">\n",
       "<title>154&#45;&gt;158</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5391.6597,-222.8796C5408.0541,-210.8368 5425.9151,-197.7167 5442.1942,-185.7586\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5444.5595,-188.3639 5450.5468,-179.623 5440.4154,-182.7224 5444.5595,-188.3639\"/>\n",
       "</g>\n",
       "<!-- 156 -->\n",
       "<g id=\"node157\" class=\"node\">\n",
       "<title>156</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M5375.5,-68C5375.5,-68 5300.5,-68 5300.5,-68 5294.5,-68 5288.5,-62 5288.5,-56 5288.5,-56 5288.5,-12 5288.5,-12 5288.5,-6 5294.5,0 5300.5,0 5300.5,0 5375.5,0 5375.5,0 5381.5,0 5387.5,-6 5387.5,-12 5387.5,-12 5387.5,-56 5387.5,-56 5387.5,-62 5381.5,-68 5375.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"5338\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"5338\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 8</text>\n",
       "<text text-anchor=\"middle\" x=\"5338\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [8, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"5338\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 155&#45;&gt;156 -->\n",
       "<g id=\"edge156\" class=\"edge\">\n",
       "<title>155&#45;&gt;156</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5337.3724,-103.9815C5337.4474,-95.618 5337.5265,-86.7965 5337.6023,-78.3409\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5341.1028,-78.2947 5337.6927,-68.2637 5334.1031,-78.2318 5341.1028,-78.2947\"/>\n",
       "</g>\n",
       "<!-- 157 -->\n",
       "<g id=\"node158\" class=\"node\">\n",
       "<title>157</title>\n",
       "<path fill=\"transparent\" stroke=\"#000000\" d=\"M5492.5,-68C5492.5,-68 5417.5,-68 5417.5,-68 5411.5,-68 5405.5,-62 5405.5,-56 5405.5,-56 5405.5,-12 5405.5,-12 5405.5,-6 5411.5,0 5417.5,0 5417.5,0 5492.5,0 5492.5,0 5498.5,0 5504.5,-6 5504.5,-12 5504.5,-12 5504.5,-56 5504.5,-56 5504.5,-62 5498.5,-68 5492.5,-68\"/>\n",
       "<text text-anchor=\"middle\" x=\"5455\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 1.0</text>\n",
       "<text text-anchor=\"middle\" x=\"5455\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n",
       "<text text-anchor=\"middle\" x=\"5455\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 1]</text>\n",
       "<text text-anchor=\"middle\" x=\"5455\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 155&#45;&gt;157 -->\n",
       "<g id=\"edge157\" class=\"edge\">\n",
       "<title>155&#45;&gt;157</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5380.9388,-103.9815C5390.8598,-94.607 5401.3897,-84.6572 5411.3008,-75.2921\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5413.8743,-77.6757 5418.7389,-68.2637 5409.0666,-72.5878 5413.8743,-77.6757\"/>\n",
       "</g>\n",
       "<!-- 163 -->\n",
       "<g id=\"node164\" class=\"node\">\n",
       "<title>163</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M5484.5,-655.5C5484.5,-655.5 5395.5,-655.5 5395.5,-655.5 5389.5,-655.5 5383.5,-649.5 5383.5,-643.5 5383.5,-643.5 5383.5,-599.5 5383.5,-599.5 5383.5,-593.5 5389.5,-587.5 5395.5,-587.5 5395.5,-587.5 5484.5,-587.5 5484.5,-587.5 5490.5,-587.5 5496.5,-593.5 5496.5,-599.5 5496.5,-599.5 5496.5,-643.5 5496.5,-643.5 5496.5,-649.5 5490.5,-655.5 5484.5,-655.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"5440\" y=\"-640.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"5440\" y=\"-625.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 114</text>\n",
       "<text text-anchor=\"middle\" x=\"5440\" y=\"-610.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 114]</text>\n",
       "<text text-anchor=\"middle\" x=\"5440\" y=\"-595.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 162&#45;&gt;163 -->\n",
       "<g id=\"edge163\" class=\"edge\">\n",
       "<title>162&#45;&gt;163</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5440,-698.8796C5440,-688.2134 5440,-676.7021 5440,-665.9015\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5443.5001,-665.8149 5440,-655.8149 5436.5001,-665.815 5443.5001,-665.8149\"/>\n",
       "</g>\n",
       "<!-- 164 -->\n",
       "<g id=\"node165\" class=\"node\">\n",
       "<title>164</title>\n",
       "<path fill=\"#399de5\" fill-opacity=\"0.666667\" stroke=\"#000000\" d=\"M5644,-663C5644,-663 5554,-663 5554,-663 5548,-663 5542,-657 5542,-651 5542,-651 5542,-592 5542,-592 5542,-586 5548,-580 5554,-580 5554,-580 5644,-580 5644,-580 5650,-580 5656,-586 5656,-592 5656,-592 5656,-651 5656,-651 5656,-657 5650,-663 5644,-663\"/>\n",
       "<text text-anchor=\"middle\" x=\"5599\" y=\"-647.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Age &lt;= 32.5</text>\n",
       "<text text-anchor=\"middle\" x=\"5599\" y=\"-632.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.811</text>\n",
       "<text text-anchor=\"middle\" x=\"5599\" y=\"-617.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 8</text>\n",
       "<text text-anchor=\"middle\" x=\"5599\" y=\"-602.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 6]</text>\n",
       "<text text-anchor=\"middle\" x=\"5599\" y=\"-587.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 162&#45;&gt;164 -->\n",
       "<g id=\"edge164\" class=\"edge\">\n",
       "<title>162&#45;&gt;164</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5495.6105,-698.8796C5508.4403,-689.2774 5522.1852,-678.9903 5535.3286,-669.1534\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5537.5121,-671.891 5543.4209,-663.0969 5533.3177,-666.2868 5537.5121,-671.891\"/>\n",
       "</g>\n",
       "<!-- 165 -->\n",
       "<g id=\"node166\" class=\"node\">\n",
       "<title>165</title>\n",
       "<path fill=\"#e58139\" fill-opacity=\"0.498039\" stroke=\"#000000\" d=\"M5657,-544C5657,-544 5541,-544 5541,-544 5535,-544 5529,-538 5529,-532 5529,-532 5529,-473 5529,-473 5529,-467 5535,-461 5541,-461 5541,-461 5657,-461 5657,-461 5663,-461 5669,-467 5669,-473 5669,-473 5669,-532 5669,-532 5669,-538 5663,-544 5657,-544\"/>\n",
       "<text text-anchor=\"middle\" x=\"5599\" y=\"-528.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Property_car &lt;= 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"5599\" y=\"-513.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.918</text>\n",
       "<text text-anchor=\"middle\" x=\"5599\" y=\"-498.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 3</text>\n",
       "<text text-anchor=\"middle\" x=\"5599\" y=\"-483.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 1]</text>\n",
       "<text text-anchor=\"middle\" x=\"5599\" y=\"-468.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 164&#45;&gt;165 -->\n",
       "<g id=\"edge165\" class=\"edge\">\n",
       "<title>164&#45;&gt;165</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5599,-579.8796C5599,-571.6838 5599,-562.9891 5599,-554.5013\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5602.5001,-554.298 5599,-544.2981 5595.5001,-554.2981 5602.5001,-554.298\"/>\n",
       "</g>\n",
       "<!-- 168 -->\n",
       "<g id=\"node169\" class=\"node\">\n",
       "<title>168</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M5774.5,-536.5C5774.5,-536.5 5699.5,-536.5 5699.5,-536.5 5693.5,-536.5 5687.5,-530.5 5687.5,-524.5 5687.5,-524.5 5687.5,-480.5 5687.5,-480.5 5687.5,-474.5 5693.5,-468.5 5699.5,-468.5 5699.5,-468.5 5774.5,-468.5 5774.5,-468.5 5780.5,-468.5 5786.5,-474.5 5786.5,-480.5 5786.5,-480.5 5786.5,-524.5 5786.5,-524.5 5786.5,-530.5 5780.5,-536.5 5774.5,-536.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"5737\" y=\"-521.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"5737\" y=\"-506.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 5</text>\n",
       "<text text-anchor=\"middle\" x=\"5737\" y=\"-491.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 5]</text>\n",
       "<text text-anchor=\"middle\" x=\"5737\" y=\"-476.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 164&#45;&gt;168 -->\n",
       "<g id=\"edge168\" class=\"edge\">\n",
       "<title>164&#45;&gt;168</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5647.2657,-579.8796C5660.9101,-568.1138 5675.7469,-555.3197 5689.3546,-543.5855\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5691.9187,-545.9961 5697.2062,-536.8149 5687.3473,-540.6948 5691.9187,-545.9961\"/>\n",
       "</g>\n",
       "<!-- 166 -->\n",
       "<g id=\"node167\" class=\"node\">\n",
       "<title>166</title>\n",
       "<path fill=\"#e58139\" stroke=\"#000000\" d=\"M5636.5,-417.5C5636.5,-417.5 5561.5,-417.5 5561.5,-417.5 5555.5,-417.5 5549.5,-411.5 5549.5,-405.5 5549.5,-405.5 5549.5,-361.5 5549.5,-361.5 5549.5,-355.5 5555.5,-349.5 5561.5,-349.5 5561.5,-349.5 5636.5,-349.5 5636.5,-349.5 5642.5,-349.5 5648.5,-355.5 5648.5,-361.5 5648.5,-361.5 5648.5,-405.5 5648.5,-405.5 5648.5,-411.5 5642.5,-417.5 5636.5,-417.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"5599\" y=\"-402.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"5599\" y=\"-387.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n",
       "<text text-anchor=\"middle\" x=\"5599\" y=\"-372.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 0]</text>\n",
       "<text text-anchor=\"middle\" x=\"5599\" y=\"-357.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = good</text>\n",
       "</g>\n",
       "<!-- 165&#45;&gt;166 -->\n",
       "<g id=\"edge166\" class=\"edge\">\n",
       "<title>165&#45;&gt;166</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5599,-460.8796C5599,-450.2134 5599,-438.7021 5599,-427.9015\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5602.5001,-427.8149 5599,-417.8149 5595.5001,-427.815 5602.5001,-427.8149\"/>\n",
       "</g>\n",
       "<!-- 167 -->\n",
       "<g id=\"node168\" class=\"node\">\n",
       "<title>167</title>\n",
       "<path fill=\"#399de5\" stroke=\"#000000\" d=\"M5753.5,-417.5C5753.5,-417.5 5678.5,-417.5 5678.5,-417.5 5672.5,-417.5 5666.5,-411.5 5666.5,-405.5 5666.5,-405.5 5666.5,-361.5 5666.5,-361.5 5666.5,-355.5 5672.5,-349.5 5678.5,-349.5 5678.5,-349.5 5753.5,-349.5 5753.5,-349.5 5759.5,-349.5 5765.5,-355.5 5765.5,-361.5 5765.5,-361.5 5765.5,-405.5 5765.5,-405.5 5765.5,-411.5 5759.5,-417.5 5753.5,-417.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"5716\" y=\"-402.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"5716\" y=\"-387.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n",
       "<text text-anchor=\"middle\" x=\"5716\" y=\"-372.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 1]</text>\n",
       "<text text-anchor=\"middle\" x=\"5716\" y=\"-357.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = bad</text>\n",
       "</g>\n",
       "<!-- 165&#45;&gt;167 -->\n",
       "<g id=\"edge167\" class=\"edge\">\n",
       "<title>165&#45;&gt;167</title>\n",
       "<path fill=\"none\" stroke=\"#000000\" d=\"M5639.9209,-460.8796C5651.2728,-449.3337 5663.5982,-436.7976 5674.957,-425.2446\"/>\n",
       "<polygon fill=\"#000000\" stroke=\"#000000\" points=\"5677.7466,-427.3995 5682.2618,-417.8149 5672.7551,-422.4919 5677.7466,-427.3995\"/>\n",
       "</g>\n",
       "</g>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "<graphviz.files.Source at 0x7fe4ee10ab50>"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dt = DecisionTreeClassifier(criterion='entropy', max_depth=9, random_state=1000)\n",
    "dt.fit(X_train, y_train)\n",
    "dot_data = export_graphviz(dt, out_file=None, \n",
    "    feature_names=X.columns,  \n",
    "    class_names=credit_clean['Approve'].unique(),  \n",
    "    filled=True, rounded=True,  \n",
    "    special_characters=False)\n",
    "graph = graphviz.Source(dot_data)\n",
    "graph"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5,1,'Gini')"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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Y3XqQJculhQ6doRatXb/3IIFu7+P4BP+XnKvPYixRo12VyDKzMzkvvvu44MPPmDNmjX/tC7Wrl0bNknst99+e4xjVKxYkS1btsQsVk8SzrngbdoEH35o39eqZQPPZcrAccfBY49ZYmjd2gahk0y4BW05j7377ruMGjWKSZMmkZqayqZNm6hRowYax6SVH08SzrlgZGXBlClw66026Jztzz/t6113wRNPxCeWhx6K2aXr1q3L4sWL83x88+bN7LPPPuy333789ddf9OnTJ2axFEXypWXnXHLLyIBHHoFmzeDkk21soGdPG4QG6/ZRjV+CgOhOf83l3nvv5ZFHHqF69eqMGDFir8cvv/xymjRpQoMGDTjkkENiNrZQVJIoTZqiSktL0+nZtUucc4np779h9GgYMsRmIqlagrj6ajjvPKhY0c4r4tjAggULaNmyZZSDLhny+t2IyAxVLXBZuHc3OediZ9YsSwxvv21rGho2tBlJV14JBxyw9/kx7PZxReNJwjkXXRs2wLBhlhxmzLApp+ecA//6F5x6av5TVGPY7eOKxpOEc674srLgiy8sMXz0kXUvtW4Nzz0Hl1wC++0XdISuiDxJOOeK7rffYOhQeP11+75GDbj2WhtrOOKIoKNzUeCzm5xzBcvZDbR9u3UndewITZvaArjmze3Y77/D8897gihBvCXhnCtYv37Qtat1J73zjpXaTk215HHFFVbKwpVIniScc/kbN86+HnWUVVHt3t0GoTt0SMoV0K5w/C/snAuvTx9bt9Cly+5jf/9ti+BOOcUTRCnhLQnn3N6mToXhwy1J3H03PPVUXAvgucThHwWcc7tt3w733AMnnmj3p0yBJ58MNqYkl5qayqRJk4p1jaFDh9K+ffsoRVQ43pJwzpmZM6FHD5g7F66/Hvr3h8qV7TFfCV1qeUvCudJu1y549FHbxGfdOvjkExg0aHeCAF8JXUThti+dNm0axx13HNWrV6d169Z89dVX/5w/dOhQDjjgAKpUqULTpk155513WLBgAT179uS7776jcuXKVK9ePa6vwVsSzpVmv/wCl19uFVgvughefDHpV0ffdps1imIpwt1L99q+dMWKFRx++OG89dZbnHHGGXz++ed0796dn3/+mYoVK3LLLbfwww8/0KJFC1auXMn69etp2bIlgwYNYvDgwUydOjW2LywMb0k4Vxpl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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "train_accs, test_accs = [], []\n",
    "for i in range(2, 15):\n",
    "    train_acc = dt_eva(X_train, y_train, X_test, y_test, criterion='gini', depth=i)[0]\n",
    "    test_acc = dt_eva(X_train, y_train, X_test, y_test, criterion='gini', depth=i)[1]\n",
    "    train_accs.append(train_acc)\n",
    "    test_accs.append(test_acc)\n",
    "x = np.arange(2, 15)\n",
    "fig, ax = plt.subplots()\n",
    "ax.plot(x, train_accs, 'r-+', label='train')\n",
    "ax.plot(x, test_accs, 'b-', label='test')\n",
    "ax.legend(loc='upper right', fontsize=12)   \n",
    "ax.set_xlabel('Max_depth', fontsize=14) \n",
    "ax.set_ylabel('Accuracy', fontsize=14) \n",
    "ax.set_title('Gini', fontsize=14)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "N.B. Observing these confusion matrices you'll see something very important - for some configurations, the Random Forest **always predicts the majority class**: incidentally these are also the cases which do the best. This highlights (again) the importance of always checking performance against a dummy classifier!!!\n",
    "\n",
    "Additionally, if you want to reproduce your results, you must set the random seed (you can do this with the `random_state` argument). Random forests are...random!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 1.20 ==========\n",
    "Compare the feature importances as estimated with the decision tree and random forest classifiers."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Your Code goes here:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. Linear regression\n",
    "In the second part of the lab we use the [CPU performance](https://archive.ics.uci.edu/ml/datasets/Computer+Hardware) dataset for a simple regression task. Famliarise yourself with the dataset before moving on to the next step. Note that the version we will be using is missing the `Model Name` and `PRP` attributes. Our task will be to use the remaining attributes to predict `ERP` values.\n",
    "\n",
    "Download the dataset and save it in a directory called `datasets` in the same folder that your notebooks live. Alternatively, you can save the dataset in any folder you wish and modify the `data_path` variable below accordingly. We will load our data into a pandas DataFrame structure. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Load the dataset\n",
    "data_path = os.path.join(os.getcwd(), 'datasets', 'cpu.csv')\n",
    "cpu = pd.read_csv(data_path, delimiter = ',')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 2.1 ==========\n",
    "Display the number of data points and attributes in the dataset. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 209 entries, 0 to 208\n",
      "Data columns (total 8 columns):\n",
      "vendor    209 non-null object\n",
      "MYCT      209 non-null float64\n",
      "MMIN      209 non-null float64\n",
      "MMAX      209 non-null float64\n",
      "CACH      209 non-null float64\n",
      "CHMIN     209 non-null float64\n",
      "CHMAX     209 non-null float64\n",
      "ERP       209 non-null float64\n",
      "dtypes: float64(7), object(1)\n",
      "memory usage: 13.1+ KB\n"
     ]
    }
   ],
   "source": [
    "# Your Code goes here:\n",
    "cpu.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 2.2 ==========\n",
    "Get a feeling of the data by using pandas `describe()` method. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>MYCT</th>\n",
       "      <th>MMIN</th>\n",
       "      <th>MMAX</th>\n",
       "      <th>CACH</th>\n",
       "      <th>CHMIN</th>\n",
       "      <th>CHMAX</th>\n",
       "      <th>ERP</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>209.000000</td>\n",
       "      <td>209.000000</td>\n",
       "      <td>209.000000</td>\n",
       "      <td>209.000000</td>\n",
       "      <td>209.000000</td>\n",
       "      <td>209.000000</td>\n",
       "      <td>209.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>203.822967</td>\n",
       "      <td>2867.980861</td>\n",
       "      <td>11796.153110</td>\n",
       "      <td>25.205742</td>\n",
       "      <td>4.698565</td>\n",
       "      <td>18.267943</td>\n",
       "      <td>99.330144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>260.262926</td>\n",
       "      <td>3878.742758</td>\n",
       "      <td>11726.564377</td>\n",
       "      <td>40.628722</td>\n",
       "      <td>6.816274</td>\n",
       "      <td>25.997318</td>\n",
       "      <td>154.757102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>17.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>15.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>50.000000</td>\n",
       "      <td>768.000000</td>\n",
       "      <td>4000.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>28.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>110.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>8000.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>45.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>225.000000</td>\n",
       "      <td>4000.000000</td>\n",
       "      <td>16000.000000</td>\n",
       "      <td>32.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>24.000000</td>\n",
       "      <td>101.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1500.000000</td>\n",
       "      <td>32000.000000</td>\n",
       "      <td>64000.000000</td>\n",
       "      <td>256.000000</td>\n",
       "      <td>52.000000</td>\n",
       "      <td>176.000000</td>\n",
       "      <td>1238.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              MYCT          MMIN          MMAX        CACH       CHMIN  \\\n",
       "count   209.000000    209.000000    209.000000  209.000000  209.000000   \n",
       "mean    203.822967   2867.980861  11796.153110   25.205742    4.698565   \n",
       "std     260.262926   3878.742758  11726.564377   40.628722    6.816274   \n",
       "min      17.000000     64.000000     64.000000    0.000000    0.000000   \n",
       "25%      50.000000    768.000000   4000.000000    0.000000    1.000000   \n",
       "50%     110.000000   2000.000000   8000.000000    8.000000    2.000000   \n",
       "75%     225.000000   4000.000000  16000.000000   32.000000    6.000000   \n",
       "max    1500.000000  32000.000000  64000.000000  256.000000   52.000000   \n",
       "\n",
       "            CHMAX          ERP  \n",
       "count  209.000000   209.000000  \n",
       "mean    18.267943    99.330144  \n",
       "std     25.997318   154.757102  \n",
       "min      0.000000    15.000000  \n",
       "25%      5.000000    28.000000  \n",
       "50%      8.000000    45.000000  \n",
       "75%     24.000000   101.000000  \n",
       "max    176.000000  1238.000000  "
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Your Code goes here:\n",
    "cpu.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 2.3 ==========\n",
    "Display the first 10 data points of the dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>vendor</th>\n",
       "      <th>MYCT</th>\n",
       "      <th>MMIN</th>\n",
       "      <th>MMAX</th>\n",
       "      <th>CACH</th>\n",
       "      <th>CHMIN</th>\n",
       "      <th>CHMAX</th>\n",
       "      <th>ERP</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>adviser</td>\n",
       "      <td>125.0</td>\n",
       "      <td>256.0</td>\n",
       "      <td>6000.0</td>\n",
       "      <td>256.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>128.0</td>\n",
       "      <td>199.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>amdahl</td>\n",
       "      <td>29.0</td>\n",
       "      <td>8000.0</td>\n",
       "      <td>32000.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>253.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>amdahl</td>\n",
       "      <td>29.0</td>\n",
       "      <td>8000.0</td>\n",
       "      <td>32000.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>253.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>amdahl</td>\n",
       "      <td>29.0</td>\n",
       "      <td>8000.0</td>\n",
       "      <td>32000.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>253.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>amdahl</td>\n",
       "      <td>29.0</td>\n",
       "      <td>8000.0</td>\n",
       "      <td>16000.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>132.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>amdahl</td>\n",
       "      <td>26.0</td>\n",
       "      <td>8000.0</td>\n",
       "      <td>32000.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>290.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>amdahl</td>\n",
       "      <td>23.0</td>\n",
       "      <td>16000.0</td>\n",
       "      <td>32000.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>381.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>amdahl</td>\n",
       "      <td>23.0</td>\n",
       "      <td>16000.0</td>\n",
       "      <td>32000.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>381.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>amdahl</td>\n",
       "      <td>23.0</td>\n",
       "      <td>16000.0</td>\n",
       "      <td>64000.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>749.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>amdahl</td>\n",
       "      <td>23.0</td>\n",
       "      <td>32000.0</td>\n",
       "      <td>64000.0</td>\n",
       "      <td>128.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>1238.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    vendor   MYCT     MMIN     MMAX   CACH  CHMIN  CHMAX     ERP\n",
       "0  adviser  125.0    256.0   6000.0  256.0   16.0  128.0   199.0\n",
       "1   amdahl   29.0   8000.0  32000.0   32.0    8.0   32.0   253.0\n",
       "2   amdahl   29.0   8000.0  32000.0   32.0    8.0   32.0   253.0\n",
       "3   amdahl   29.0   8000.0  32000.0   32.0    8.0   32.0   253.0\n",
       "4   amdahl   29.0   8000.0  16000.0   32.0    8.0   16.0   132.0\n",
       "5   amdahl   26.0   8000.0  32000.0   64.0    8.0   32.0   290.0\n",
       "6   amdahl   23.0  16000.0  32000.0   64.0   16.0   32.0   381.0\n",
       "7   amdahl   23.0  16000.0  32000.0   64.0   16.0   32.0   381.0\n",
       "8   amdahl   23.0  16000.0  64000.0   64.0   16.0   32.0   749.0\n",
       "9   amdahl   23.0  32000.0  64000.0  128.0   32.0   64.0  1238.0"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Your Code goes here:\n",
    "cpu.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 2.4 ========== \n",
    "You might have noticed that the `vendor` attribute is categorical. This will give problems when using a linear regression model. For now we can simply remove this attribute. Create a new DataFrame called `cpu_clean` by copying `cpu` but omit the `vendor` attribute. Display the number of samples and attributes in the clean dataset as a sanity check."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 209 entries, 0 to 208\n",
      "Data columns (total 7 columns):\n",
      "MYCT     209 non-null float64\n",
      "MMIN     209 non-null float64\n",
      "MMAX     209 non-null float64\n",
      "CACH     209 non-null float64\n",
      "CHMIN    209 non-null float64\n",
      "CHMAX    209 non-null float64\n",
      "ERP      209 non-null float64\n",
      "dtypes: float64(7)\n",
      "memory usage: 11.5 KB\n"
     ]
    }
   ],
   "source": [
    "# Your Code goes here:\n",
    "cpu_clean = cpu.copy(deep=True)\n",
    "cpu_clean.drop(['vendor'], axis=1, inplace=True)\n",
    "cpu_clean.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 2.5 ==========\n",
    "Now -as always- we want to perform some exploratory data analysis. Remember that our task is to predict `ERP` values, so it's a good idea to inspect individual scatter plots of the target variable (`ERP`) against our input features. For this purpose we will use once again seaborn's pairplot implementation.\n",
    "\n",
    "Create a series of [pairplots](https://seaborn.github.io/generated/seaborn.pairplot.html?highlight=pairplot#seaborn.pairplot) showing the pairwise relationship of `ERP` and the remaining attributes in the data. You can do so by specifying explicitly the `x_vars` and `y_vars` input arguments in the pairplot. *Hnt: Your final plot will consist of 6 subplots each contaning a scatter plot.*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.PairGrid at 0x7fe4ee29c7d0>"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x180 with 6 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Your Code goes here:\n",
    "palette = sns.color_palette('Set2')\n",
    "sns.pairplot(cpu_clean, x_vars=cpu_clean.columns[:-1], y_vars=[cpu_clean.columns[-1]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ERP      1.000000\n",
       "MMAX     0.901202\n",
       "MMIN     0.819292\n",
       "CACH     0.648620\n",
       "CHMIN    0.610580\n",
       "CHMAX    0.592156\n",
       "MYCT    -0.288396\n",
       "Name: ERP, dtype: float64"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cpu_clean.corr()['ERP'].sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 2.6 ==========\n",
    "* Do you think that ERP should be at least partially predictable from the input attributes?\n",
    "* Do any attributes exhibit significant correlations?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "***Your answer goes here:***\n",
    "- Yes, I think that ERP can be partially predictable from the input attributes, considering the relatively high correlations between it with other attributes.\n",
    "- MMAX and MMIN present very high crrelations with ERP."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 2.7 ==========\n",
    "Now we have a feel for the data and we will try fitting a simple linear regression model. Similarly to what we did in the first part of the lab, we want to use cross-validation to evaluate the goodness of the fit.\n",
    "\n",
    "By using the `cpu_clean` dataset extract the raw values for the input features and the target variable and store them in two matrices, called `X` and `y` respectively. \n",
    "\n",
    "Then, split the dataset into training and testing sets by using a 75%-25% split (training/testing).\n",
    "\n",
    "Display the shapes of all matrices involved and double-check that all dimensionalities appear to be as expected."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Your Code goes here:\n",
    "X = cpu_clean.drop(['ERP'], axis=1)\n",
    "y = cpu_clean['ERP']\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, train_size = 0.75, test_size=0.25, random_state=0)\n",
    "\n",
    "X_train.shape[0] + X_test.shape[0] == X.shape[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 2.8 ==========\n",
    "Fit a simple linear regressor by using the [`LinearRegression`](http://scikit-learn.org/0.19/modules/generated/sklearn.linear_model.LinearRegression.html) model in Scikit-learn. Report the training accuracy by using the `score` attribute. What does this represent?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9159042526072215"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Your Code goes here:\n",
    "lr = LinearRegression()\n",
    "lr.fit(X_train, y_train)\n",
    "lr.score(X_train, y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "***Your answer goes here:***\n",
    "According to the explanation in sklearn documentation, the score is calculated by the following formula:\n",
    "$$ R^2 = 1 - \\frac{u}{v} $$\n",
    ", where\n",
    "$$ u = \\sum (y_{true} - y_{pred})^2 $$\n",
    "$$ v = \\sum (y_{true} - \\mu_{y_{true}})^2 $$\n",
    "The best possible score is 1.0."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 2.9 ==========\n",
    "Now report the testing accuracy by using the `score` attribute of the regressor as well as the `r2_score` metric. Confirm that these two yield identical results.\n",
    "\n",
    "How does the accuracy compare to the one reported on the training dataset? Do you think that your model does well on generalising on unseen data? "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.8567872822868501\n",
      "0.8567872822868501\n"
     ]
    }
   ],
   "source": [
    "# Your Code goes here:\n",
    "y_test_pred = lr.predict(X_test)\n",
    "print(lr.score(X_test, y_test))\n",
    "print(r2_score(y_test, y_test_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "***Your answer goes here:***\n",
    "\n",
    "The accuracy score is relatively lower than the one reported on the training dataset. Although its accuracy score on the test set is lower the training set (which is pretty normal), the model generalises fine on unseen data."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 2.10 ==========\n",
    "Now we want to get a feel for how good the fit is, so we wil plot the measured values against the predicted ones. Make use of the function provided below which takes as input arguments the measured (`y_true`) and predicted (`y_pred`) values of a target variable and produces a scatter plot for the two by also including a straight line going through the origin. \n",
    "\n",
    "Where would you expect the points to be for a perfect fit?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [],
   "source": [
    "def fit_scatter(y_true, y_pred):\n",
    "    assert y_true.shape == y_pred.shape\n",
    "    fig, ax = plt.subplots()\n",
    "    ax.scatter(y_true, y_pred)\n",
    "    ax.plot([y_true.min(), y_true.max()], [y_true.min(), y_true.max()], 'k--', lw=4)\n",
    "    ax.set_xlabel('Measured')\n",
    "    ax.set_ylabel('Predicted')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Your Code goes here:\n",
    "fit_scatter(y_test, y_test_pred)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "***Your answer goes here:***\n",
    "\n",
    "All the points will be right on the line for a perfect fit."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [],
   "source": [
    "def learning_curves(model, X, y):\n",
    "    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=10)\n",
    "    train_errors, test_errors = [], []\n",
    "    for m in range(1, len(X_train)):\n",
    "        model.fit(X_train[:m], y_train[:m])\n",
    "        train_errors.append(model.score(X_train[:m], y_train[:m]))\n",
    "        test_errors.append(model.score(X_test, y_test))\n",
    "    plt.plot(train_errors, 'r-+', label='train')\n",
    "    plt.plot(test_errors, 'b-', label='test')\n",
    "    plt.legend(loc='lower right', fontsize=12)   \n",
    "    plt.xlabel('Training set size', fontsize=14) \n",
    "    plt.ylabel('R2_score', fontsize=14)             \n",
    "    return None"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "X = cpu_clean.drop(['ERP'], axis=1)\n",
    "y = cpu_clean['ERP']\n",
    "lr = LinearRegression()\n",
    "learning_curves(lr, X, y)\n",
    "plt.axis([0, 157, 0, 1])                     \n",
    "plt.show()  "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 2.11 ==========\n",
    "Another way of assessing the performance of the model is to inspect the distribution of the errors. Make a histogram plot by using seaborn's `distplot` function. This will also show an estimate of the underlying distribution.\n",
    "\n",
    "Does it look like the errors are normally distributed? Would you trust the fit of the distribution on the graph? Explain why."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1585.1338297227894"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import mean_squared_error\n",
    "mean_squared_error(y_test, y_test_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda3/envs/py3iaml/lib/python3.7/site-packages/scipy/stats/stats.py:1713: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.\n",
      "  return np.add.reduce(sorted[indexer] * weights, axis=axis) / sumval\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Your Code goes here:\n",
    "errors = y_test - y_test_pred\n",
    "ax = sns.distplot(errors)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "***Your answer goes here:***\n",
    "\n",
    "- It looks like the errors are not normally distributed. \n",
    "- ?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ========== Question 2.12 ==========\n",
    "Above we deleted the vendor variable. However, we can use nominal attributes in regression by converting them to numeric, exactly in the same way that we did at the first part of this lab. \n",
    "\n",
    "Now, use the original `cpu` dataset and convert the `vendor` attribute to a numeric one by means of one-hot-encoding. Then train a linear regression model to the data and compare its performance to the one we had previously. Did adding the *binazired vendor* variable help? "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9424485622257467\n",
      "0.7616585981082805\n"
     ]
    }
   ],
   "source": [
    "# Your Code goes here:\n",
    "cpu['vendor'] = cpu['vendor'].astype('category')\n",
    "X1 = pd.get_dummies(cpu.iloc[:,:-1])\n",
    "y1 = cpu['ERP']\n",
    "\n",
    "X1_train, X1_test, y1_train, y1_test = train_test_split(X1, y1, train_size = 0.75, test_size=0.25, random_state=0)\n",
    "lr.fit(X1_train,  y1_train)\n",
    "\n",
    "print(lr.score(X1_train,  y1_train))\n",
    "print(lr.score(X1_test,  y1_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "y1_test_pred = lr.predict(X1_test)\n",
    "fit_scatter(y1_test, y1_test_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2638.054952066799"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mean_squared_error(y1_test, y1_test_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "errors1 = y1_test - y1_test_pred\n",
    "ax = sns.distplot(errors1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "lr = LinearRegression()\n",
    "learning_curves(lr, X1, y1)\n",
    "plt.axis([0, 157, 0, 1])                     \n",
    "plt.show() "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "***Your answer goes here:***"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
